{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/entry.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/entry.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/entry.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/entry.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/",
        "sourceFileName": "entry.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _ChainApi = _interopRequireDefault(require(\"./sdk/ChainApi\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconsole.log('ChainApi---->', _ChainApi.default);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudHJ5LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJDaGFpbkFwaSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaLEVBQTZCQyxpQkFBN0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL2x5ZGlhL0Rlc2t0b3Avd29ya1NwYWNlL2RleC9kZW1heC1icmlkZ2Utc2RrL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hhaW5BcGkgZnJvbSAnLi9zZGsvQ2hhaW5BcGknXG5jb25zb2xlLmxvZygnQ2hhaW5BcGktLS0tPicsIENoYWluQXBpKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "entry.js"
      ],
      "names": [
        "console",
        "log",
        "ChainApi"
      ],
      "mappings": ";;AAAA;;;;AACAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,iBAA7B",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/",
      "sourcesContent": [
        "import ChainApi from './sdk/ChainApi'\nconsole.log('ChainApi---->', ChainApi)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625222646798
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/ChainApi.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/ChainApi.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/ChainApi.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/ChainApi.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
        "sourceFileName": "ChainApi.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar Test = {\n  abc: '1212',\n  r: '456'\n}; // export default ChainApi\n\nvar _default = Test; //\n// import chainWeb3 from './ChainWeb3.js'\n// import { ERC20Token, newERC20Token } from './model/ERC20Token.js'\n// import { SwitchTicketFactory, newSwitchTicketFactory, SwitchTicketPools } from './model/SwitchTicketFactory.js'\n// import { SwitchFarm, newSwitchFarm, SwitchFarmPools } from './model/SwitchFarm.js'\n// import { SwitchAcross, SwitchAcrossHistory } from './model/SwitchAcross.js'\n// import { SwitchTreasury } from './model/SwitchTreasury.js'\n// import { newSwitchQuery } from './model/SwitchQuery.js'\n//\n// var _InstancesCache = {}\n// function ERC20TokenIns(address) {\n//   let ins = _getInstance('ERC20Token', address);\n//   if (!ins) {\n//     ins = new ERC20Token(chainWeb3, address);\n//     _setInstance('ERC20Token', address, ins);\n//   }\n//   return ins\n// }\n//\n// function _getInstance(name, address) {\n//   if (_InstancesCache.hasOwnProperty(name + address.toLocaleLowerCase())) {\n//     return _InstancesCache[name + address.toLocaleLowerCase()];\n//   }\n//   return null;\n// }\n//\n// function _setInstance(name, address, ins) {\n//   console.log('_setInstance:', name, address);\n//   _InstancesCache[name + address.toLocaleLowerCase()] = ins;\n// }\n// var ChainApi = {\n//   chainWeb3: chainWeb3,\n//   ERC20Token: ERC20TokenIns,\n//   NewSwitchQuery: newSwitchQuery,\n//   NewERC20Token: newERC20Token,\n//   NewSwitchFarm: newSwitchFarm,\n//   NewSwitchTicketFactory: newSwitchTicketFactory,\n//   switchAcross: new SwitchAcross(chainWeb3),\n//   switchAcrossHistory: new SwitchAcrossHistory(chainWeb3),\n//   switchTreasury: new SwitchTreasury(chainWeb3),\n//   switchTicketPools: new SwitchTicketPools(chainWeb3),\n//   switchTicketFactory: new SwitchTicketFactory(chainWeb3),\n//   switchFarmPools: new SwitchFarmPools(chainWeb3),\n//   switchFarm: new SwitchFarm(chainWeb3),\n// }\n//\n// ChainApi.switchAcross.subscribe(ChainApi.switchAcrossHistory.handleHistory);\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoYWluQXBpLmpzIl0sIm5hbWVzIjpbIlRlc3QiLCJhYmMiLCJyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxJQUFJLEdBQUc7QUFDVEMsRUFBQUEsR0FBRyxFQUFFLE1BREk7QUFFVEMsRUFBQUEsQ0FBQyxFQUFFO0FBRk0sQ0FBWCxDLENBSUE7O2VBQ2VGLEksRUFFZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9seWRpYS9EZXNrdG9wL3dvcmtTcGFjZS9kZXgvZGVtYXgtYnJpZGdlLXNkay9zcmMvc2RrLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBUZXN0ID0ge1xuICBhYmM6ICcxMjEyJyxcbiAgcjogJzQ1Nidcbn1cbi8vIGV4cG9ydCBkZWZhdWx0IENoYWluQXBpXG5leHBvcnQgZGVmYXVsdCBUZXN0XG5cbi8vXG4vLyBpbXBvcnQgY2hhaW5XZWIzIGZyb20gJy4vQ2hhaW5XZWIzLmpzJ1xuLy8gaW1wb3J0IHsgRVJDMjBUb2tlbiwgbmV3RVJDMjBUb2tlbiB9IGZyb20gJy4vbW9kZWwvRVJDMjBUb2tlbi5qcydcbi8vIGltcG9ydCB7IFN3aXRjaFRpY2tldEZhY3RvcnksIG5ld1N3aXRjaFRpY2tldEZhY3RvcnksIFN3aXRjaFRpY2tldFBvb2xzIH0gZnJvbSAnLi9tb2RlbC9Td2l0Y2hUaWNrZXRGYWN0b3J5LmpzJ1xuLy8gaW1wb3J0IHsgU3dpdGNoRmFybSwgbmV3U3dpdGNoRmFybSwgU3dpdGNoRmFybVBvb2xzIH0gZnJvbSAnLi9tb2RlbC9Td2l0Y2hGYXJtLmpzJ1xuLy8gaW1wb3J0IHsgU3dpdGNoQWNyb3NzLCBTd2l0Y2hBY3Jvc3NIaXN0b3J5IH0gZnJvbSAnLi9tb2RlbC9Td2l0Y2hBY3Jvc3MuanMnXG4vLyBpbXBvcnQgeyBTd2l0Y2hUcmVhc3VyeSB9IGZyb20gJy4vbW9kZWwvU3dpdGNoVHJlYXN1cnkuanMnXG4vLyBpbXBvcnQgeyBuZXdTd2l0Y2hRdWVyeSB9IGZyb20gJy4vbW9kZWwvU3dpdGNoUXVlcnkuanMnXG4vL1xuLy8gdmFyIF9JbnN0YW5jZXNDYWNoZSA9IHt9XG4vLyBmdW5jdGlvbiBFUkMyMFRva2VuSW5zKGFkZHJlc3MpIHtcbi8vICAgbGV0IGlucyA9IF9nZXRJbnN0YW5jZSgnRVJDMjBUb2tlbicsIGFkZHJlc3MpO1xuLy8gICBpZiAoIWlucykge1xuLy8gICAgIGlucyA9IG5ldyBFUkMyMFRva2VuKGNoYWluV2ViMywgYWRkcmVzcyk7XG4vLyAgICAgX3NldEluc3RhbmNlKCdFUkMyMFRva2VuJywgYWRkcmVzcywgaW5zKTtcbi8vICAgfVxuLy8gICByZXR1cm4gaW5zXG4vLyB9XG4vL1xuLy8gZnVuY3Rpb24gX2dldEluc3RhbmNlKG5hbWUsIGFkZHJlc3MpIHtcbi8vICAgaWYgKF9JbnN0YW5jZXNDYWNoZS5oYXNPd25Qcm9wZXJ0eShuYW1lICsgYWRkcmVzcy50b0xvY2FsZUxvd2VyQ2FzZSgpKSkge1xuLy8gICAgIHJldHVybiBfSW5zdGFuY2VzQ2FjaGVbbmFtZSArIGFkZHJlc3MudG9Mb2NhbGVMb3dlckNhc2UoKV07XG4vLyAgIH1cbi8vICAgcmV0dXJuIG51bGw7XG4vLyB9XG4vL1xuLy8gZnVuY3Rpb24gX3NldEluc3RhbmNlKG5hbWUsIGFkZHJlc3MsIGlucykge1xuLy8gICBjb25zb2xlLmxvZygnX3NldEluc3RhbmNlOicsIG5hbWUsIGFkZHJlc3MpO1xuLy8gICBfSW5zdGFuY2VzQ2FjaGVbbmFtZSArIGFkZHJlc3MudG9Mb2NhbGVMb3dlckNhc2UoKV0gPSBpbnM7XG4vLyB9XG4vLyB2YXIgQ2hhaW5BcGkgPSB7XG4vLyAgIGNoYWluV2ViMzogY2hhaW5XZWIzLFxuLy8gICBFUkMyMFRva2VuOiBFUkMyMFRva2VuSW5zLFxuLy8gICBOZXdTd2l0Y2hRdWVyeTogbmV3U3dpdGNoUXVlcnksXG4vLyAgIE5ld0VSQzIwVG9rZW46IG5ld0VSQzIwVG9rZW4sXG4vLyAgIE5ld1N3aXRjaEZhcm06IG5ld1N3aXRjaEZhcm0sXG4vLyAgIE5ld1N3aXRjaFRpY2tldEZhY3Rvcnk6IG5ld1N3aXRjaFRpY2tldEZhY3RvcnksXG4vLyAgIHN3aXRjaEFjcm9zczogbmV3IFN3aXRjaEFjcm9zcyhjaGFpbldlYjMpLFxuLy8gICBzd2l0Y2hBY3Jvc3NIaXN0b3J5OiBuZXcgU3dpdGNoQWNyb3NzSGlzdG9yeShjaGFpbldlYjMpLFxuLy8gICBzd2l0Y2hUcmVhc3VyeTogbmV3IFN3aXRjaFRyZWFzdXJ5KGNoYWluV2ViMyksXG4vLyAgIHN3aXRjaFRpY2tldFBvb2xzOiBuZXcgU3dpdGNoVGlja2V0UG9vbHMoY2hhaW5XZWIzKSxcbi8vICAgc3dpdGNoVGlja2V0RmFjdG9yeTogbmV3IFN3aXRjaFRpY2tldEZhY3RvcnkoY2hhaW5XZWIzKSxcbi8vICAgc3dpdGNoRmFybVBvb2xzOiBuZXcgU3dpdGNoRmFybVBvb2xzKGNoYWluV2ViMyksXG4vLyAgIHN3aXRjaEZhcm06IG5ldyBTd2l0Y2hGYXJtKGNoYWluV2ViMyksXG4vLyB9XG4vL1xuLy8gQ2hhaW5BcGkuc3dpdGNoQWNyb3NzLnN1YnNjcmliZShDaGFpbkFwaS5zd2l0Y2hBY3Jvc3NIaXN0b3J5LmhhbmRsZUhpc3RvcnkpO1xuXG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "ChainApi.js"
      ],
      "names": [
        "Test",
        "abc",
        "r"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAG;AACTC,EAAAA,GAAG,EAAE,MADI;AAETC,EAAAA,CAAC,EAAE;AAFM,CAAX,C,CAIA;;eACeF,I,EAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
      "sourcesContent": [
        "var Test = {\n  abc: '1212',\n  r: '456'\n}\n// export default ChainApi\nexport default Test\n\n//\n// import chainWeb3 from './ChainWeb3.js'\n// import { ERC20Token, newERC20Token } from './model/ERC20Token.js'\n// import { SwitchTicketFactory, newSwitchTicketFactory, SwitchTicketPools } from './model/SwitchTicketFactory.js'\n// import { SwitchFarm, newSwitchFarm, SwitchFarmPools } from './model/SwitchFarm.js'\n// import { SwitchAcross, SwitchAcrossHistory } from './model/SwitchAcross.js'\n// import { SwitchTreasury } from './model/SwitchTreasury.js'\n// import { newSwitchQuery } from './model/SwitchQuery.js'\n//\n// var _InstancesCache = {}\n// function ERC20TokenIns(address) {\n//   let ins = _getInstance('ERC20Token', address);\n//   if (!ins) {\n//     ins = new ERC20Token(chainWeb3, address);\n//     _setInstance('ERC20Token', address, ins);\n//   }\n//   return ins\n// }\n//\n// function _getInstance(name, address) {\n//   if (_InstancesCache.hasOwnProperty(name + address.toLocaleLowerCase())) {\n//     return _InstancesCache[name + address.toLocaleLowerCase()];\n//   }\n//   return null;\n// }\n//\n// function _setInstance(name, address, ins) {\n//   console.log('_setInstance:', name, address);\n//   _InstancesCache[name + address.toLocaleLowerCase()] = ins;\n// }\n// var ChainApi = {\n//   chainWeb3: chainWeb3,\n//   ERC20Token: ERC20TokenIns,\n//   NewSwitchQuery: newSwitchQuery,\n//   NewERC20Token: newERC20Token,\n//   NewSwitchFarm: newSwitchFarm,\n//   NewSwitchTicketFactory: newSwitchTicketFactory,\n//   switchAcross: new SwitchAcross(chainWeb3),\n//   switchAcrossHistory: new SwitchAcrossHistory(chainWeb3),\n//   switchTreasury: new SwitchTreasury(chainWeb3),\n//   switchTicketPools: new SwitchTicketPools(chainWeb3),\n//   switchTicketFactory: new SwitchTicketFactory(chainWeb3),\n//   switchFarmPools: new SwitchFarmPools(chainWeb3),\n//   switchFarm: new SwitchFarm(chainWeb3),\n// }\n//\n// ChainApi.switchAcross.subscribe(ChainApi.switchAcrossHistory.handleHistory);\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625222858564
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/ChainWeb3.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/ChainWeb3.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/ChainWeb3.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/ChainWeb3.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
        "sourceFileName": "ChainWeb3.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _web = _interopRequireDefault(require(\"web3\"));\n\nvar _client = _interopRequireDefault(require(\"@walletconnect/client\"));\n\nvar _qrcodeModal = _interopRequireDefault(require(\"@walletconnect/qrcode-modal\"));\n\nvar _Web3Util = _interopRequireDefault(require(\"./Web3Util.js\"));\n\nvar _ChainConfig = require(\"./config/ChainConfig.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar chainWeb3 = null;\n\nfunction transactionReceiptAsync(web3, hash, resolve, reject) {\n  web3.eth.getTransactionReceipt(hash).then(receipt => {\n    if (!receipt) {\n      setTimeout(function () {\n        transactionReceiptAsync(web3, hash, resolve, reject);\n      }, 1000);\n    } else {\n      if (receipt && !receipt.status) {\n        reject(receipt);\n      } else {\n        resolve(receipt);\n      }\n    }\n  }).catch(reject);\n}\n\nclass ChainWeb3 {\n  constructor() {\n    this.tryCount = 0;\n    this.chainInstalled = false;\n    this.connector = null;\n    this.ethereum = null;\n    this.ZERO_ADDR = \"0x0000000000000000000000000000000000000000\";\n    this.account = '';\n    this.accounts = [];\n    this.chainId = 0;\n    this.tokens = [];\n    this.web3 = null;\n    this.web3Util = _Web3Util.default;\n    this.contractHistory = [];\n    this.chainStatusHandles = [];\n    this.accountsHandles = [];\n    this.chainHandles = [];\n    this.apiModules = [];\n    this.myWallets = {};\n  }\n\n  setSession(key, val) {\n    if (val !== undefined) {\n      sessionStorage.setItem(key, val);\n    }\n  }\n\n  getSession(key) {\n    return sessionStorage.getItem(key);\n  }\n\n  handleChainStatus(status) {\n    console.log('handleChainStatus:', status);\n\n    for (const cb of this.chainStatusHandles) {\n      cb(status);\n    }\n  }\n\n  registerModule(module) {\n    this.apiModules.push(module);\n  }\n\n  initModules(chainId) {\n    console.log('initModules...', chainId, this);\n\n    for (let module of this.apiModules) {\n      module.initialize(chainId);\n    }\n\n    for (let module of this.apiModules) {\n      module.initAfter();\n    }\n  }\n\n  cleanModules(chainId) {\n    console.log('cleanModules...', chainId, this);\n\n    for (let module of this.apiModules) {\n      module.clean();\n    }\n  }\n\n  handleNewChain(chainId) {\n    // console.log('handleNewChain:---->', chainId, this);\n    if (!chainId) {\n      chainWeb3.cleanModules();\n      return;\n    }\n\n    let cid = Number(chainId);\n    console.log('handleNewChain:', this.chainId, cid, chainWeb3.chainId);\n    this.chainId = cid;\n    chainWeb3.initModules(cid);\n\n    for (const cb of chainWeb3.chainHandles) {\n      cb(chainId);\n    }\n  }\n\n  walletConnectInit() {\n    const bridge = 'https://bridge.walletconnect.org';\n    this.connector = new _client.default({\n      bridge,\n      qrcodeModal: _qrcodeModal.default\n    }); // check if already connected\n\n    let newAccounts = [];\n\n    if (!this.connector.connected) {\n      console.log('walletConnectInit connect...', this); // create new session\n\n      this.connector.createSession(); // Subscribe to connection events\n\n      this.connector.on('connect', (error, payload) => {\n        console.log(`this.connector.on(\"connect\")`);\n        console.log(JSON.stringify(payload));\n        const {\n          accounts,\n          chainId\n        } = payload.params[0];\n        newAccounts = accounts;\n        this.handleNewChain(chainId);\n        this.handleChainStatus(true);\n        this.handleNewAccounts(accounts);\n      }); // this.handleNewAccounts(newAccounts)\n\n      this.connector.on('session_update', (error, payload) => {\n        const {\n          accounts,\n          chainId\n        } = payload.params[0];\n        console.log('walletConnectInit session_update:', accounts);\n        this.handleNewChain(chainId);\n        this.handleNewAccounts(accounts);\n      });\n      this.connector.on('disconnect', (error, payload) => {\n        console.log(`this.connector.on(\"disconnect\")`);\n        console.log('walletConnectInit disconnect');\n        this.handleNewAccounts([]);\n      });\n    } else {\n      newAccounts = this.connector.accounts;\n      console.log('walletConnectInit connected:', newAccounts);\n      this.handleChainStatus(true);\n      this.handleNewAccounts(newAccounts);\n    }\n\n    console.log('walletConnectInit account:', newAccounts);\n    return newAccounts;\n  }\n\n  connectMetamask() {\n    if (!window.ethereum) {\n      console.log('not found Metamask');\n\n      if (this.tryCount < 1) {\n        setTimeout(() => {\n          this.connectMetamask();\n          this.tryCount++;\n        }, 2000);\n      } else {\n        console.log('not found Metamask, timeout');\n        this.handleChainStatus(false);\n      }\n    } else {\n      this.ethereum = window.ethereum;\n      this.chainConnected();\n    }\n  }\n\n  connectBinance() {\n    if (!window.BinanceChain) {\n      console.log('not found Binance');\n\n      if (this.tryCount < 1) {\n        setTimeout(() => {\n          this.connectBinance();\n          this.tryCount++;\n        }, 2000);\n      } else {\n        console.log('not found Binance, timeout');\n        this.handleChainStatus(false);\n      }\n    } else {\n      this.ethereum = window.BinanceChain;\n      this.chainConnected();\n    }\n  }\n\n  chainConnected() {\n    console.log('chain connected...');\n    this.chainInstalled = true; // console.log('ethereum:', this.ethereum)\n    // console.log('ethereum chainId:', this.ethereum.chainId)\n\n    this.web3 = new _web.default(this.ethereum);\n    this.ethereum.autoRefreshOnNetworkChange = false;\n\n    if (navigator.userAgent.indexOf('BitKeep') == -1) {\n      this.ethereum.on('chainChanged', chainWeb3.handleNewChain);\n      this.ethereum.on('accountsChanged', chainWeb3.handleNewAccounts);\n    }\n\n    this.handleChainStatus(true);\n    console.log('this.chainInstalled:', this.chainInstalled);\n    console.log('this.ethereum:', this.ethereum);\n    console.log('chainClient:', this.getSession('chainClient'));\n\n    if (this.ethereum.chainId) {\n      console.log('ethereum chainid', this.ethereum.chainId);\n      chainWeb3.handleNewChain(this.ethereum.chainId);\n    } else {\n      this.web3.eth.getChainId().then(chainId => {\n        console.log('web chainid', chainId);\n        chainWeb3.handleNewChain(chainId);\n      }).catch(e => {\n        console.log('web3 chainid except:', e);\n      });\n    }\n  }\n\n  handleNewAccounts(newAccounts) {\n    console.log('handleNewAccounts:', chainWeb3.getNetworkVersion(), newAccounts);\n    chainWeb3.accounts = newAccounts;\n\n    if (newAccounts && newAccounts.length > 0) {\n      if (chainWeb3.account != newAccounts[0]) {\n        chainWeb3.initModules(chainWeb3.getNetworkVersion());\n      }\n\n      chainWeb3.account = newAccounts[0];\n      const local = localStorage.getItem('myWallets');\n\n      if (local) {\n        Object.assign(chainWeb3.myWallets, JSON.parse(local));\n      }\n\n      chainWeb3.myWallets[chainWeb3.account.toLowerCase()] = new Date().getTime();\n      localStorage.setItem('myWallets', JSON.stringify(chainWeb3.myWallets));\n      chainWeb3.loadContractHistory();\n    } else {\n      chainWeb3.account = '';\n    }\n\n    for (const cb of chainWeb3.accountsHandles) {\n      cb(newAccounts);\n    }\n  }\n\n  connectChain(to = '') {\n    this.tryCount = 0;\n\n    if (!to) {\n      to = this.getSession('chainClient');\n\n      if (!to) {\n        to = 'm';\n      }\n    }\n\n    console.log('connectChain:', to);\n    this.setSession('chainClient', to);\n\n    if (to == 'b') {\n      this.connectBinance();\n    } else if (to == 'm') {\n      this.connectMetamask();\n    } else if (to == 'w') {\n      this.walletConnectInit();\n    }\n  }\n\n  connect(to = '') {\n    console.log('ChainWeb3 ...');\n\n    if (!to) {\n      to = this.getSession('chainClient');\n\n      if (!to) {\n        to = 'm';\n      }\n    }\n\n    if (this.isConnected()) {\n      console.log('ChainWeb3 isConnected');\n      return Promise.resolve(this.accounts);\n    }\n\n    console.log('ChainWeb3 connect to:', to);\n    this.setSession('chainClient', to);\n    this.tryCount = 0;\n\n    if (to === 'm') {\n      this.connectMetamask();\n\n      if (!this.chainInstalled) {\n        console.log('No Provider!');\n        return Promise.reject('No Provider!');\n      }\n    } else if (to === 'b') {\n      this.connectBinance();\n\n      if (!this.chainInstalled) {\n        console.log('No Provider!');\n        return Promise.reject('No Provider!');\n      }\n    } else if (to === 'w') {\n      return Promise.resolve(this.walletConnectInit());\n    }\n\n    if (this.chainInstalled) {\n      console.log('connect...');\n      return this.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(newAccounts => {\n        console.log('connect accounts', newAccounts);\n        this.handleNewAccounts(newAccounts);\n        return newAccounts;\n      });\n    }\n  }\n\n  disconnect() {\n    if (this.connector && this.connector.connected) {\n      console.log('disconnect this.connector');\n      this.connector.killSession();\n    }\n\n    this.chainInstalled = false;\n    this.handleNewAccounts([]);\n  }\n\n  handleEventLog(abi, receipt, contractName, eventName) {\n    if (!receipt) {\n      console.warn('handleEventLog receipt is null ', contractName, eventName);\n      return;\n    }\n\n    let result = _Web3Util.default.parseEventLog(this.web3, abi, receipt, eventName); // console.log('handleEventLog:', contractName, eventName, result)\n\n\n    let hash = result.hash;\n    let type = contractName.toLocaleUpperCase() + '_' + eventName.toLocaleUpperCase();\n    let tableName = this.chainId + this.getSelectedAddress();\n    const item = {\n      hash: hash,\n      time: new Date().getTime(),\n      type: type,\n      data: result.data,\n      address: result.address\n    }; // console.log('handleEventLog item:', item)\n\n    const local = localStorage.getItem(tableName);\n\n    if (local) {\n      const list = JSON.parse(local);\n      list.unshift(item);\n      localStorage.setItem(tableName, JSON.stringify(list));\n    } else {\n      const list = [];\n      list.unshift(item);\n      localStorage.setItem(tableName, JSON.stringify(list));\n    }\n  }\n\n  onChainStatus(handleChainStatus) {\n    this.chainStatusHandles.push(handleChainStatus);\n  }\n\n  onAccountsChanged(handleNewAccounts) {\n    console.log('onAccountsChanged:', this.accountsHandles);\n    this.accountsHandles.push(handleNewAccounts);\n  }\n\n  onChainChanged(handleChain) {\n    this.chainHandles.push(handleChain);\n  }\n\n  on(event, handler) {\n    this.ethereum.on(event, handler);\n  }\n\n  getAccounts() {\n    console.log('getAccounts');\n\n    if (this.accounts.length > 0) {\n      return Promise.resolve(this.accounts);\n    }\n\n    if (this.connector && this.connector.connected) {\n      return Promise.resolve(this.connector.accounts);\n    }\n\n    if (this.chainInstalled) {\n      return this.ethereum.request({\n        method: 'eth_accounts'\n      });\n    }\n\n    return Promise.resolve([]);\n  }\n\n  isChainConnected() {\n    console.log('isChainConnected');\n\n    if (this.connector && this.connector.connected) {\n      return true;\n    }\n\n    if (window.ethereum) {\n      this.chainInstalled = true;\n      return true;\n    }\n\n    this.chainInstalled = false;\n    return false;\n  }\n\n  isConnected() {\n    console.log('isConnected');\n\n    if (this.connector && this.connector.connected) {\n      return true;\n    }\n\n    if (!this.chainInstalled) {\n      return false;\n    }\n\n    return this.accounts.length > 0;\n  }\n\n  getEtherscanAddress(address, chainId) {\n    if (!chainId) {\n      chainId = this.getNetworkVersion();\n    }\n\n    address = address || this.accounts[0];\n    return _ChainConfig.CHAIN_BROWSER[chainId] + '/address/' + address;\n  }\n\n  getEtherscanTx(tx, chainId) {\n    if (!chainId) {\n      chainId = this.getNetworkVersion();\n    }\n\n    return _ChainConfig.CHAIN_BROWSER[chainId] + '/tx/' + tx;\n  }\n\n  awaitTransactionMined(hash) {\n    let web3 = this.getWeb3();\n    return new Promise(function (resolve, reject) {\n      transactionReceiptAsync(web3, hash, resolve, reject);\n    });\n  }\n\n  getWeb3(force = false) {\n    if (!this.web3 || force) {\n      this.chainId = this.getNetworkVersion();\n      console.log('new web3:', this.chainId, this);\n      this.web3 = new _web.default(_ChainConfig.CHAIN_RPC[this.chainId]);\n      this.initModules(this.chainId);\n    }\n\n    return this.web3;\n  }\n\n  getSelectedAddress() {\n    if (this.accounts.length > 0) {\n      return this.accounts[0];\n    } else if (this.connector && this.connector.connected && this.connector.accounts.length > 0) {\n      return this.connector.accounts[0];\n    } else if (this.ethereum) {\n      return this.ethereum.selectedAddress;\n    }\n\n    console.log('this.getSelectedAddress is null');\n    return '';\n  }\n\n  getContract(abi, address) {\n    if (!abi || !address) {\n      throw 'Illegal getContract address:', address;\n    }\n\n    const web3 = this.getWeb3();\n    return new web3.eth.Contract(abi, address);\n  }\n\n  getNetworkVersion() {\n    let version = 0; // unknown\n\n    if (this.connector && this.connector.connected) {\n      // console.log('this.connector chainId:', this.connector.chainId)\n      version = Number(this.connector.chainId);\n    } else if (this.chainInstalled) {\n      version = Number(this.ethereum.chainId);\n    } // console.log('getNetworkVersion:', version)\n\n\n    return version;\n  }\n\n  sendTransaction(params) {\n    if (this.connector && this.connector.connected) {\n      console.log('sendTransaction this.connector params:', params);\n      return this.connector.sendTransaction(params[0]);\n    }\n\n    console.log('sendTransaction params:', params);\n    return this.ethereum.request({\n      method: 'eth_sendTransaction',\n      params\n    });\n  }\n\n  async executeContract(contract, methodName, value, params, cb) {\n    console.log('executeContract:', methodName, value, params);\n\n    if (!value) {\n      value = 0;\n    }\n\n    value = _Web3Util.default.numberToHex(value);\n    const transParams = {\n      from: this.getSelectedAddress(),\n      value: value\n    };\n\n    if (contract) {\n      transParams['to'] = contract._address;\n      transParams['data'] = contract.methods[methodName](...params).encodeABI();\n    }\n\n    let hash = await this.sendTransaction([transParams]);\n    let inputData = {\n      chainId: this.getNetworkVersion(),\n      transactionHash: hash,\n      inputValues: params\n    };\n\n    if (cb) {\n      cb(inputData);\n    }\n\n    this.handleCall(hash, methodName, 0);\n    let reciept = await this.awaitTransactionMined(hash); // console.log('executeContract reciept:', reciept)\n\n    let status = 2;\n\n    if (reciept.status) {\n      status = 1;\n    }\n\n    if (cb) {\n      cb({ ...inputData,\n        ...reciept\n      });\n    }\n\n    this.handleCall(hash, methodName, status);\n    return reciept;\n  }\n\n  getContractMethods(abi, address) {\n    const web3 = this.getWeb3();\n    return new web3.eth.Contract(abi, address).methods;\n  }\n\n  getContractAddr(name) {\n    return _ChainConfig.ContractsAddr[this.getNetworkVersion()][name];\n  }\n\n  getZeroSymbol() {\n    return _ChainConfig.ChainSymbol.ZeroToken[this.getNetworkVersion()];\n  }\n\n  getWSymbol() {\n    return _ChainConfig.ChainSymbol.WToken[this.getNetworkVersion()];\n  }\n\n  isZeroAddress(addr) {\n    return addr == this.ZERO_ADDR;\n  }\n\n  async getBlockNumber() {\n    let res = await this.web3.eth.getBlockNumber();\n    return Number(res);\n  }\n\n  getBlockSpanTime() {\n    if (this.chainId == 1) {\n      return 13.5;\n    }\n\n    return 3;\n  }\n\n  getBlockToTimes(start, end) {\n    let now = new Date().getTime();\n    let spanTime = (Number(end) - Number(start)) * this.getBlockSpanTime();\n    return now + parseInt(spanTime * 1000);\n  }\n\n  async getNowToEndBlockTime(block) {\n    let currentBlock = await this.getBlockNumber();\n    return this.getBlockToTimes(currentBlock, block);\n  }\n\n  getBlockNumbers(blockNumber, blockTime, targetTime) {\n    let diff = (targetTime - blockTime) / 1000 / this.getBlockSpanTime();\n    return Number(blockNumber) + parseInt(diff);\n  }\n\n  getBlockNumberCount(blockTime, targetTime) {\n    return parseInt((targetTime - blockTime) / 1000 / this.getBlockSpanTime());\n  } // status, 0: pending 1:success 2:fail\n\n\n  handleCall(hash, methodName, status = 0) {\n    if (!hash) {\n      console.warn('handleCall hash is null ', hash, methodName);\n      return;\n    }\n\n    let tableName = 'contractCall' + this.getSelectedAddress();\n    const item = {\n      chainId: this.chainId,\n      hash: hash,\n      time: new Date().getTime(),\n      status: status,\n      funcName: methodName,\n      data: null\n    }; // console.log('handleEventLog item:', item)\n\n    const local = localStorage.getItem(tableName);\n\n    if (local) {\n      let foundI = -1;\n      this.contractHistory.forEach((d, i) => {\n        if (d.hash == item.hash) {\n          foundI = i;\n          return;\n        }\n      });\n\n      if (foundI > -1) {\n        this.contractHistory.splice(foundI, 1);\n      }\n\n      this.contractHistory.unshift(item);\n      localStorage.setItem(tableName, JSON.stringify(this.contractHistory));\n    } else {\n      this.contractHistory.unshift(item);\n      localStorage.setItem(tableName, JSON.stringify(this.contractHistory));\n    }\n  }\n\n  loadContractHistory() {\n    let tableName = 'contractCall' + this.getSelectedAddress();\n    const local = localStorage.getItem(tableName);\n\n    if (local) {\n      this.contractHistory = [...JSON.parse(local)];\n    }\n  }\n\n  cleanContractHistory() {\n    let tableName = 'contractCall' + this.getSelectedAddress();\n    localStorage.removeItem(tableName);\n  }\n\n  getToken(addr) {\n    addr = addr + \"\";\n    addr = addr.toLocaleLowerCase();\n    return this.tokens[addr];\n  }\n  /**\n   * setupNetwork\n   * @param chainId\n   * @returns {Promise<{code: *, flag: boolean}|{code: number, flag: boolean}>}\n   * code:\n   * -32602 not support\n   * 200 switch successfully\n   * 4001 switch cancelled\n   * 401 no provider\n   */\n\n\n  async setupNetwork(chainId) {\n    if (navigator.userAgent.match(/(iPhone|iPod|Android|ios|iOS|iPad|Backerry|WebOS|Symbian|Windows Phone|Phone)/i)) {\n      return {\n        code: -32602,\n        flag: false\n      };\n    }\n\n    let provider = this.ethereum;\n\n    if (provider) {\n      if (chainId) {\n        chainId = parseInt(chainId, 10);\n      } else if (process.env.VUE_APP_CHAIN_ID) {\n        chainId = parseInt(process.env.VUE_APP_CHAIN_ID, 10);\n      } else {\n        return {\n          code: 200,\n          flag: true\n        };\n      }\n\n      const nodes = [_ChainConfig.CHAIN_RPC[chainId]];\n\n      try {\n        await provider.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: _ChainConfig.CHAIN_NAME[chainId],\n            nativeCurrency: {\n              name: _ChainConfig.ChainSymbol.ZeroToken[chainId],\n              symbol: _ChainConfig.ChainSymbol.ZeroToken[chainId].toLowerCase(),\n              decimals: 18\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [_ChainConfig.CHAIN_BROWSER[chainId]]\n          }]\n        });\n        return {\n          code: 200,\n          flag: true\n        };\n      } catch (error) {\n        // console.error('setupNetwork--->', chainId, error)\n        return {\n          code: error.code,\n          flag: false\n        };\n      }\n    } else {\n      console.error('Can\\'t setup the Block network on metamask because window.ethereum is undefined');\n      return {\n        code: 401,\n        flag: false\n      };\n    }\n  }\n\n}\n\nchainWeb3 = new ChainWeb3();\nvar _default = chainWeb3;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ChainWeb3.js"
      ],
      "names": [
        "chainWeb3",
        "transactionReceiptAsync",
        "web3",
        "hash",
        "resolve",
        "reject",
        "eth",
        "getTransactionReceipt",
        "then",
        "receipt",
        "setTimeout",
        "status",
        "catch",
        "ChainWeb3",
        "constructor",
        "tryCount",
        "chainInstalled",
        "connector",
        "ethereum",
        "ZERO_ADDR",
        "account",
        "accounts",
        "chainId",
        "tokens",
        "web3Util",
        "contractHistory",
        "chainStatusHandles",
        "accountsHandles",
        "chainHandles",
        "apiModules",
        "myWallets",
        "setSession",
        "key",
        "val",
        "undefined",
        "sessionStorage",
        "setItem",
        "getSession",
        "getItem",
        "handleChainStatus",
        "console",
        "log",
        "cb",
        "registerModule",
        "module",
        "push",
        "initModules",
        "initialize",
        "initAfter",
        "cleanModules",
        "clean",
        "handleNewChain",
        "cid",
        "Number",
        "walletConnectInit",
        "bridge",
        "WalletConnect",
        "qrcodeModal",
        "QRCodeModal",
        "newAccounts",
        "connected",
        "createSession",
        "on",
        "error",
        "payload",
        "JSON",
        "stringify",
        "params",
        "handleNewAccounts",
        "connectMetamask",
        "window",
        "chainConnected",
        "connectBinance",
        "BinanceChain",
        "Web3",
        "autoRefreshOnNetworkChange",
        "navigator",
        "userAgent",
        "indexOf",
        "getChainId",
        "e",
        "getNetworkVersion",
        "length",
        "local",
        "localStorage",
        "Object",
        "assign",
        "parse",
        "toLowerCase",
        "Date",
        "getTime",
        "loadContractHistory",
        "connectChain",
        "to",
        "connect",
        "isConnected",
        "Promise",
        "request",
        "method",
        "disconnect",
        "killSession",
        "handleEventLog",
        "abi",
        "contractName",
        "eventName",
        "warn",
        "result",
        "parseEventLog",
        "type",
        "toLocaleUpperCase",
        "tableName",
        "getSelectedAddress",
        "item",
        "time",
        "data",
        "address",
        "list",
        "unshift",
        "onChainStatus",
        "onAccountsChanged",
        "onChainChanged",
        "handleChain",
        "event",
        "handler",
        "getAccounts",
        "isChainConnected",
        "getEtherscanAddress",
        "CHAIN_BROWSER",
        "getEtherscanTx",
        "tx",
        "awaitTransactionMined",
        "getWeb3",
        "force",
        "CHAIN_RPC",
        "selectedAddress",
        "getContract",
        "Contract",
        "version",
        "sendTransaction",
        "executeContract",
        "contract",
        "methodName",
        "value",
        "numberToHex",
        "transParams",
        "from",
        "_address",
        "methods",
        "encodeABI",
        "inputData",
        "transactionHash",
        "inputValues",
        "handleCall",
        "reciept",
        "getContractMethods",
        "getContractAddr",
        "name",
        "ContractsAddr",
        "getZeroSymbol",
        "ChainSymbol",
        "ZeroToken",
        "getWSymbol",
        "WToken",
        "isZeroAddress",
        "addr",
        "getBlockNumber",
        "res",
        "getBlockSpanTime",
        "getBlockToTimes",
        "start",
        "end",
        "now",
        "spanTime",
        "parseInt",
        "getNowToEndBlockTime",
        "block",
        "currentBlock",
        "getBlockNumbers",
        "blockNumber",
        "blockTime",
        "targetTime",
        "diff",
        "getBlockNumberCount",
        "funcName",
        "foundI",
        "forEach",
        "d",
        "i",
        "splice",
        "cleanContractHistory",
        "removeItem",
        "getToken",
        "toLocaleLowerCase",
        "setupNetwork",
        "match",
        "code",
        "flag",
        "provider",
        "process",
        "env",
        "VUE_APP_CHAIN_ID",
        "nodes",
        "toString",
        "chainName",
        "CHAIN_NAME",
        "nativeCurrency",
        "symbol",
        "decimals",
        "rpcUrls",
        "blockExplorerUrls"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
      "sourcesContent": [
        "import Web3 from 'web3'\nimport WalletConnect from '@walletconnect/client';\nimport QRCodeModal from '@walletconnect/qrcode-modal';\nimport web3Util from './Web3Util.js'\nimport { CHAIN_RPC, CHAIN_BROWSER, CHAIN_NAME, ContractsAddr, ChainSymbol } from './config/ChainConfig.js'\n\nvar chainWeb3 = null;\n\nfunction transactionReceiptAsync(web3, hash, resolve, reject) {\n    web3.eth.getTransactionReceipt(hash).then(receipt => {\n        if (!receipt) {\n            setTimeout(function () {\n                transactionReceiptAsync(web3, hash, resolve, reject)\n            }, 1000);\n        } else {\n            if (receipt && !receipt.status) {\n                reject(receipt)\n            } else {\n                resolve(receipt)\n            }\n        }\n    }).catch(reject)\n}\nclass ChainWeb3 {\n    constructor() {\n        this.tryCount = 0;\n        this.chainInstalled = false;\n        this.connector = null;\n        this.ethereum = null;\n        this.ZERO_ADDR = \"0x0000000000000000000000000000000000000000\";\n        this.account = '';\n        this.accounts = [];\n        this.chainId = 0;\n        this.tokens = [];\n        this.web3 = null;\n        this.web3Util = web3Util;\n        this.contractHistory = []\n        this.chainStatusHandles = [];\n        this.accountsHandles = [];\n        this.chainHandles = [];\n        this.apiModules = [];\n        this.myWallets = {};\n    }\n\n    setSession(key, val) {\n        if (val !== undefined) {\n            sessionStorage.setItem(key, val);\n        }\n    }\n\n    getSession(key) {\n        return sessionStorage.getItem(key);\n    }\n\n    handleChainStatus(status) {\n        console.log('handleChainStatus:', status)\n        for (const cb of this.chainStatusHandles) {\n            cb(status)\n        }\n    }\n\n    registerModule(module) {\n        this.apiModules.push(module);\n    }\n\n    initModules(chainId) {\n        console.log('initModules...', chainId, this);\n        for (let module of this.apiModules) {\n            module.initialize(chainId);\n        }\n        for (let module of this.apiModules) {\n            module.initAfter();\n        }\n    }\n\n    cleanModules(chainId) {\n        console.log('cleanModules...', chainId, this);\n        for (let module of this.apiModules) {\n            module.clean();\n        }\n    }\n\n    handleNewChain(chainId) {\n        // console.log('handleNewChain:---->', chainId, this);\n        if (!chainId) {\n            chainWeb3.cleanModules();\n            return\n        }\n        let cid = Number(chainId)\n        console.log('handleNewChain:', this.chainId, cid, chainWeb3.chainId);\n        this.chainId = cid\n\n        chainWeb3.initModules(cid)\n\n        for (const cb of chainWeb3.chainHandles) {\n            cb(chainId)\n        }\n    }\n\n    walletConnectInit() {\n        const bridge = 'https://bridge.walletconnect.org';\n        this.connector = new WalletConnect({ bridge, qrcodeModal: QRCodeModal });\n        // check if already connected\n        let newAccounts = []\n        if (!this.connector.connected) {\n            console.log('walletConnectInit connect...', this);\n            // create new session\n            this.connector.createSession()\n            // Subscribe to connection events\n            this.connector.on('connect', (error, payload) => {\n                console.log(`this.connector.on(\"connect\")`,);\n                console.log(JSON.stringify(payload));\n                const { accounts, chainId } = payload.params[0];\n                newAccounts = accounts\n                this.handleNewChain(chainId)\n                this.handleChainStatus(true)\n                this.handleNewAccounts(accounts)\n            })\n            // this.handleNewAccounts(newAccounts)\n            this.connector.on('session_update', (error, payload) => {\n                const { accounts, chainId } = payload.params[0];\n                console.log('walletConnectInit session_update:', accounts);\n                this.handleNewChain(chainId)\n                this.handleNewAccounts(accounts)\n            });\n            this.connector.on('disconnect', (error, payload) => {\n                console.log(`this.connector.on(\"disconnect\")`);\n                console.log('walletConnectInit disconnect');\n                this.handleNewAccounts([])\n            });\n        } else {\n            newAccounts = this.connector.accounts\n            console.log('walletConnectInit connected:', newAccounts);\n            this.handleChainStatus(true)\n            this.handleNewAccounts(newAccounts)\n\n        }\n\n        console.log('walletConnectInit account:', newAccounts)\n        return newAccounts\n    }\n\n    connectMetamask() {\n        if (!window.ethereum) {\n            console.log('not found Metamask')\n            if (this.tryCount < 1) {\n                setTimeout(() => {\n                    this.connectMetamask()\n                    this.tryCount++\n                }, 2000)\n            } else {\n                console.log('not found Metamask, timeout')\n                this.handleChainStatus(false)\n            }\n        } else {\n            this.ethereum = window.ethereum\n            this.chainConnected()\n        }\n    }\n\n    connectBinance() {\n        if (!window.BinanceChain) {\n            console.log('not found Binance')\n            if (this.tryCount < 1) {\n                setTimeout(() => {\n                    this.connectBinance()\n                    this.tryCount++\n                }, 2000)\n            } else {\n                console.log('not found Binance, timeout')\n                this.handleChainStatus(false)\n            }\n        } else {\n            this.ethereum = window.BinanceChain\n            this.chainConnected()\n        }\n    }\n\n    chainConnected() {\n        console.log('chain connected...')\n        this.chainInstalled = true\n        // console.log('ethereum:', this.ethereum)\n        // console.log('ethereum chainId:', this.ethereum.chainId)\n        this.web3 = new Web3(this.ethereum)\n\n        this.ethereum.autoRefreshOnNetworkChange = false\n        if (navigator.userAgent.indexOf('BitKeep') == -1) {\n            this.ethereum.on('chainChanged', chainWeb3.handleNewChain)\n            this.ethereum.on('accountsChanged', chainWeb3.handleNewAccounts)\n        }\n\n        this.handleChainStatus(true)\n        console.log('this.chainInstalled:', this.chainInstalled)\n        console.log('this.ethereum:', this.ethereum)\n\n        console.log('chainClient:', this.getSession('chainClient'))\n\n\n        if (this.ethereum.chainId) {\n            console.log('ethereum chainid', this.ethereum.chainId)\n            chainWeb3.handleNewChain(this.ethereum.chainId)\n        } else {\n            this.web3.eth.getChainId().then((chainId) => {\n                console.log('web chainid', chainId)\n                chainWeb3.handleNewChain(chainId)\n            }).catch(e => {\n                console.log('web3 chainid except:', e)\n            })\n        }\n    }\n\n    handleNewAccounts(newAccounts) {\n        console.log('handleNewAccounts:', chainWeb3.getNetworkVersion(), newAccounts);\n        chainWeb3.accounts = newAccounts\n        if (newAccounts && newAccounts.length > 0) {\n            if (chainWeb3.account != newAccounts[0]) {\n                chainWeb3.initModules(chainWeb3.getNetworkVersion());\n            }\n            chainWeb3.account = newAccounts[0];\n            const local = localStorage.getItem('myWallets');\n            if (local) {\n                Object.assign(chainWeb3.myWallets, JSON.parse(local));\n            }\n            chainWeb3.myWallets[chainWeb3.account.toLowerCase()] = new Date().getTime();\n            localStorage.setItem('myWallets', JSON.stringify(chainWeb3.myWallets));\n            chainWeb3.loadContractHistory();\n        } else {\n            chainWeb3.account = ''\n        }\n        for (const cb of chainWeb3.accountsHandles) {\n            cb(newAccounts)\n        }\n    }\n\n    connectChain(to = '') {\n        this.tryCount = 0\n        if (!to) {\n            to = this.getSession('chainClient')\n            if (!to) {\n                to = 'm'\n            }\n        }\n        console.log('connectChain:', to)\n        this.setSession('chainClient', to)\n        if (to == 'b') {\n            this.connectBinance()\n        } else if (to == 'm') {\n            this.connectMetamask()\n        } else if (to == 'w') {\n            this.walletConnectInit()\n        }\n    }\n\n    connect(to = ''){\n        console.log('ChainWeb3 ...')\n        if (!to) {\n            to = this.getSession('chainClient')\n            if (!to) {\n                to = 'm'\n            }\n        }\n        if (this.isConnected()) {\n            console.log('ChainWeb3 isConnected')\n            return Promise.resolve(this.accounts)\n        }\n        console.log('ChainWeb3 connect to:', to)\n        this.setSession('chainClient', to)\n        this.tryCount = 0\n        if (to === 'm') {\n            this.connectMetamask()\n            if (!this.chainInstalled) {\n                console.log('No Provider!')\n                return Promise.reject('No Provider!')\n            }\n        } else if (to === 'b') {\n            this.connectBinance()\n            if (!this.chainInstalled) {\n                console.log('No Provider!')\n                return Promise.reject('No Provider!')\n            }\n        } else if (to === 'w') {\n            return Promise.resolve(this.walletConnectInit())\n        }\n\n        if (this.chainInstalled) {\n            console.log('connect...')\n            return this.ethereum.request({\n                method: 'eth_requestAccounts',\n            }).then(newAccounts => {\n                console.log('connect accounts', newAccounts)\n                this.handleNewAccounts(newAccounts)\n                return newAccounts\n            })\n        }\n\n    }\n\n    disconnect() {\n        if (this.connector && this.connector.connected) {\n            console.log('disconnect this.connector')\n            this.connector.killSession()\n        }\n        this.chainInstalled = false\n        this.handleNewAccounts([])\n    }\n\n    handleEventLog(abi, receipt, contractName, eventName) {\n        if (!receipt) {\n            console.warn('handleEventLog receipt is null ', contractName, eventName)\n            return\n        }\n        let result = web3Util.parseEventLog(this.web3, abi, receipt, eventName)\n        // console.log('handleEventLog:', contractName, eventName, result)\n        let hash = result.hash\n        let type = contractName.toLocaleUpperCase() + '_' + eventName.toLocaleUpperCase()\n        let tableName = this.chainId + this.getSelectedAddress();\n        const item = {\n            hash: hash,\n            time: new Date().getTime(),\n            type: type,\n            data: result.data,\n            address: result.address\n        };\n        // console.log('handleEventLog item:', item)\n        const local = localStorage.getItem(tableName);\n        if (local) {\n            const list = JSON.parse(local);\n            list.unshift(item);\n            localStorage.setItem(tableName, JSON.stringify(list));\n        } else {\n            const list = [];\n            list.unshift(item);\n            localStorage.setItem(tableName, JSON.stringify(list));\n        }\n    }\n\n    onChainStatus(handleChainStatus) {\n        this.chainStatusHandles.push(handleChainStatus)\n    }\n\n    onAccountsChanged(handleNewAccounts) {\n        console.log('onAccountsChanged:', this.accountsHandles)\n        this.accountsHandles.push(handleNewAccounts)\n    }\n\n    onChainChanged(handleChain) {\n        this.chainHandles.push(handleChain)\n    }\n\n    on(event, handler) {\n        this.ethereum.on(event, handler)\n    }\n\n    getAccounts() {\n        console.log('getAccounts')\n        if (this.accounts.length > 0) {\n            return Promise.resolve(this.accounts)\n        }\n        if (this.connector && this.connector.connected) {\n            return Promise.resolve(this.connector.accounts)\n        }\n        if (this.chainInstalled) {\n            return this.ethereum.request({\n                method: 'eth_accounts',\n            })\n        }\n        return Promise.resolve([])\n    }\n\n    isChainConnected() {\n        console.log('isChainConnected')\n        if (this.connector && this.connector.connected) {\n            return true\n        }\n        if (window.ethereum) {\n            this.chainInstalled = true\n            return true\n        }\n        this.chainInstalled = false\n        return false\n    }\n\n    isConnected() {\n        console.log('isConnected')\n        if (this.connector && this.connector.connected) {\n            return true\n        }\n        if (!this.chainInstalled) {\n            return false\n        }\n        return this.accounts.length > 0\n    }\n\n    getEtherscanAddress(address, chainId) {\n        if (!chainId) {\n            chainId = this.getNetworkVersion()\n        }\n        address = address || this.accounts[0]\n        return CHAIN_BROWSER[chainId] + '/address/' + address\n    }\n\n    getEtherscanTx(tx, chainId) {\n        if (!chainId) {\n            chainId = this.getNetworkVersion()\n        }\n        return CHAIN_BROWSER[chainId] + '/tx/' + tx\n    }\n\n    awaitTransactionMined(hash) {\n        let web3 = this.getWeb3();\n        return new Promise(function (resolve, reject) {\n            transactionReceiptAsync(web3, hash, resolve, reject)\n        })\n    }\n\n    getWeb3(force = false) {\n        if (!this.web3 || force) {\n            this.chainId = this.getNetworkVersion();\n            console.log('new web3:', this.chainId, this);\n            this.web3 = new Web3(CHAIN_RPC[this.chainId])\n\n            this.initModules(this.chainId)\n        }\n        return this.web3\n    }\n\n    getSelectedAddress() {\n        if (this.accounts.length > 0) {\n            return this.accounts[0]\n        } else if (this.connector && this.connector.connected && this.connector.accounts.length > 0) {\n            return this.connector.accounts[0]\n        } else if (this.ethereum) {\n            return this.ethereum.selectedAddress\n        }\n        console.log('this.getSelectedAddress is null')\n        return ''\n    }\n\n    getContract(abi, address) {\n        if (!abi || !address) {\n            throw ('Illegal getContract address:', address);\n        }\n        const web3 = this.getWeb3()\n        return new web3.eth.Contract(abi, address)\n    }\n\n    getNetworkVersion() {\n        let version = 0 // unknown\n        if (this.connector && this.connector.connected) {\n            // console.log('this.connector chainId:', this.connector.chainId)\n            version = Number(this.connector.chainId)\n        } else if (this.chainInstalled) {\n            version = Number(this.ethereum.chainId)\n        }\n        // console.log('getNetworkVersion:', version)\n        return version\n    }\n\n    sendTransaction(params) {\n        if (this.connector && this.connector.connected) {\n            console.log('sendTransaction this.connector params:', params)\n            return this.connector.sendTransaction(params[0])\n        }\n        console.log('sendTransaction params:', params)\n        return this.ethereum\n            .request({\n                method: 'eth_sendTransaction',\n                params,\n            })\n    }\n\n    async executeContract(contract, methodName, value, params, cb) {\n        console.log('executeContract:', methodName, value, params)\n        if (!value) {\n            value = 0\n        }\n        value = web3Util.numberToHex(value)\n        const transParams = {\n            from: this.getSelectedAddress(),\n            value: value,\n        };\n        if (contract) {\n            transParams['to'] = contract._address\n            transParams['data'] = contract.methods[methodName](...params).encodeABI()\n        }\n        let hash = await this.sendTransaction([transParams])\n        let inputData = {\n            chainId: this.getNetworkVersion(),\n            transactionHash: hash,\n            inputValues: params,\n        }\n        if (cb) {\n            cb(inputData)\n        }\n        this.handleCall(hash, methodName, 0)\n        let reciept = await this.awaitTransactionMined(hash)\n        // console.log('executeContract reciept:', reciept)\n        let status = 2\n        if (reciept.status) {\n            status = 1\n        }\n        if (cb) {\n            cb({ ...inputData, ...reciept })\n        }\n        this.handleCall(hash, methodName, status)\n        return reciept\n    }\n\n    getContractMethods(abi, address) {\n        const web3 = this.getWeb3()\n        return new web3.eth.Contract(abi, address).methods\n    }\n\n    getContractAddr(name) {\n        return ContractsAddr[this.getNetworkVersion()][name]\n    }\n\n    getZeroSymbol() {\n        return ChainSymbol.ZeroToken[this.getNetworkVersion()]\n    }\n\n    getWSymbol() {\n        return ChainSymbol.WToken[this.getNetworkVersion()]\n    }\n\n    isZeroAddress(addr) {\n        return addr == this.ZERO_ADDR;\n    }\n\n    async getBlockNumber() {\n        let res = await this.web3.eth.getBlockNumber();\n        return Number(res);\n    }\n\n    getBlockSpanTime() {\n        if (this.chainId == 1) {\n            return 13.5;\n        }\n        return 3;\n    }\n\n    getBlockToTimes(start, end) {\n        let now = new Date().getTime();\n        let spanTime = (Number(end) - Number(start)) * this.getBlockSpanTime();\n        return now + parseInt(spanTime * 1000);\n    }\n\n    async getNowToEndBlockTime(block) {\n        let currentBlock = await this.getBlockNumber();\n        return this.getBlockToTimes(currentBlock, block);\n    }\n\n    getBlockNumbers(blockNumber, blockTime, targetTime) {\n        let diff = (targetTime - blockTime) / 1000 / this.getBlockSpanTime();\n        return Number(blockNumber) + parseInt(diff);\n    }\n\n    getBlockNumberCount(blockTime, targetTime) {\n        return parseInt((targetTime - blockTime) / 1000 / this.getBlockSpanTime());\n    }\n\n    // status, 0: pending 1:success 2:fail\n    handleCall(hash, methodName, status = 0) {\n        if (!hash) {\n            console.warn('handleCall hash is null ', hash, methodName)\n            return\n        }\n        let tableName = 'contractCall' + this.getSelectedAddress();\n        const item = {\n            chainId: this.chainId,\n            hash: hash,\n            time: new Date().getTime(),\n            status: status,\n            funcName: methodName,\n            data: null\n        };\n        // console.log('handleEventLog item:', item)\n        const local = localStorage.getItem(tableName);\n        if (local) {\n\n            let foundI = -1;\n            this.contractHistory.forEach((d, i) => {\n                if (d.hash == item.hash) {\n                    foundI = i\n                    return\n                }\n            })\n            if (foundI > -1) {\n                this.contractHistory.splice(foundI, 1)\n            }\n            this.contractHistory.unshift(item);\n            localStorage.setItem(tableName, JSON.stringify(this.contractHistory));\n        } else {\n            this.contractHistory.unshift(item);\n            localStorage.setItem(tableName, JSON.stringify(this.contractHistory));\n        }\n    }\n\n    loadContractHistory() {\n\n        let tableName = 'contractCall' + this.getSelectedAddress();\n        const local = localStorage.getItem(tableName);\n\n        if (local) {\n            this.contractHistory = [...JSON.parse(local)];\n        }\n    }\n\n    cleanContractHistory() {\n        let tableName = 'contractCall' + this.getSelectedAddress();\n        localStorage.removeItem(tableName);\n    }\n\n    getToken(addr) {\n        addr = addr + \"\"\n        addr = addr.toLocaleLowerCase()\n        return this.tokens[addr]\n    }\n\n    /**\n     * setupNetwork\n     * @param chainId\n     * @returns {Promise<{code: *, flag: boolean}|{code: number, flag: boolean}>}\n     * code:\n     * -32602 not support\n     * 200 switch successfully\n     * 4001 switch cancelled\n     * 401 no provider\n     */\n    async setupNetwork(chainId) {\n        if ((navigator.userAgent.match(/(iPhone|iPod|Android|ios|iOS|iPad|Backerry|WebOS|Symbian|Windows Phone|Phone)/i))) {\n            return {\n                code: -32602,\n                flag: false\n            };\n        }\n        let provider = this.ethereum;\n        if (provider) {\n            if (chainId) {\n                chainId = parseInt(chainId, 10)\n            } else if (process.env.VUE_APP_CHAIN_ID) {\n                chainId = parseInt(process.env.VUE_APP_CHAIN_ID, 10)\n            } else {\n                return {\n                    code: 200,\n                    flag: true\n                }\n            }\n            const nodes = [CHAIN_RPC[chainId]]\n            try {\n                await provider.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [\n                        {\n                            chainId: `0x${chainId.toString(16)}`,\n                            chainName: CHAIN_NAME[chainId],\n                            nativeCurrency: {\n                                name: ChainSymbol.ZeroToken[chainId],\n                                symbol: ChainSymbol.ZeroToken[chainId].toLowerCase(),\n                                decimals: 18,\n                            },\n                            rpcUrls: nodes,\n                            blockExplorerUrls: [CHAIN_BROWSER[chainId]],\n                        },\n                    ],\n                })\n                return {\n                    code: 200,\n                    flag: true\n                }\n            } catch (error) {\n                // console.error('setupNetwork--->', chainId, error)\n                return {\n                    code: error.code,\n                    flag: false\n                }\n            }\n        } else {\n            console.error('Can\\'t setup the Block network on metamask because window.ethereum is undefined')\n            return {\n                code: 401,\n                flag: false\n            }\n        }\n    }\n}\n\nchainWeb3 = new ChainWeb3()\n\nexport default chainWeb3\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625218360622
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/Web3Util.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/Web3Util.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/Web3Util.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/Web3Util.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
        "sourceFileName": "Web3Util.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _web = _interopRequireDefault(require(\"web3\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass Web3Util {\n  constructor() {}\n\n  string2bytes32(val) {\n    let res = _web.default.utils.stringToHex(val);\n\n    res = res + Array(67 - res.length).join('0');\n    return res;\n  }\n\n  keccak256(val) {\n    return _web.default.utils.keccak256(val);\n  }\n\n  hexToBytes(val) {\n    return _web.default.utils.hexToBytes(val);\n  }\n\n  hexToAscii(val) {\n    return _web.default.utils.hexToAscii(val);\n  }\n\n  numberToHex(val) {\n    return _web.default.utils.numberToHex(val);\n  }\n\n  getAbiEventInputs(abi, name) {\n    for (let item of abi) {\n      if (item.type == 'event' && item.name == name) {\n        return item.inputs;\n      }\n    }\n\n    return null;\n  }\n\n  encodeEventName(inputs, name) {\n    if (inputs == null) {\n      return null;\n    } // console.log('inputs:', inputs)\n\n\n    let params = [];\n    inputs.map(o => {\n      params.push(o.type);\n    }); // console.log('params:', params)\n\n    let funcName = name + '(' + params.join(',') + ')'; // console.log('funcName:', funcName)\n\n    let enFuncName = _web.default.utils.sha3(funcName); // console.log('enFuncName:', enFuncName)\n\n\n    return enFuncName;\n  }\n\n  encodeEventTopic(abi, name) {\n    let inputs = this.getAbiEventInputs(abi, name);\n    return this.encodeEventName(inputs, name);\n  }\n\n  decodeEventLog(web3, inputs, data, topics) {\n    data = data.substr(2);\n    let topic = topics.slice();\n    topic.splice(0, 1);\n    let inputData = inputs.slice(); // console.log('parseEventLog params:', inputs, data, topic)\n\n    let result = web3.eth.abi.decodeLog(inputData, data, topic); // console.log('parseEventLog logs:', result)\n\n    return result;\n  }\n\n  findEventLogs(web3, abi, receipt, names = []) {\n    let result = {\n      transactionHash: receipt.transactionHash,\n      blockNumber: Number(receipt.blockNumber),\n      address: receipt.address,\n      data: []\n    };\n\n    for (let i = 0; i < names.length; i++) {\n      let d = this.parseEventLog(web3, abi, receipt, names[i]);\n\n      if (d.eventName) {\n        result.data.push(d);\n      }\n    }\n\n    return result;\n  }\n\n  findEventOneLog(web3, abi, log, names = []) {\n    let result = {\n      eventName: null,\n      transactionHash: log.transactionHash,\n      blockNumber: Number(log.blockNumber),\n      address: log.address,\n      returnValues: {}\n    };\n\n    for (let i = 0; i < names.length; i++) {\n      result = this.parseEventOneLog(web3, abi, log, names[i]);\n\n      if (result.eventName) {\n        return result;\n      }\n    }\n\n    return result;\n  }\n\n  parseEventOneLog(web3, abi, log, name) {\n    let result = {\n      eventName: null,\n      transactionHash: log.transactionHash,\n      blockNumber: Number(log.blockNumber),\n      address: log.address,\n      returnValues: {}\n    };\n    let inputs = this.getAbiEventInputs(abi, name);\n    let topic = this.encodeEventName(inputs, name);\n\n    if (topic == log.topics[0]) {\n      result.returnValues = this.decodeEventLog(web3, inputs, log.data, log.topics);\n      result.eventName = name;\n    }\n\n    console.log('web3 parseEventOneLog:', log, result);\n    return result;\n  }\n\n  parseEventLog(web3, abi, receipt, name) {\n    let result = {\n      eventName: null,\n      transactionHash: receipt.transactionHash,\n      blockNumber: Number(receipt.blockNumber),\n      address: receipt.address,\n      returnValues: {}\n    };\n\n    for (let log of receipt.logs) {\n      let inputs = this.getAbiEventInputs(abi, name);\n      let topic = this.encodeEventName(inputs, name);\n\n      if (topic == log.topics[0]) {\n        result.eventName = name;\n        result.returnValues = this.decodeEventLog(web3, inputs, log.data, log.topics);\n        break;\n      }\n    }\n\n    console.log('web3 parseEventLog:', receipt, result);\n    return result;\n  }\n\n}\n\nvar web3Util = new Web3Util();\nvar _default = web3Util;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Web3Util.js"
      ],
      "names": [
        "Web3Util",
        "constructor",
        "string2bytes32",
        "val",
        "res",
        "Web3",
        "utils",
        "stringToHex",
        "Array",
        "length",
        "join",
        "keccak256",
        "hexToBytes",
        "hexToAscii",
        "numberToHex",
        "getAbiEventInputs",
        "abi",
        "name",
        "item",
        "type",
        "inputs",
        "encodeEventName",
        "params",
        "map",
        "o",
        "push",
        "funcName",
        "enFuncName",
        "sha3",
        "encodeEventTopic",
        "decodeEventLog",
        "web3",
        "data",
        "topics",
        "substr",
        "topic",
        "slice",
        "splice",
        "inputData",
        "result",
        "eth",
        "decodeLog",
        "findEventLogs",
        "receipt",
        "names",
        "transactionHash",
        "blockNumber",
        "Number",
        "address",
        "i",
        "d",
        "parseEventLog",
        "eventName",
        "findEventOneLog",
        "log",
        "returnValues",
        "parseEventOneLog",
        "console",
        "logs",
        "web3Util"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,MAAMA,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG,CACb;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAM;AAChB,QAAIC,GAAG,GAAGC,aAAKC,KAAL,CAAWC,WAAX,CAAuBJ,GAAvB,CAAV;;AACAC,IAAAA,GAAG,GAAGA,GAAG,GAAGI,KAAK,CAAC,KAAKJ,GAAG,CAACK,MAAV,CAAL,CAAuBC,IAAvB,CAA4B,GAA5B,CAAZ;AACA,WAAON,GAAP;AACH;;AAEDO,EAAAA,SAAS,CAACR,GAAD,EAAM;AACX,WAAOE,aAAKC,KAAL,CAAWK,SAAX,CAAqBR,GAArB,CAAP;AACH;;AAEDS,EAAAA,UAAU,CAACT,GAAD,EAAM;AACZ,WAAOE,aAAKC,KAAL,CAAWM,UAAX,CAAsBT,GAAtB,CAAP;AACH;;AAEDU,EAAAA,UAAU,CAACV,GAAD,EAAM;AACZ,WAAOE,aAAKC,KAAL,CAAWO,UAAX,CAAsBV,GAAtB,CAAP;AACH;;AAEDW,EAAAA,WAAW,CAACX,GAAD,EAAM;AACb,WAAOE,aAAKC,KAAL,CAAWQ,WAAX,CAAuBX,GAAvB,CAAP;AACH;;AAEDY,EAAAA,iBAAiB,CAACC,GAAD,EAAMC,IAAN,EAAY;AACzB,SAAI,IAAIC,IAAR,IAAgBF,GAAhB,EAAqB;AACjB,UAAGE,IAAI,CAACC,IAAL,IAAa,OAAb,IAAwBD,IAAI,CAACD,IAAL,IAAaA,IAAxC,EAA8C;AAC1C,eAAOC,IAAI,CAACE,MAAZ;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AAEDC,EAAAA,eAAe,CAACD,MAAD,EAASH,IAAT,EAAe;AAC1B,QAAIG,MAAM,IAAI,IAAd,EAAoB;AAChB,aAAO,IAAP;AACH,KAHyB,CAI1B;;;AACA,QAAIE,MAAM,GAAG,EAAb;AACAF,IAAAA,MAAM,CAACG,GAAP,CAAWC,CAAC,IAAE;AACVF,MAAAA,MAAM,CAACG,IAAP,CAAYD,CAAC,CAACL,IAAd;AACH,KAFD,EAN0B,CAS1B;;AACA,QAAIO,QAAQ,GAAGT,IAAI,GAAC,GAAL,GAASK,MAAM,CAACZ,IAAP,CAAY,GAAZ,CAAT,GAA0B,GAAzC,CAV0B,CAW1B;;AACA,QAAIiB,UAAU,GAAGtB,aAAKC,KAAL,CAAWsB,IAAX,CAAgBF,QAAhB,CAAjB,CAZ0B,CAa1B;;;AACA,WAAOC,UAAP;AACH;;AAEDE,EAAAA,gBAAgB,CAACb,GAAD,EAAMC,IAAN,EAAY;AACxB,QAAIG,MAAM,GAAG,KAAKL,iBAAL,CAAuBC,GAAvB,EAA4BC,IAA5B,CAAb;AACA,WAAO,KAAKI,eAAL,CAAqBD,MAArB,EAA6BH,IAA7B,CAAP;AACH;;AAEDa,EAAAA,cAAc,CAACC,IAAD,EAAOX,MAAP,EAAeY,IAAf,EAAqBC,MAArB,EAA6B;AACvCD,IAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAP;AAEA,QAAIC,KAAK,GAAGF,MAAM,CAACG,KAAP,EAAZ;AACAD,IAAAA,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACA,QAAIC,SAAS,GAAGlB,MAAM,CAACgB,KAAP,EAAhB,CALuC,CAMvC;;AACA,QAAIG,MAAM,GAAGR,IAAI,CAACS,GAAL,CAASxB,GAAT,CAAayB,SAAb,CAAuBH,SAAvB,EAAkCN,IAAlC,EAAwCG,KAAxC,CAAb,CAPuC,CAQvC;;AACA,WAAOI,MAAP;AACH;;AAEDG,EAAAA,aAAa,CAACX,IAAD,EAAOf,GAAP,EAAY2B,OAAZ,EAAqBC,KAAK,GAAC,EAA3B,EAA+B;AACxC,QAAIL,MAAM,GAAG;AACTM,MAAAA,eAAe,EAAEF,OAAO,CAACE,eADhB;AAETC,MAAAA,WAAW,EAAEC,MAAM,CAACJ,OAAO,CAACG,WAAT,CAFV;AAGTE,MAAAA,OAAO,EAAEL,OAAO,CAACK,OAHR;AAIThB,MAAAA,IAAI,EAAE;AAJG,KAAb;;AAMA,SAAI,IAAIiB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,KAAK,CAACnC,MAArB,EAA6BwC,CAAC,EAA9B,EAAkC;AAC9B,UAAIC,CAAC,GAAG,KAAKC,aAAL,CAAmBpB,IAAnB,EAAyBf,GAAzB,EAA8B2B,OAA9B,EAAuCC,KAAK,CAACK,CAAD,CAA5C,CAAR;;AACA,UAAGC,CAAC,CAACE,SAAL,EAAgB;AACZb,QAAAA,MAAM,CAACP,IAAP,CAAYP,IAAZ,CAAiByB,CAAjB;AACH;AACJ;;AACD,WAAOX,MAAP;AACH;;AAEDc,EAAAA,eAAe,CAACtB,IAAD,EAAOf,GAAP,EAAYsC,GAAZ,EAAiBV,KAAK,GAAC,EAAvB,EAA2B;AACtC,QAAIL,MAAM,GAAG;AACTa,MAAAA,SAAS,EAAE,IADF;AAETP,MAAAA,eAAe,EAAES,GAAG,CAACT,eAFZ;AAGTC,MAAAA,WAAW,EAAEC,MAAM,CAACO,GAAG,CAACR,WAAL,CAHV;AAITE,MAAAA,OAAO,EAAEM,GAAG,CAACN,OAJJ;AAKTO,MAAAA,YAAY,EAAE;AALL,KAAb;;AAOA,SAAI,IAAIN,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,KAAK,CAACnC,MAArB,EAA6BwC,CAAC,EAA9B,EAAkC;AAC9BV,MAAAA,MAAM,GAAG,KAAKiB,gBAAL,CAAsBzB,IAAtB,EAA4Bf,GAA5B,EAAiCsC,GAAjC,EAAsCV,KAAK,CAACK,CAAD,CAA3C,CAAT;;AACA,UAAGV,MAAM,CAACa,SAAV,EAAqB;AACjB,eAAOb,MAAP;AACH;AACJ;;AACD,WAAOA,MAAP;AACH;;AAEDiB,EAAAA,gBAAgB,CAACzB,IAAD,EAAOf,GAAP,EAAYsC,GAAZ,EAAiBrC,IAAjB,EAAuB;AACnC,QAAIsB,MAAM,GAAG;AACTa,MAAAA,SAAS,EAAE,IADF;AAETP,MAAAA,eAAe,EAAES,GAAG,CAACT,eAFZ;AAGTC,MAAAA,WAAW,EAAEC,MAAM,CAACO,GAAG,CAACR,WAAL,CAHV;AAITE,MAAAA,OAAO,EAAEM,GAAG,CAACN,OAJJ;AAKTO,MAAAA,YAAY,EAAE;AALL,KAAb;AAOA,QAAInC,MAAM,GAAG,KAAKL,iBAAL,CAAuBC,GAAvB,EAA4BC,IAA5B,CAAb;AACA,QAAIkB,KAAK,GAAG,KAAKd,eAAL,CAAqBD,MAArB,EAA6BH,IAA7B,CAAZ;;AACA,QAAGkB,KAAK,IAAImB,GAAG,CAACrB,MAAJ,CAAW,CAAX,CAAZ,EAA2B;AACvBM,MAAAA,MAAM,CAACgB,YAAP,GAAsB,KAAKzB,cAAL,CAAoBC,IAApB,EAA0BX,MAA1B,EAAkCkC,GAAG,CAACtB,IAAtC,EAA4CsB,GAAG,CAACrB,MAAhD,CAAtB;AACAM,MAAAA,MAAM,CAACa,SAAP,GAAmBnC,IAAnB;AACH;;AACDwC,IAAAA,OAAO,CAACH,GAAR,CAAY,wBAAZ,EAAsCA,GAAtC,EAA2Cf,MAA3C;AACA,WAAOA,MAAP;AACH;;AAEDY,EAAAA,aAAa,CAACpB,IAAD,EAAOf,GAAP,EAAY2B,OAAZ,EAAqB1B,IAArB,EAA2B;AACpC,QAAIsB,MAAM,GAAG;AACTa,MAAAA,SAAS,EAAE,IADF;AAETP,MAAAA,eAAe,EAAEF,OAAO,CAACE,eAFhB;AAGTC,MAAAA,WAAW,EAAEC,MAAM,CAACJ,OAAO,CAACG,WAAT,CAHV;AAITE,MAAAA,OAAO,EAAEL,OAAO,CAACK,OAJR;AAKTO,MAAAA,YAAY,EAAE;AALL,KAAb;;AAOA,SAAI,IAAID,GAAR,IAAeX,OAAO,CAACe,IAAvB,EAA6B;AACzB,UAAItC,MAAM,GAAG,KAAKL,iBAAL,CAAuBC,GAAvB,EAA4BC,IAA5B,CAAb;AACA,UAAIkB,KAAK,GAAG,KAAKd,eAAL,CAAqBD,MAArB,EAA6BH,IAA7B,CAAZ;;AACA,UAAGkB,KAAK,IAAImB,GAAG,CAACrB,MAAJ,CAAW,CAAX,CAAZ,EAA2B;AACvBM,QAAAA,MAAM,CAACa,SAAP,GAAmBnC,IAAnB;AACAsB,QAAAA,MAAM,CAACgB,YAAP,GAAsB,KAAKzB,cAAL,CAAoBC,IAApB,EAA0BX,MAA1B,EAAkCkC,GAAG,CAACtB,IAAtC,EAA4CsB,GAAG,CAACrB,MAAhD,CAAtB;AACA;AACH;AACJ;;AACDwB,IAAAA,OAAO,CAACH,GAAR,CAAY,qBAAZ,EAAmCX,OAAnC,EAA4CJ,MAA5C;AACA,WAAOA,MAAP;AACH;;AA3IU;;AA+If,IAAIoB,QAAQ,GAAG,IAAI3D,QAAJ,EAAf;eACe2D,Q",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
      "sourcesContent": [
        "import Web3 from \"web3\"\n\nclass Web3Util {\n    constructor() {\n    }\n\n    string2bytes32(val) {\n        let res = Web3.utils.stringToHex(val)\n        res = res + Array(67 - res.length).join('0')\n        return res\n    }\n\n    keccak256(val) {\n        return Web3.utils.keccak256(val)\n    }\n\n    hexToBytes(val) {\n        return Web3.utils.hexToBytes(val)\n    }\n\n    hexToAscii(val) {\n        return Web3.utils.hexToAscii(val);\n    }\n\n    numberToHex(val) {\n        return Web3.utils.numberToHex(val);\n    }\n    \n    getAbiEventInputs(abi, name) {\n        for(let item of abi) {\n            if(item.type == 'event' && item.name == name) {\n                return item.inputs\n            }\n        }\n        return null\n    }\n      \n    encodeEventName(inputs, name) {\n        if (inputs == null) {\n            return null\n        }\n        // console.log('inputs:', inputs)\n        let params = []\n        inputs.map(o=>{\n            params.push(o.type)\n        })\n        // console.log('params:', params)\n        let funcName = name+'('+params.join(',')+')'\n        // console.log('funcName:', funcName)\n        let enFuncName = Web3.utils.sha3(funcName)\n        // console.log('enFuncName:', enFuncName)\n        return enFuncName\n    }\n\n    encodeEventTopic(abi, name) {\n        let inputs = this.getAbiEventInputs(abi, name)\n        return this.encodeEventName(inputs, name)\n    }\n      \n    decodeEventLog(web3, inputs, data, topics) {\n        data = data.substr(2)\n        \n        let topic = topics.slice()\n        topic.splice(0, 1);\n        let inputData = inputs.slice()\n        // console.log('parseEventLog params:', inputs, data, topic)\n        let result = web3.eth.abi.decodeLog(inputData, data, topic)\n        // console.log('parseEventLog logs:', result)\n        return result\n    }\n              \n    findEventLogs(web3, abi, receipt, names=[]) {\n        let result = {\n            transactionHash: receipt.transactionHash,\n            blockNumber: Number(receipt.blockNumber),\n            address: receipt.address,\n            data: []\n        }\n        for(let i=0; i<names.length; i++) {\n            let d = this.parseEventLog(web3, abi, receipt, names[i])\n            if(d.eventName) {\n                result.data.push(d);\n            }\n        }\n        return result\n    }\n                         \n    findEventOneLog(web3, abi, log, names=[]) {\n        let result = {\n            eventName: null,\n            transactionHash: log.transactionHash,\n            blockNumber: Number(log.blockNumber),\n            address: log.address,\n            returnValues: {}\n        }\n        for(let i=0; i<names.length; i++) {\n            result = this.parseEventOneLog(web3, abi, log, names[i])\n            if(result.eventName) {\n                return result;\n            }\n        }\n        return result\n    }\n              \n    parseEventOneLog(web3, abi, log, name) {\n        let result = {\n            eventName: null,\n            transactionHash: log.transactionHash,\n            blockNumber: Number(log.blockNumber),\n            address: log.address,\n            returnValues: {}\n        }\n        let inputs = this.getAbiEventInputs(abi, name)\n        let topic = this.encodeEventName(inputs, name)\n        if(topic == log.topics[0]) {\n            result.returnValues = this.decodeEventLog(web3, inputs, log.data, log.topics)\n            result.eventName = name\n        }\n        console.log('web3 parseEventOneLog:', log, result)\n        return result\n    }\n      \n    parseEventLog(web3, abi, receipt, name) {\n        let result = {\n            eventName: null,\n            transactionHash: receipt.transactionHash,\n            blockNumber: Number(receipt.blockNumber),\n            address: receipt.address,\n            returnValues: {}\n        }\n        for(let log of receipt.logs) {\n            let inputs = this.getAbiEventInputs(abi, name)\n            let topic = this.encodeEventName(inputs, name)\n            if(topic == log.topics[0]) {\n                result.eventName = name\n                result.returnValues = this.decodeEventLog(web3, inputs, log.data, log.topics)\n                break\n            }\n        }\n        console.log('web3 parseEventLog:', receipt, result)\n        return result\n    }\n      \n}\n\nvar web3Util = new Web3Util();\nexport default web3Util;"
      ]
    },
    "sourceType": "script",
    "mtime": 1623929811233
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/ChainConfig.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/ChainConfig.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/ChainConfig.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/ChainConfig.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/",
        "sourceFileName": "ChainConfig.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.STAKINGTOKENPRE = exports.IPFS_IFO = exports.IPFS_URL = exports.ChainSymbol = exports.ContractsAddr = exports.Tokens = exports.CHAIN_NAME = exports.CHAIN_BROWSER = exports.CHAIN_RPC = void 0;\nconst CHAIN_RPC = {\n  1: 'https://mainnet.infura.io/v3/0e47785118b2494092b1a9a9b576c2bd',\n  42: 'https://kovan.infura.io/v3/0e47785118b2494092b1a9a9b576c2bd',\n  56: 'https://bsc-dataseed.binance.org',\n  97: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  128: 'https://http-mainnet.hecochain.com',\n  256: 'https://http-testnet.hecochain.com'\n};\nexports.CHAIN_RPC = CHAIN_RPC;\nconst CHAIN_BROWSER = {\n  1: \"https://etherscan.io\",\n  42: \"https://kovan.etherscan.io\",\n  56: \"https://bscscan.com\",\n  97: \"https://testnet.bscscan.com\",\n  128: \"https://hecoinfo.com\",\n  256: \"https://testnet.hecoinfo.com\"\n};\nexports.CHAIN_BROWSER = CHAIN_BROWSER;\nconst CHAIN_NAME = {\n  1: \"Ethereum Chain Mainnet\",\n  42: \"Ethereum Chain Kovan\",\n  56: \"Binance Smart Chain Mainnet\",\n  97: \"Binance Smart Chain Testnet\",\n  128: \"HECO Chain Mainnet\",\n  256: \"HECO Chain Testnet\"\n};\nexports.CHAIN_NAME = CHAIN_NAME;\nconst IPFS_URL = 'https://ipfs.io/ipfs';\nexports.IPFS_URL = IPFS_URL;\nconst IPFS_IFO = {\n  56: 'k2k4r8oeuufgtw5e2piqe0i0yfds97imkqumrjaupsagxyekz72t5jy1',\n  97: 'k2k4r8nec9xa2o2x29dag11p54nbj6bugxe6c9hflkuv722omq184bz2'\n};\nexports.IPFS_IFO = IPFS_IFO;\nconst ContractsAddr = {\n  1: {\n    SwitchQuery: \"\",\n    SwitchConfig: \"\",\n    SwitchTrigger: \"\",\n    SwitchFarm: \"\",\n    SwitchTreasury: \"\",\n    SwitchAcross: \"\",\n    SwitchTicketFactory: \"\"\n  },\n  42: {\n    SwitchQuery: \"0x003a79E345439188780d08f14bc43E3A40565B89\",\n    SwitchConfig: \"0x9B3329115964B163230cf1F7B723f7CE8F1C39E8\",\n    SwitchTrigger: \"0x4aFf78CEd2335090Abadd9DfF17f7B61453eBE27\",\n    SwitchTreasury: \"0xf5D801d5888A33999bc34eDD444b07FED7487BCa\",\n    SwitchSigner: \"0xafbc578BD519Adb4EAd4f697726b28b86D7B4710\",\n    SwitchAcross: \"0xe4a7C152FF78e7f779fd6E5F26fC0fe6583ffc46\",\n    SwitchTicketFactory: \"0xB0907C33EFfDD878D890ca01201F4218EEf39D9F\",\n    SwitchFarm: \"0x32E9B1Ff76649edDd59CdC0f600D5666D843b1DD\"\n  },\n  56: {\n    DemaxProjectQuery: '0x1a64489D69FB4C6638eae6Cb5D898296F8Db19cE',\n    SwitchQuery: \"\",\n    SwitchConfig: \"\",\n    SwitchTrigger: \"\",\n    SwitchFarm: \"\",\n    SwitchTreasury: \"\",\n    SwitchAcross: \"\",\n    SwitchTicketFactory: \"\"\n  },\n  97: {\n    SwitchQuery: \"0x2bB185f00a4Be1B9cA34c958a91E382f291d00Dc\",\n    SwitchConfig: \"0x51af34Fb98B4dfc9b80324b50f606D7737a0d5B4\",\n    SwitchTrigger: \"0x8dda940306D5d176e512E3aC209e4881240AC626\",\n    SwitchTreasury: \"0x3F86b12f09A14a6bD07F9e3eb5a044e9eAa13965\",\n    SwitchSigner: \"0xb7bE63B23aB9475807a2E5CB3EE42E2c22B111c1\",\n    SwitchAcross: \"0x6C38db27432F3CFc3A12b26334aC51dfa31c7D29\",\n    SwitchTicketFactory: \"0xc4387F1cDD0823B0f806737d681a783dd8c6827F\",\n    SwitchFarm: \"0xf2236646dD3BdE9a4Fe8fd108FB082f9680DA4D6\"\n  },\n  128: {\n    SwitchQuery: \"\",\n    SwitchConfig: \"\",\n    SwitchTrigger: \"\",\n    SwitchFarm: \"\",\n    SwitchTreasury: \"\",\n    SwitchAcross: \"\",\n    SwitchTicketFactory: \"\"\n  },\n  256: {\n    SwitchQuery: \"0x3602ed8Eb3ec9Bfd08b1A479cE75bBC0b8bf0223\",\n    SwitchConfig: \"0x6A0c3A05fF4cb640B4eeA3845F976972C334287C\",\n    SwitchTrigger: \"0x7e5d05Ceefcd26D3e3a6683AD36447C4ED45Db05\",\n    SwitchTreasury: \"0xCb1D6D211a51af89B859ED37884df4CB5FA8e393\",\n    SwitchSigner: \"0x4C7C782FCcC6F24C4348c03814a9A5441B968E88\",\n    SwitchAcross: \"0xaAEF5FBA4dF2C533DD8674788647F28A385727C4\",\n    SwitchTicketFactory: \"0x5f868Db76f02Cf0D5A7e72561c5c4b9D33A4e9eE\",\n    SwitchFarm: \"0x3624fcd9452739F3472321877c2DeC1381c3032e\"\n  }\n};\nexports.ContractsAddr = ContractsAddr;\nconst Tokens = {\n  56: {\n    USDT: '0x55d398326f99059fF775485246999027B3197955',\n    WETH: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    USDC: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    BUSD: '0xe9e7cea3dedca5984780bafc599bd69add087d56'\n  },\n  42: {\n    WETH: \"0x67fe5bE3f16c01fd5C5eb3DdCC08f1dAefac40a5\",\n    USDT: \"0xF02D16a87F97428A258A48476b52Cfc105E371C1\",\n    USDC: \"0x42aC2e5bD42a5Eceb72d06C9c1A5A45433c17911\",\n    DAI: \"0x38B9eC6994F288155345cF5aC9245182eF12F04f\",\n    XBurger: \"0x3455A745060EeeB6979034E7243B8Ba3952D334a\"\n  },\n  97: {\n    WETH: \"0x7FcCaDD3e6A3F80e194CaDf13FeDF36B9BBbe98F\",\n    USDT: \"0xF2ED382e6A3439Be124813842200cf6702fD6ecA\",\n    USDC: \"0x716AE8720739F0434B8D469cd3EC392A0fE16599\",\n    DAI: \"0xCB6260C77629c25A065081442EF4E2Bec297aa09\",\n    XBurger: \"0xd1f461C7Ced3Bb1810B9393dB9BD2De1819fd4e5\"\n  },\n  256: {\n    WETH: \"0x8F8da91c632be57C62D60A27f4ed07025Dfb9580\",\n    USDT: \"0xadCf42A9318D10F0D70333812F4A3Ab0622e0ef3\",\n    USDC: \"0xA0993880177D3c7BB57546b0b349F93143877d19\",\n    DAI: \"0xD512A14824D40c82582522BFE936d35354658BC5\",\n    XBurger: \"0x138b6473475eaC1762A0EB5323A7E8C96F79f5A3\"\n  }\n};\nexports.Tokens = Tokens;\nconst ChainSymbol = {\n  WToken: {\n    1: \"WETH\",\n    42: \"WETH\",\n    56: \"WBNB\",\n    97: \"WBNB\",\n    128: \"WHT\",\n    256: \"WHT\"\n  },\n  ZeroToken: {\n    1: \"ETH\",\n    42: \"ETH\",\n    56: \"BNB\",\n    97: \"BNB\",\n    128: \"HT\",\n    256: \"HT\"\n  }\n};\nexports.ChainSymbol = ChainSymbol;\nconst STAKINGTOKENPRE = \"sw\";\nexports.STAKINGTOKENPRE = STAKINGTOKENPRE;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoYWluQ29uZmlnLmpzIl0sIm5hbWVzIjpbIkNIQUlOX1JQQyIsIkNIQUlOX0JST1dTRVIiLCJDSEFJTl9OQU1FIiwiSVBGU19VUkwiLCJJUEZTX0lGTyIsIkNvbnRyYWN0c0FkZHIiLCJTd2l0Y2hRdWVyeSIsIlN3aXRjaENvbmZpZyIsIlN3aXRjaFRyaWdnZXIiLCJTd2l0Y2hGYXJtIiwiU3dpdGNoVHJlYXN1cnkiLCJTd2l0Y2hBY3Jvc3MiLCJTd2l0Y2hUaWNrZXRGYWN0b3J5IiwiU3dpdGNoU2lnbmVyIiwiRGVtYXhQcm9qZWN0UXVlcnkiLCJUb2tlbnMiLCJVU0RUIiwiV0VUSCIsIlVTREMiLCJCVVNEIiwiREFJIiwiWEJ1cmdlciIsIkNoYWluU3ltYm9sIiwiV1Rva2VuIiwiWmVyb1Rva2VuIiwiU1RBS0lOR1RPS0VOUFJFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxNQUFNQSxTQUFTLEdBQUc7QUFDZCxLQUFHLCtEQURXO0FBRWQsTUFBSSw2REFGVTtBQUdkLE1BQUksa0NBSFU7QUFJZCxNQUFJLGlEQUpVO0FBS2QsT0FBSyxvQ0FMUztBQU1kLE9BQUs7QUFOUyxDQUFsQjs7QUFTQSxNQUFNQyxhQUFhLEdBQUc7QUFDbEIsS0FBRyxzQkFEZTtBQUVsQixNQUFJLDRCQUZjO0FBR2xCLE1BQUkscUJBSGM7QUFJbEIsTUFBSSw2QkFKYztBQUtsQixPQUFLLHNCQUxhO0FBTWxCLE9BQUs7QUFOYSxDQUF0Qjs7QUFTQSxNQUFNQyxVQUFVLEdBQUc7QUFDZixLQUFHLHdCQURZO0FBRWYsTUFBSSxzQkFGVztBQUdmLE1BQUksNkJBSFc7QUFJZixNQUFJLDZCQUpXO0FBS2YsT0FBSyxvQkFMVTtBQU1mLE9BQUs7QUFOVSxDQUFuQjs7QUFTQSxNQUFNQyxRQUFRLEdBQUcsc0JBQWpCOztBQUNBLE1BQU1DLFFBQVEsR0FBRztBQUNiLE1BQUksMERBRFM7QUFFYixNQUFJO0FBRlMsQ0FBakI7O0FBS0EsTUFBTUMsYUFBYSxHQUFHO0FBQ2xCLEtBQUc7QUFD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QUcsRUFBRyw0Q0FKTjtBQUtBQyxJQUFBQSxPQUFPLEVBQUc7QUFMVixHQWRPO0FBcUJYLE9BQUs7QUFDREosSUFBQUEsSUFBSSxFQUFHLDRDQUROO0FBRURELElBQUFBLElBQUksRUFBRyw0Q0FGTjtBQUdERSxJQUFBQSxJQUFJLEVBQUcsNENBSE47QUFJREUsSUFBQUEsR0FBRyxFQUFHLDRDQUpMO0FBS0RDLElBQUFBLE9BQU8sRUFBRztBQUxUO0FBckJNLENBQWY7O0FBOEJBLE1BQU1DLFdBQVcsR0FBRztBQUNoQkMsRUFBQUEsTUFBTSxFQUFFO0FBQ0osT0FBRyxNQURDO0FBRUosUUFBSSxNQUZBO0FBR0osUUFBSSxNQUhBO0FBSUosUUFBSSxNQUpBO0FBS0osU0FBSyxLQUxEO0FBTUosU0FBSztBQU5ELEdBRFE7QUFTaEJDLEVBQUFBLFNBQVMsRUFBRTtBQUNQLE9BQUcsS0FESTtBQUVQLFFBQUksS0FGRztBQUdQLFFBQUksS0FIRztBQUlQLFFBQUksS0FKRztBQUtQLFNBQUssSUFMRTtBQU1QLFNBQUs7QUFORTtBQVRLLENBQXBCOztBQW9CQSxNQUFNQyxlQUFlLEdBQUcsSUFBeEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2x5ZGlhL0Rlc2t0b3Avd29ya1NwYWNlL2RleC9kZW1heC1icmlkZ2Utc2RrL3NyYy9zZGsvY29uZmlnLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENIQUlOX1JQQyA9IHtcbiAgICAxOiAnaHR0cHM6Ly9tYWlubmV0LmluZnVyYS5pby92My8wZTQ3Nzg1MTE4YjI0OTQwOTJiMWE5YTliNTc2YzJiZCcsXG4gICAgNDI6ICdodHRwczovL2tvdmFuLmluZnVyYS5pby92My8wZTQ3Nzg1MTE4YjI0OTQwOTJiMWE5YTliNTc2YzJiZCcsXG4gICAgNTY6ICdodHRwczovL2JzYy1kYXRhc2VlZC5iaW5hbmNlLm9yZycsXG4gICAgOTc6ICdodHRwczovL2RhdGEtc2VlZC1wcmVic2MtMS1zMS5iaW5hbmNlLm9yZzo4NTQ1LycsXG4gICAgMTI4OiAnaHR0cHM6Ly9odHRwLW1haW5uZXQuaGVjb2NoYWluLmNvbScsXG4gICAgMjU2OiAnaHR0cHM6Ly9odHRwLXRlc3RuZXQuaGVjb2NoYWluLmNvbSdcbn07XG5cbmNvbnN0IENIQUlOX0JST1dTRVIgPSB7XG4gICAgMTogXCJodHRwczovL2V0aGVyc2Nhbi5pb1wiLFxuICAgIDQyOiBcImh0dHBzOi8va292YW4uZXRoZXJzY2FuLmlvXCIsXG4gICAgNTY6IFwiaHR0cHM6Ly9ic2NzY2FuLmNvbVwiLFxuICAgIDk3OiBcImh0dHBzOi8vdGVzdG5ldC5ic2NzY2FuLmNvbVwiLFxuICAgIDEyODogXCJodHRwczovL2hlY29pbmZvLmNvbVwiLFxuICAgIDI1NjogXCJodHRwczovL3Rlc3RuZXQuaGVjb2luZm8uY29tXCJcbn1cblxuY29uc3QgQ0hBSU5fTkFNRSA9IHtcbiAgICAxOiBcIkV0aGVyZXVtIENoYWluIE1haW5uZXRcIixcbiAgICA0MjogXCJFdGhlcmV1bSBDaGFpbiBLb3ZhblwiLFxuICAgIDU2OiBcIkJpbmFuY2UgU21hcnQgQ2hhaW4gTWFpbm5ldFwiLFxuICAgIDk3OiBcIkJpbmFuY2UgU21hcnQgQ2hhaW4gVGVzdG5ldFwiLFxuICAgIDEyODogXCJIRUNPIENoYWluIE1haW5uZXRcIixcbiAgICAyNTY6IFwiSEVDTyBDaGFpbiBUZXN0bmV0XCJcbn1cblxuY29uc3QgSVBGU19VUkwgPSAnaHR0cHM6Ly9pcGZzLmlvL2lwZnMnXG5jb25zdCBJUEZTX0lGTyA9IHtcbiAgICA1NjogJ2syazRyOG9ldXVmZ3R3NWUycGlxZTBpMHlmZHM5N2lta3F1bXJqYXVwc2FneHlla3o3MnQ1ankxJyxcbiAgICA5NzogJ2syazRyOG5lYzl4YTJvMngyOWRhZzExcDU0bmJqNmJ1Z3hlNmM5aGZsa3V2NzIyb21xMTg0YnoyJyxcbn1cblxuY29uc3QgQ29udHJhY3RzQWRkciA9IHtcbiAgICAxOiB7XG4gICAgICAgIFN3aXRjaFF1ZXJ5OiBcIlwiLFxuICAgICAgICBTd2l0Y2hDb25maWc6IFwiXCIsXG4gICAgICAgIFN3aXRjaFRyaWdnZXI6IFwiXCIsXG4gICAgICAgIFN3aXRjaEZhcm06IFwiXCIsXG4gICAgICAgIFN3aXRjaFRyZWFzdXJ5OiBcIlwiLFxuICAgICAgICBTd2l0Y2hBY3Jvc3M6IFwiXCIsXG4gICAgICAgIFN3aXRjaFRpY2tldEZhY3Rvcnk6IFwiXCJcbiAgICB9LFxuICAgIDQyOiB7XG4gICAgICAgIFN3aXRjaFF1ZXJ5IDogXCIweDAwM2E3OUUzNDU0MzkxODg3ODBkMDhmMTRiYzQzRTNBNDA1NjVCODlcIixcbiAgICAgICAgU3dpdGNoQ29uZmlnIDogXCIweDlCMzMyOTExNTk2NEIxNjMyMzBjZjFGN0I3MjNmN0NFOEYxQzM5RThcIixcbiAgICAgICAgU3dpdGNoVHJpZ2dlciA6IFwiMHg0YUZmNzhDRWQyMzM1MDkwQWJhZGQ5RGZGMTdmN0I2MTQ1M2VCRTI3XCIsXG4gICAgICAgIFN3aXRjaFRyZWFzdXJ5IDogXCIweGY1RDgwMWQ1ODg4QTMzOTk5YmMzNGVERDQ0NGIwN0ZFRDc0ODdCQ2FcIixcbiAgICAgICAgU3dpdGNoU2lnbmVyIDogXCIweGFmYmM1NzhCRDUxOUFkYjRFQWQ0ZjY5NzcyNmIyOGI4NkQ3QjQ3MTBcIixcbiAgICAgICAgU3dpdGNoQWNyb3NzIDogXCIweGU0YTdDMTUyRkY3OGU3Zjc3OWZkNkU1RjI2ZkMwZmU2NTgzZmZjNDZcIixcbiAgICAgICAgU3dpdGNoVGlja2V0RmFjdG9yeSA6IFwiMHhCMDkwN0MzM0VGZkREODc4RDg5MGNhMDEyMDFGNDIxOEVFZjM5RDlGXCIsXG4gICAgICAgIFN3aXRjaEZhcm0gOiBcIjB4MzJFOUIxRmY3NjY0OWVkRGQ1OUNkQzBmNjAwRDU2NjZEODQzYjFERFwiLFxuICAgIH0sXG4gICAgNTY6IHtcbiAgICAgICAgRGVtYXhQcm9qZWN0UXVlcnk6ICcweDFhNjQ0ODlENjlGQjRDNjYzOGVhZTZDYjVEODk4Mjk2RjhEYjE5Y0UnLFxuICAgICAgICBTd2l0Y2hRdWVyeTogXCJcIixcbiAgICAgICAgU3dpdGNoQ29uZmlnOiBcIlwiLFxuICAgICAgICBTd2l0Y2hUcmlnZ2VyOiBcIlwiLFxuICAgICAgICBTd2l0Y2hGYXJtOiBcIlwiLFxuICAgICAgICBTd2l0Y2hUcmVhc3VyeTogXCJcIixcbiAgICAgICAgU3dpdGNoQWNyb3NzOiBcIlwiLFxuICAgICAgICBTd2l0Y2hUaWNrZXRGYWN0b3J5OiBcIlwiXG4gICAgfSxcbiAgICA5Nzoge1xuICAgICAgICBTd2l0Y2hRdWVyeSA6IFwiMHgyYkIxODVmMDBhNEJlMUI5Y0EzNGM5NThhOTFFMzgyZjI5MWQwMERjXCIsXG4gICAgICAgIFN3aXRjaENvbmZpZyA6IFwiMHg1MWFmMzRGYjk4QjRkZmM5YjgwMzI0YjUwZjYwNkQ3NzM3YTBkNUI0XCIsXG4gICAgICAgIFN3aXRjaFRyaWdnZXIgOiBcIjB4OGRkYTk0MDMwNkQ1ZDE3NmU1MTJFM2FDMjA5ZTQ4ODEyNDBBQzYyNlwiLFxuICAgICAgICBTd2l0Y2hUcmVhc3VyeSA6IFwiMHgzRjg2YjEyZjA5QTE0YTZiRDA3RjllM2ViNWEwNDRlOWVBYTEzOTY1XCIsXG4gICAgICAgIFN3aXRjaFNpZ25lciA6IFwiMHhiN2JFNjNCMjNhQjk0NzU4MDdhMkU1Q0IzRUU0MkUyYzIyQjExMWMxXCIsXG4gICAgICAgIFN3aXRjaEFjcm9zcyA6IFwiMHg2QzM4ZGIyNzQzMkYzQ0ZjM0ExMmIyNjMzNGFDNTFkZmEzMWM3RDI5XCIsXG4gICAgICAgIFN3aXRjaFRpY2tldEZhY3RvcnkgOiBcIjB4YzQzODdGMWNERDA4MjNCMGY4MDY3MzdkNjgxYTc4M2RkOGM2ODI3RlwiLFxuICAgICAgICBTd2l0Y2hGYXJtIDogXCIweGYyMjM2NjQ2ZEQzQmRFOWE0RmU4ZmQxMDhGQjA4MmY5NjgwREE0RDZcIixcbiAgICB9LFxuICAgIDEyODoge1xuICAgICAgICBTd2l0Y2hRdWVyeTogXCJcIixcbiAgICAgICAgU3dpdGNoQ29uZmlnOiBcIlwiLFxuICAgICAgICBTd2l0Y2hUcmlnZ2VyOiBcIlwiLFxuICAgICAgICBTd2l0Y2hGYXJtOiBcIlwiLFxuICAgICAgICBTd2l0Y2hUcmVhc3VyeTogXCJcIixcbiAgICAgICAgU3dpdGNoQWNyb3NzOiBcIlwiLFxuICAgICAgICBTd2l0Y2hUaWNrZXRGYWN0b3J5OiBcIlwiXG4gICAgfSxcbiAgICAyNTY6IHtcbiAgICAgICAgU3dpdGNoUXVlcnkgOiBcIjB4MzYwMmVkOEViM2VjOUJmZDA4YjFBNDc5Y0U3NWJCQzBiOGJmMDIyM1wiLFxuICAgICAgICBTd2l0Y2hDb25maWcgOiBcIjB4NkEwYzNBMDVmRjRjYjY0MEI0ZWVBMzg0NUY5NzY5NzJDMzM0Mjg3Q1wiLFxuICAgICAgICBTd2l0Y2hUcmlnZ2VyIDogXCIweDdlNWQwNUNlZWZjZDI2RDNlM2E2NjgzQUQzNjQ0N0M0RUQ0NURiMDVcIixcbiAgICAgICAgU3dpdGNoVHJlYXN1cnkgOiBcIjB4Q2IxRDZEMjExYTUxYWY4OUI4NTlFRDM3ODg0ZGY0Q0I1RkE4ZTM5M1wiLFxuICAgICAgICBTd2l0Y2hTaWduZXIgOiBcIjB4NEM3Qzc4MkZDY0M2RjI0QzQzNDhjMDM4MTRhOUE1NDQxQjk2OEU4OFwiLFxuICAgICAgICBTd2l0Y2hBY3Jvc3MgOiBcIjB4YUFFRjVGQkE0ZEYyQzUzM0REODY3NDc4ODY0N0YyOEEzODU3MjdDNFwiLFxuICAgICAgICBTd2l0Y2hUaWNrZXRGYWN0b3J5IDogXCIweDVmODY4RGI3NmYwMkNmMEQ1QTdlNzI1NjFjNWM0YjlEMzNBNGU5ZUVcIixcbiAgICAgICAgU3dpdGNoRmFybSA6IFwiMHgzNjI0ZmNkOTQ1MjczOUYzNDcyMzIxODc3YzJEZUMxMzgxYzMwMzJlXCIsXG4gICAgfSxcbn1cblxuY29uc3QgVG9rZW5zID0ge1xuICAgIDU2OiB7XG4gICAgICAgIFVTRFQ6ICcweDU1ZDM5ODMyNmY5OTA1OWZGNzc1NDg1MjQ2OTk5MDI3QjMxOTc5NTUnLFxuICAgICAgICBXRVRIOiAnMHhiYjRDZEI5Q0JkMzZCMDFiRDFjQmFFQkYyRGUwOGQ5MTczYmMwOTVjJyxcbiAgICAgICAgVVNEQzogJzB4OGFjNzZhNTFjYzk1MGQ5ODIyZDY4YjgzZmUxYWQ5N2IzMmNkNTgwZCcsXG4gICAgICAgIEJVU0Q6ICcweGU5ZTdjZWEzZGVkY2E1OTg0NzgwYmFmYzU5OWJkNjlhZGQwODdkNTYnLFxuICAgIH0sXG4gICAgNDI6IHtcbiAgICAgICAgV0VUSCA6IFwiMHg2N2ZlNWJFM2YxNmMwMWZkNUM1ZWIzRGRDQzA4ZjFkQWVmYWM0MGE1XCIsXG4gICAgICAgIFVTRFQgOiBcIjB4RjAyRDE2YTg3Rjk3NDI4QTI1OEE0ODQ3NmI1MkNmYzEwNUUzNzFDMVwiLFxuICAgICAgICBVU0RDIDogXCIweDQyYUMyZTViRDQyYTVFY2ViNzJkMDZDOWMxQTVBNDU0MzNjMTc5MTFcIixcbiAgICAgICAgREFJIDogXCIweDM4QjllQzY5OTRGMjg4MTU1MzQ1Y0Y1YUM5MjQ1MTgyZUYxMkYwNGZcIixcbiAgICAgICAgWEJ1cmdlciA6IFwiMHgzNDU1QTc0NTA2MEVlZUI2OTc5MDM0RTcyNDNCOEJhMzk1MkQzMzRhXCIsXG4gICAgfSxcbiAgICA5Nzoge1xuICAgICAgICBXRVRIIDogXCIweDdGY0NhREQzZTZBM0Y4MGUxOTRDYURmMTNGZURGMzZCOUJCYmU5OEZcIixcbiAgICAgICAgVVNEVCA6IFwiMHhGMkVEMzgyZTZBMzQzOUJlMTI0ODEzODQyMjAwY2Y2NzAyZkQ2ZWNBXCIsXG4gICAgICAgIFVTREMgOiBcIjB4NzE2QUU4NzIwNzM5RjA0MzRCOEQ0NjljZDNFQzM5MkEwZkUxNjU5OVwiLFxuICAgICAgICBEQUkgOiBcIjB4Q0I2MjYwQzc3NjI5YzI1QTA2NTA4MTQ0MkVGNEUyQmVjMjk3YWEwOVwiLFxuICAgICAgICBYQnVyZ2VyIDogXCIweGQxZjQ2MUM3Q2VkM0JiMTgxMEI5MzkzZEI5QkQyRGUxODE5ZmQ0ZTVcIixcbiAgICB9LFxuICAgIDI1Njoge1xuICAgICAgICBXRVRIIDogXCIweDhGOGRhOTFjNjMyYmU1N0M2MkQ2MEEyN2Y0ZWQwNzAyNURmYjk1ODBcIixcbiAgICAgICAgVVNEVCA6IFwiMHhhZENmNDJBOTMxOEQxMEYwRDcwMzMzODEyRjRBM0FiMDYyMmUwZWYzXCIsXG4gICAgICAgIFVTREMgOiBcIjB4QTA5OTM4ODAxNzdEM2M3QkI1NzU0NmIwYjM0OUY5MzE0Mzg3N2QxOVwiLFxuICAgICAgICBEQUkgOiBcIjB4RDUxMkExNDgyNEQ0MGM4MjU4MjUyMkJGRTkzNmQzNTM1NDY1OEJDNVwiLFxuICAgICAgICBYQnVyZ2VyIDogXCIweDEzOGI2NDczNDc1ZWFDMTc2MkEwRUI1MzIzQTdFOEM5NkY3OWY1QTNcIixcbiAgICB9LFxufVxuXG5jb25zdCBDaGFpblN5bWJvbCA9IHtcbiAgICBXVG9rZW46IHtcbiAgICAgICAgMTogXCJXRVRIXCIsXG4gICAgICAgIDQyOiBcIldFVEhcIixcbiAgICAgICAgNTY6IFwiV0JOQlwiLFxuICAgICAgICA5NzogXCJXQk5CXCIsXG4gICAgICAgIDEyODogXCJXSFRcIixcbiAgICAgICAgMjU2OiBcIldIVFwiXG4gICAgfSxcbiAgICBaZXJvVG9rZW46IHtcbiAgICAgICAgMTogXCJFVEhcIixcbiAgICAgICAgNDI6IFwiRVRIXCIsXG4gICAgICAgIDU2OiBcIkJOQlwiLFxuICAgICAgICA5NzogXCJCTkJcIixcbiAgICAgICAgMTI4OiBcIkhUXCIsXG4gICAgICAgIDI1NjogXCJIVFwiXG4gICAgfVxufVxuXG5cbmNvbnN0IFNUQUtJTkdUT0tFTlBSRSA9IFwic3dcIlxuXG5cbmV4cG9ydCB7IENIQUlOX1JQQywgQ0hBSU5fQlJPV1NFUiwgQ0hBSU5fTkFNRSwgVG9rZW5zLCBDb250cmFjdHNBZGRyLCBDaGFpblN5bWJvbCwgSVBGU19VUkwsIElQRlNfSUZPLCBTVEFLSU5HVE9LRU5QUkUgfTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "ChainConfig.js"
      ],
      "names": [
        "CHAIN_RPC",
        "CHAIN_BROWSER",
        "CHAIN_NAME",
        "IPFS_URL",
        "IPFS_IFO",
        "ContractsAddr",
        "SwitchQuery",
        "SwitchConfig",
        "SwitchTrigger",
        "SwitchFarm",
        "SwitchTreasury",
        "SwitchAcross",
        "SwitchTicketFactory",
        "SwitchSigner",
        "DemaxProjectQuery",
        "Tokens",
        "USDT",
        "WETH",
        "USDC",
        "BUSD",
        "DAI",
        "XBurger",
        "ChainSymbol",
        "WToken",
        "ZeroToken",
        "STAKINGTOKENPRE"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/",
      "sourcesContent": [
        "const CHAIN_RPC = {\n    1: 'https://mainnet.infura.io/v3/0e47785118b2494092b1a9a9b576c2bd',\n    42: 'https://kovan.infura.io/v3/0e47785118b2494092b1a9a9b576c2bd',\n    56: 'https://bsc-dataseed.binance.org',\n    97: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n    128: 'https://http-mainnet.hecochain.com',\n    256: 'https://http-testnet.hecochain.com'\n};\n\nconst CHAIN_BROWSER = {\n    1: \"https://etherscan.io\",\n    42: \"https://kovan.etherscan.io\",\n    56: \"https://bscscan.com\",\n    97: \"https://testnet.bscscan.com\",\n    128: \"https://hecoinfo.com\",\n    256: \"https://testnet.hecoinfo.com\"\n}\n\nconst CHAIN_NAME = {\n    1: \"Ethereum Chain Mainnet\",\n    42: \"Ethereum Chain Kovan\",\n    56: \"Binance Smart Chain Mainnet\",\n    97: \"Binance Smart Chain Testnet\",\n    128: \"HECO Chain Mainnet\",\n    256: \"HECO Chain Testnet\"\n}\n\nconst IPFS_URL = 'https://ipfs.io/ipfs'\nconst IPFS_IFO = {\n    56: 'k2k4r8oeuufgtw5e2piqe0i0yfds97imkqumrjaupsagxyekz72t5jy1',\n    97: 'k2k4r8nec9xa2o2x29dag11p54nbj6bugxe6c9hflkuv722omq184bz2',\n}\n\nconst ContractsAddr = {\n    1: {\n        SwitchQuery: \"\",\n        SwitchConfig: \"\",\n        SwitchTrigger: \"\",\n        SwitchFarm: \"\",\n        SwitchTreasury: \"\",\n        SwitchAcross: \"\",\n        SwitchTicketFactory: \"\"\n    },\n    42: {\n        SwitchQuery : \"0x003a79E345439188780d08f14bc43E3A40565B89\",\n        SwitchConfig : \"0x9B3329115964B163230cf1F7B723f7CE8F1C39E8\",\n        SwitchTrigger : \"0x4aFf78CEd2335090Abadd9DfF17f7B61453eBE27\",\n        SwitchTreasury : \"0xf5D801d5888A33999bc34eDD444b07FED7487BCa\",\n        SwitchSigner : \"0xafbc578BD519Adb4EAd4f697726b28b86D7B4710\",\n        SwitchAcross : \"0xe4a7C152FF78e7f779fd6E5F26fC0fe6583ffc46\",\n        SwitchTicketFactory : \"0xB0907C33EFfDD878D890ca01201F4218EEf39D9F\",\n        SwitchFarm : \"0x32E9B1Ff76649edDd59CdC0f600D5666D843b1DD\",\n    },\n    56: {\n        DemaxProjectQuery: '0x1a64489D69FB4C6638eae6Cb5D898296F8Db19cE',\n        SwitchQuery: \"\",\n        SwitchConfig: \"\",\n        SwitchTrigger: \"\",\n        SwitchFarm: \"\",\n        SwitchTreasury: \"\",\n        SwitchAcross: \"\",\n        SwitchTicketFactory: \"\"\n    },\n    97: {\n        SwitchQuery : \"0x2bB185f00a4Be1B9cA34c958a91E382f291d00Dc\",\n        SwitchConfig : \"0x51af34Fb98B4dfc9b80324b50f606D7737a0d5B4\",\n        SwitchTrigger : \"0x8dda940306D5d176e512E3aC209e4881240AC626\",\n        SwitchTreasury : \"0x3F86b12f09A14a6bD07F9e3eb5a044e9eAa13965\",\n        SwitchSigner : \"0xb7bE63B23aB9475807a2E5CB3EE42E2c22B111c1\",\n        SwitchAcross : \"0x6C38db27432F3CFc3A12b26334aC51dfa31c7D29\",\n        SwitchTicketFactory : \"0xc4387F1cDD0823B0f806737d681a783dd8c6827F\",\n        SwitchFarm : \"0xf2236646dD3BdE9a4Fe8fd108FB082f9680DA4D6\",\n    },\n    128: {\n        SwitchQuery: \"\",\n        SwitchConfig: \"\",\n        SwitchTrigger: \"\",\n        SwitchFarm: \"\",\n        SwitchTreasury: \"\",\n        SwitchAcross: \"\",\n        SwitchTicketFactory: \"\"\n    },\n    256: {\n        SwitchQuery : \"0x3602ed8Eb3ec9Bfd08b1A479cE75bBC0b8bf0223\",\n        SwitchConfig : \"0x6A0c3A05fF4cb640B4eeA3845F976972C334287C\",\n        SwitchTrigger : \"0x7e5d05Ceefcd26D3e3a6683AD36447C4ED45Db05\",\n        SwitchTreasury : \"0xCb1D6D211a51af89B859ED37884df4CB5FA8e393\",\n        SwitchSigner : \"0x4C7C782FCcC6F24C4348c03814a9A5441B968E88\",\n        SwitchAcross : \"0xaAEF5FBA4dF2C533DD8674788647F28A385727C4\",\n        SwitchTicketFactory : \"0x5f868Db76f02Cf0D5A7e72561c5c4b9D33A4e9eE\",\n        SwitchFarm : \"0x3624fcd9452739F3472321877c2DeC1381c3032e\",\n    },\n}\n\nconst Tokens = {\n    56: {\n        USDT: '0x55d398326f99059fF775485246999027B3197955',\n        WETH: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        USDC: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n        BUSD: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    42: {\n        WETH : \"0x67fe5bE3f16c01fd5C5eb3DdCC08f1dAefac40a5\",\n        USDT : \"0xF02D16a87F97428A258A48476b52Cfc105E371C1\",\n        USDC : \"0x42aC2e5bD42a5Eceb72d06C9c1A5A45433c17911\",\n        DAI : \"0x38B9eC6994F288155345cF5aC9245182eF12F04f\",\n        XBurger : \"0x3455A745060EeeB6979034E7243B8Ba3952D334a\",\n    },\n    97: {\n        WETH : \"0x7FcCaDD3e6A3F80e194CaDf13FeDF36B9BBbe98F\",\n        USDT : \"0xF2ED382e6A3439Be124813842200cf6702fD6ecA\",\n        USDC : \"0x716AE8720739F0434B8D469cd3EC392A0fE16599\",\n        DAI : \"0xCB6260C77629c25A065081442EF4E2Bec297aa09\",\n        XBurger : \"0xd1f461C7Ced3Bb1810B9393dB9BD2De1819fd4e5\",\n    },\n    256: {\n        WETH : \"0x8F8da91c632be57C62D60A27f4ed07025Dfb9580\",\n        USDT : \"0xadCf42A9318D10F0D70333812F4A3Ab0622e0ef3\",\n        USDC : \"0xA0993880177D3c7BB57546b0b349F93143877d19\",\n        DAI : \"0xD512A14824D40c82582522BFE936d35354658BC5\",\n        XBurger : \"0x138b6473475eaC1762A0EB5323A7E8C96F79f5A3\",\n    },\n}\n\nconst ChainSymbol = {\n    WToken: {\n        1: \"WETH\",\n        42: \"WETH\",\n        56: \"WBNB\",\n        97: \"WBNB\",\n        128: \"WHT\",\n        256: \"WHT\"\n    },\n    ZeroToken: {\n        1: \"ETH\",\n        42: \"ETH\",\n        56: \"BNB\",\n        97: \"BNB\",\n        128: \"HT\",\n        256: \"HT\"\n    }\n}\n\n\nconst STAKINGTOKENPRE = \"sw\"\n\n\nexport { CHAIN_RPC, CHAIN_BROWSER, CHAIN_NAME, Tokens, ContractsAddr, ChainSymbol, IPFS_URL, IPFS_IFO, STAKINGTOKENPRE };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625218498152
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/ERC20Token.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/ERC20Token.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/ERC20Token.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/ERC20Token.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
        "sourceFileName": "ERC20Token.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newERC20Token = newERC20Token;\nexports.ERC20Token = void 0;\n\nvar _ERC20Token = _interopRequireDefault(require(\"../abi/ERC20Token.json\"));\n\nvar _bignumber = _interopRequireDefault(require(\"bignumber.js\"));\n\nvar _BaseInstance = _interopRequireDefault(require(\"./BaseInstance\"));\n\nvar _Web3Provider = _interopRequireDefault(require(\"../Web3Provider.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass ERC20Token extends _BaseInstance.default {\n  constructor(provider, address) {\n    super(provider, _ERC20Token.default, address);\n  }\n\n  async balanceOf(user) {\n    if (!user) {\n      user = this.provider.account;\n    }\n\n    let _token = await this.info();\n\n    let res = '0';\n\n    if (this.provider.isZeroAddress(this.address)) {\n      res = await this.provider.web3.eth.getBalance(user);\n    } else {\n      res = await this.contract.methods.balanceOf(user).call();\n    }\n\n    return new _bignumber.default(res).shiftedBy(-1 * _token.decimals).toFixed();\n  }\n\n  async tokenBalanceOf(user) {\n    if (!user) {\n      user = this.provider.account;\n    }\n\n    let _token = await this.info();\n\n    let res = '0';\n\n    if (!this.provider.isZeroAddress(this.address)) {\n      res = await this.contract.methods.balanceOf(user).call();\n    }\n\n    return new _bignumber.default(res).shiftedBy(-1 * _token.decimals).toFixed();\n  }\n\n  async showBalanceOf(fmt, user) {\n    let d = await this.info();\n    return new _bignumber.default(await this.balanceOf(user)).shiftedBy(-1 * d.decimals).toFixed(fmt);\n  }\n\n  async info() {\n    let cache = this.provider.tokens[this.address.toLocaleLowerCase()];\n\n    if (cache) {\n      return cache;\n    }\n\n    let res = {};\n\n    if (this.provider.isZeroAddress(this.address)) {\n      res = {\n        address: this.address,\n        symbol: this.provider.getZeroSymbol(),\n        totalSupply: 0,\n        decimals: 18\n      };\n    } else {\n      res = {\n        address: this.address,\n        symbol: await this.contract.methods.symbol().call(),\n        totalSupply: await this.contract.methods.totalSupply().call(),\n        decimals: await this.contract.methods.decimals().call()\n      };\n    }\n\n    this.provider.tokens[this.address.toLocaleLowerCase()] = res;\n    return res;\n  }\n\n  async approve(spender) {\n    // console.log('approve:', token, spender)\n    if (!spender) {\n      throw 'Illegal approve';\n    }\n\n    let total = await this.contract.methods.totalSupply().call(); // console.log('total:', total);\n\n    return await this.provider.executeContract(this.contract, 'approve', 0, [spender, total]);\n  }\n\n  async allowance(user, spender) {\n    // console.log('allowance:', spender, user);\n    if (this.provider.isZeroAddress(this.address)) {\n      return new _bignumber.default(10).shiftedBy(30).toFixed();\n    }\n\n    let _token = await this.info();\n\n    let res = await this.contract.methods.allowance(user, spender).call();\n    return new _bignumber.default(res).shiftedBy(-1 * _token.decimals).toFixed();\n  }\n\n  async transfer(to, amount) {\n    let _token = await this.info();\n\n    amount = new _bignumber.default(amount).shiftedBy(1 * _token.decimals).toFixed();\n    return await this.provider.executeContract(this.contract, 'transfer', 0, [to, amount]);\n  }\n\n}\n\nexports.ERC20Token = ERC20Token;\n\nfunction newERC20Token(chainId, token) {\n  let provider = (0, _Web3Provider.default)(chainId);\n  let ins = new ERC20Token(provider, token);\n  return ins;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVSQzIwVG9rZW4uanMiXSwibmFtZXMiOlsiRVJDMjBUb2tlbiIsIkJhc2VJbnN0YW5jZSIsImNvbnN0cnVjdG9yIiwicHJvdmlkZXIiLCJhZGRyZXNzIiwiRVJDMjBUb2tlbkFCSSIsImJhbGFuY2VPZiIsInVzZXIiLCJhY2NvdW50IiwiX3Rva2VuIiwiaW5mbyIsInJlcyIsImlzWmVyb0FkZHJlc3MiLCJ3ZWIzIiwiZXRoIiwiZ2V0QmFsYW5jZSIsImNvbnRyYWN0IiwibWV0aG9kcyIsImNhbGwiLCJCaWdOdW1iZXIiLCJzaGlmdGVkQnkiLCJkZWNpbWFscyIsInRvRml4ZWQiLCJ0b2tlbkJhbGFuY2VPZiIsInNob3dCYWxhbmNlT2YiLCJmbXQiLCJkIiwiY2FjaGUiLCJ0b2tlbnMiLCJ0b0xvY2FsZUxvd2VyQ2FzZSIsInN5bWJvbCIsImdldFplcm9TeW1ib2wiLCJ0b3RhbFN1cHBseSIsImFwcHJvdmUiLCJzcGVuZGVyIiwidG90YWwiLCJleGVjdXRlQ29udHJhY3QiLCJhbGxvd2FuY2UiLCJ0cmFuc2ZlciIsInRvIiwiYW1vdW50IiwibmV3RVJDMjBUb2tlbiIsImNoYWluSWQiLCJ0b2tlbiIsImlucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFVBQU4sU0FBeUJDLHFCQUF6QixDQUFzQztBQUNsQ0MsRUFBQUEsV0FBVyxDQUFDQyxRQUFELEVBQVdDLE9BQVgsRUFBb0I7QUFDM0IsVUFBTUQsUUFBTixFQUFnQkUsbUJBQWhCLEVBQStCRCxPQUEvQjtBQUNIOztBQUVjLFFBQVRFLFNBQVMsQ0FBQ0MsSUFBRCxFQUFPO0FBQ2xCLFFBQUksQ0FBQ0EsSUFBTCxFQUFXO0FBQ1BBLE1BQUFBLElBQUksR0FBRyxLQUFLSixRQUFMLENBQWNLLE9BQXJCO0FBQ0g7O0FBQ0QsUUFBSUMsTUFBTSxHQUFHLE1BQU0sS0FBS0MsSUFBTCxFQUFuQjs7QUFDQSxRQUFJQyxHQUFHLEdBQUcsR0FBVjs7QUFD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LEVBQUtDLE1BQUwsRUFBYTtBQUN2QixRQUFJL0IsTUFBTSxHQUFHLE1BQU0sS0FBS0MsSUFBTCxFQUFuQjs7QUFDQThCLElBQUFBLE1BQU0sR0FBRyxJQUFJckIsa0JBQUosQ0FBY3FCLE1BQWQsRUFBc0JwQixTQUF0QixDQUFnQyxJQUFJWCxNQUFNLENBQUNZLFFBQTNDLEVBQXFEQyxPQUFyRCxFQUFUO0FBQ0EsV0FBTyxNQUFNLEtBQUtuQixRQUFMLENBQWNpQyxlQUFkLENBQThCLEtBQUtwQixRQUFuQyxFQUE2QyxVQUE3QyxFQUF5RCxDQUF6RCxFQUE0RCxDQUFDdUIsRUFBRCxFQUFLQyxNQUFMLENBQTVELENBQWI7QUFDSDs7QUF0RmlDOzs7O0FBeUZ0QyxTQUFTQyxhQUFULENBQXVCQyxPQUF2QixFQUFnQ0MsS0FBaEMsRUFBdUM7QUFDbkMsTUFBSXhDLFFBQVEsR0FBRywyQkFBYXVDLE9BQWIsQ0FBZjtBQUNBLE1BQUlFLEdBQUcsR0FBRyxJQUFJNUMsVUFBSixDQUFlRyxRQUFmLEVBQXlCd0MsS0FBekIsQ0FBVjtBQUNBLFNBQU9DLEdBQVA7QUFDSCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbHlkaWEvRGVza3RvcC93b3JrU3BhY2UvZGV4L2RlbWF4LWJyaWRnZS1zZGsvc3JjL3Nkay9tb2RlbC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRVJDMjBUb2tlbkFCSSBmcm9tICcuLi9hYmkvRVJDMjBUb2tlbi5qc29uJztcbmltcG9ydCBCaWdOdW1iZXIgZnJvbSBcImJpZ251bWJlci5qc1wiO1xuaW1wb3J0IEJhc2VJbnN0YW5jZSBmcm9tICcuL0Jhc2VJbnN0YW5jZSc7XG5pbXBvcnQgV2ViM1Byb3ZpZGVyIGZyb20gJy4uL1dlYjNQcm92aWRlci5qcyc7XG5cbmNsYXNzIEVSQzIwVG9rZW4gZXh0ZW5kcyBCYXNlSW5zdGFuY2Uge1xuICAgIGNvbnN0cnVjdG9yKHByb3ZpZGVyLCBhZGRyZXNzKSB7XG4gICAgICAgIHN1cGVyKHByb3ZpZGVyLCBFUkMyMFRva2VuQUJJLCBhZGRyZXNzKTtcbiAgICB9XG5cbiAgICBhc3luYyBiYWxhbmNlT2YodXNlcikge1xuICAgICAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgICAgIHVzZXIgPSB0aGlzLnByb3ZpZGVyLmFjY291bnQ7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IF90b2tlbiA9IGF3YWl0IHRoaXMuaW5mbygpO1xuICAgICAgICBsZXQgcmVzID0gJzAnXG4gICAgICAgIGlmICh0aGlzLnByb3ZpZGVyLmlzWmVyb0FkZHJlc3ModGhpcy5hZGRyZXNzKSkge1xuICAgICAgICAgICAgcmVzID0gYXdhaXQgdGhpcy5wcm92aWRlci53ZWIzLmV0aC5nZXRCYWxhbmNlKHVzZXIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzID0gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLmJhbGFuY2VPZih1c2VyKS5jYWxsKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBCaWdOdW1iZXIocmVzKS5zaGlmdGVkQnkoLTEgKiBfdG9rZW4uZGVjaW1hbHMpLnRvRml4ZWQoKTtcbiAgICB9XG5cbiAgICBhc3luYyB0b2tlbkJhbGFuY2VPZih1c2VyKSB7XG4gICAgICAgIGlmICghdXNlcikge1xuICAgICAgICAgICAgdXNlciA9IHRoaXMucHJvdmlkZXIuYWNjb3VudDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgX3Rva2VuID0gYXdhaXQgdGhpcy5pbmZvKCk7XG4gICAgICAgIGxldCByZXMgPSAnMCdcbiAgICAgICAgaWYgKCF0aGlzLnByb3ZpZGVyLmlzWmVyb0FkZHJlc3ModGhpcy5hZGRyZXNzKSkge1xuICAgICAgICAgICAgcmVzID0gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLmJhbGFuY2VPZih1c2VyKS5jYWxsKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBCaWdOdW1iZXIocmVzKS5zaGlmdGVkQnkoLTEgKiBfdG9rZW4uZGVjaW1hbHMpLnRvRml4ZWQoKTtcbiAgICB9XG5cbiAgICBhc3luYyBzaG93QmFsYW5jZU9mKGZtdCwgdXNlcikge1xuICAgICAgICBsZXQgZCA9IGF3YWl0IHRoaXMuaW5mbygpO1xuICAgICAgICByZXR1cm4gbmV3IEJpZ051bWJlcihhd2FpdCB0aGlzLmJhbGFuY2VPZih1c2VyKSkuc2hpZnRlZEJ5KC0xICogZC5kZWNpbWFscykudG9GaXhlZChmbXQpO1xuICAgIH1cblxuICAgIGFzeW5jIGluZm8oKSB7XG4gICAgICAgIGxldCBjYWNoZSA9IHRoaXMucHJvdmlkZXIudG9rZW5zW3RoaXMuYWRkcmVzcy50b0xvY2FsZUxvd2VyQ2FzZSgpXTtcbiAgICAgICAgaWYgKGNhY2hlKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGU7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJlcyA9IHt9O1xuICAgICAgICBpZiAodGhpcy5wcm92aWRlci5pc1plcm9BZGRyZXNzKHRoaXMuYWRkcmVzcykpIHtcbiAgICAgICAgICAgIHJlcyA9IHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiB0aGlzLmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgc3ltYm9sOiB0aGlzLnByb3ZpZGVyLmdldFplcm9TeW1ib2woKSxcbiAgICAgICAgICAgICAgICB0b3RhbFN1cHBseTogMCxcbiAgICAgICAgICAgICAgICBkZWNpbWFsczogMThcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXMgPSB7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5hZGRyZXNzLFxuICAgICAgICAgICAgICAgIHN5bWJvbDogYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLnN5bWJvbCgpLmNhbGwoKSxcbiAgICAgICAgICAgICAgICB0b3RhbFN1cHBseTogYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLnRvdGFsU3VwcGx5KCkuY2FsbCgpLFxuICAgICAgICAgICAgICAgIGRlY2ltYWxzOiBhd2FpdCB0aGlzLmNvbnRyYWN0Lm1ldGhvZHMuZGVjaW1hbHMoKS5jYWxsKClcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcm92aWRlci50b2tlbnNbdGhpcy5hZGRyZXNzLnRvTG9jYWxlTG93ZXJDYXNlKCldID0gcmVzO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cblxuICAgIGFzeW5jIGFwcHJvdmUoc3BlbmRlcikge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnYXBwcm92ZTonLCB0b2tlbiwgc3BlbmRlcilcbiAgICAgICAgaWYgKCFzcGVuZGVyKSB7XG4gICAgICAgICAgICB0aHJvdyAoJ0lsbGVnYWwgYXBwcm92ZScpO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHRvdGFsID0gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLnRvdGFsU3VwcGx5KCkuY2FsbCgpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZygndG90YWw6JywgdG90YWwpO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5wcm92aWRlci5leGVjdXRlQ29udHJhY3QodGhpcy5jb250cmFjdCwgJ2FwcHJvdmUnLCAwLCBbc3BlbmRlciwgdG90YWxdKTtcbiAgICB9XG5cbiAgICBhc3luYyBhbGxvd2FuY2UodXNlciwgc3BlbmRlcikge1xuICAgICAgICAvLyBjb25zb2xlLmxvZygnYWxsb3dhbmNlOicsIHNwZW5kZXIsIHVzZXIpO1xuICAgICAgICBpZiAodGhpcy5wcm92aWRlci5pc1plcm9BZGRyZXNzKHRoaXMuYWRkcmVzcykpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQmlnTnVtYmVyKDEwKS5zaGlmdGVkQnkoMzApLnRvRml4ZWQoKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgX3Rva2VuID0gYXdhaXQgdGhpcy5pbmZvKCk7XG4gICAgICAgIGxldCByZXMgPSBhd2FpdCB0aGlzLmNvbnRyYWN0Lm1ldGhvZHMuYWxsb3dhbmNlKHVzZXIsIHNwZW5kZXIpLmNhbGwoKTtcbiAgICAgICAgcmV0dXJuIG5ldyBCaWdOdW1iZXIocmVzKS5zaGlmdGVkQnkoLTEgKiBfdG9rZW4uZGVjaW1hbHMpLnRvRml4ZWQoKTtcbiAgICB9XG5cbiAgICBhc3luYyB0cmFuc2Zlcih0bywgYW1vdW50KSB7XG4gICAgICAgIGxldCBfdG9rZW4gPSBhd2FpdCB0aGlzLmluZm8oKVxuICAgICAgICBhbW91bnQgPSBuZXcgQmlnTnVtYmVyKGFtb3VudCkuc2hpZnRlZEJ5KDEgKiBfdG9rZW4uZGVjaW1hbHMpLnRvRml4ZWQoKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucHJvdmlkZXIuZXhlY3V0ZUNvbnRyYWN0KHRoaXMuY29udHJhY3QsICd0cmFuc2ZlcicsIDAsIFt0bywgYW1vdW50XSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBuZXdFUkMyMFRva2VuKGNoYWluSWQsIHRva2VuKSB7XG4gICAgbGV0IHByb3ZpZGVyID0gV2ViM1Byb3ZpZGVyKGNoYWluSWQpO1xuICAgIGxldCBpbnMgPSBuZXcgRVJDMjBUb2tlbihwcm92aWRlciwgdG9rZW4pO1xuICAgIHJldHVybiBpbnM7XG59XG5cbmV4cG9ydCB7IEVSQzIwVG9rZW4sIG5ld0VSQzIwVG9rZW4gfVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "ERC20Token.js"
      ],
      "names": [
        "ERC20Token",
        "BaseInstance",
        "constructor",
        "provider",
        "address",
        "ERC20TokenABI",
        "balanceOf",
        "user",
        "account",
        "_token",
        "info",
        "res",
        "isZeroAddress",
        "web3",
        "eth",
        "getBalance",
        "contract",
        "methods",
        "call",
        "BigNumber",
        "shiftedBy",
        "decimals",
        "toFixed",
        "tokenBalanceOf",
        "showBalanceOf",
        "fmt",
        "d",
        "cache",
        "tokens",
        "toLocaleLowerCase",
        "symbol",
        "getZeroSymbol",
        "totalSupply",
        "approve",
        "spender",
        "total",
        "executeContract",
        "allowance",
        "transfer",
        "to",
        "amount",
        "newERC20Token",
        "chainId",
        "token",
        "ins"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "sourcesContent": [
        "import ERC20TokenABI from '../abi/ERC20Token.json';\nimport BigNumber from \"bignumber.js\";\nimport BaseInstance from './BaseInstance';\nimport Web3Provider from '../Web3Provider.js';\n\nclass ERC20Token extends BaseInstance {\n    constructor(provider, address) {\n        super(provider, ERC20TokenABI, address);\n    }\n\n    async balanceOf(user) {\n        if (!user) {\n            user = this.provider.account;\n        }\n        let _token = await this.info();\n        let res = '0'\n        if (this.provider.isZeroAddress(this.address)) {\n            res = await this.provider.web3.eth.getBalance(user);\n        } else {\n            res = await this.contract.methods.balanceOf(user).call();\n        }\n        return new BigNumber(res).shiftedBy(-1 * _token.decimals).toFixed();\n    }\n\n    async tokenBalanceOf(user) {\n        if (!user) {\n            user = this.provider.account;\n        }\n        let _token = await this.info();\n        let res = '0'\n        if (!this.provider.isZeroAddress(this.address)) {\n            res = await this.contract.methods.balanceOf(user).call();\n        }\n        return new BigNumber(res).shiftedBy(-1 * _token.decimals).toFixed();\n    }\n\n    async showBalanceOf(fmt, user) {\n        let d = await this.info();\n        return new BigNumber(await this.balanceOf(user)).shiftedBy(-1 * d.decimals).toFixed(fmt);\n    }\n\n    async info() {\n        let cache = this.provider.tokens[this.address.toLocaleLowerCase()];\n        if (cache) {\n            return cache;\n        }\n        let res = {};\n        if (this.provider.isZeroAddress(this.address)) {\n            res = {\n                address: this.address,\n                symbol: this.provider.getZeroSymbol(),\n                totalSupply: 0,\n                decimals: 18\n            };\n        } else {\n            res = {\n                address: this.address,\n                symbol: await this.contract.methods.symbol().call(),\n                totalSupply: await this.contract.methods.totalSupply().call(),\n                decimals: await this.contract.methods.decimals().call()\n            };\n        }\n        this.provider.tokens[this.address.toLocaleLowerCase()] = res;\n        return res;\n    }\n\n    async approve(spender) {\n        // console.log('approve:', token, spender)\n        if (!spender) {\n            throw ('Illegal approve');\n        }\n\n        let total = await this.contract.methods.totalSupply().call();\n        // console.log('total:', total);\n        return await this.provider.executeContract(this.contract, 'approve', 0, [spender, total]);\n    }\n\n    async allowance(user, spender) {\n        // console.log('allowance:', spender, user);\n        if (this.provider.isZeroAddress(this.address)) {\n            return new BigNumber(10).shiftedBy(30).toFixed();\n        }\n        let _token = await this.info();\n        let res = await this.contract.methods.allowance(user, spender).call();\n        return new BigNumber(res).shiftedBy(-1 * _token.decimals).toFixed();\n    }\n\n    async transfer(to, amount) {\n        let _token = await this.info()\n        amount = new BigNumber(amount).shiftedBy(1 * _token.decimals).toFixed();\n        return await this.provider.executeContract(this.contract, 'transfer', 0, [to, amount]);\n    }\n}\n\nfunction newERC20Token(chainId, token) {\n    let provider = Web3Provider(chainId);\n    let ins = new ERC20Token(provider, token);\n    return ins;\n}\n\nexport { ERC20Token, newERC20Token }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1624869237634
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/BaseInstance.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/BaseInstance.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/BaseInstance.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/BaseInstance.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
        "sourceFileName": "BaseInstance.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass BaseInstance {\n  constructor(provider, abi, address) {\n    this.address = address;\n    this.provider = provider;\n    this.abi = abi;\n    this.subscribes = [];\n    this.subscriptions = [];\n\n    if (address) {\n      this.contract = this.provider.getContract(this.abi, address);\n    }\n  }\n\n  initSubscribe(eventNames = []) {\n    let subscription = this.provider.web3.eth.subscribe('logs', {\n      fromBlock: 'latest',\n      address: this.address\n    }, (error, result) => {\n      if (!error) {\n        let eventLog = this.provider.web3Util.findEventOneLog(this.provider.web3, this.abi, result, eventNames);\n        this.subscribes.forEach(cb => {\n          console.log('initSubscribe subscribe', eventLog);\n          cb(this.address, eventLog);\n        });\n      }\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  subscribe(cb) {\n    if (!this.subscribes.includes(cb)) {\n      console.log('initSubscribe subscribe');\n      this.subscribes.push(cb);\n    }\n  }\n\n  unsubscribe() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe(function (error, success) {\n        if (success) console.log('Successfully unsubscribed!');\n      });\n    });\n  }\n\n  clean() {\n    this.unsubscribe();\n  }\n\n}\n\nexports.default = BaseInstance;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2VJbnN0YW5jZS5qcyJdLCJuYW1lcyI6WyJCYXNlSW5zdGFuY2UiLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVyIiwiYWJpIiwiYWRkcmVzcyIsInN1YnNjcmliZXMiLCJzdWJzY3JpcHRpb25zIiwiY29udHJhY3QiLCJnZXRDb250cmFjdCIsImluaXRTdWJzY3JpYmUiLCJldmVudE5hbWVzIiwic3Vic2NyaXB0aW9uIiwid2ViMyIsImV0aCIsInN1YnNjcmliZSIsImZyb21CbG9jayIsImVycm9yIiwicmVzdWx0IiwiZXZlbnRMb2ciLCJ3ZWIzVXRpbCIsImZpbmRFdmVudE9uZUxvZyIsImZvckVhY2giLCJjYiIsImNvbnNvbGUiLCJsb2ciLCJwdXNoIiwiaW5jbHVkZXMiLCJ1bnN1YnNjcmliZSIsInN1Y2Nlc3MiLCJjbGVhbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFlLE1BQU1BLFlBQU4sQ0FBbUI7QUFDOUJDLEVBQUFBLFdBQVcsQ0FBQ0MsUUFBRCxFQUFXQyxHQUFYLEVBQWdCQyxPQUFoQixFQUF5QjtBQUNoQyxTQUFLQSxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLRixRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLFNBQUtDLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtFLFVBQUwsR0FBa0IsRUFBbEI7QUFDQSxTQUFLQyxhQUFMLEdBQXFCLEVBQXJCOztBQUNBLFFBQUdGLE9BQUgsRUFBWTtBQUNSLFdBQUtHLFFBQUwsR0FBZ0IsS0FBS0wsUUFBTCxDQUFjTSxXQUFkLENBQTBCLEtBQUtMLEdBQS9CLEVBQW9DQyxPQUFwQyxDQUFoQjtBQUNIO0FBQ0o7O0FBRURLLEVBQUFBLGFBQWEsQ0FBQ0MsVUFBVSxHQUFDLEVBQVosRUFBZ0I7QUFDekIsUUFBSUMsWUFBWSxHQUFHLEtBQUtULFFBQUwsQ0FBY1UsSUFBZCxDQUFtQkMsR0FBbkIsQ0FBdUJDLFNBQXZCLENBQWlDLE1BQWpDLEVBQXlDO0FBQ3hEQyxNQUFBQSxTQUFTLEVBQUUsUUFENkM7QUFFeERYLE1BQUFBLE9BQU8sRUFBRSxLQUFLQTtBQUYwQyxLQUF6QyxFQUdoQixDQUFDWSxLQUFELEVBQVFDLE1BQVIsS0FBbUI7QUFDbEIsVUFBSSxDQUFDRCxLQUFMLEVBQVk7QUFDUixZQUFJRSxRQUFRLEdBQUcsS0FBS2hCLFFBQUwsQ0FBY2lCLFFBQWQsQ0FBdUJDLGVBQXZCLENBQXVDLEtBQUtsQixRQUFMLENBQWNVLElBQXJELEVBQTJELEtBQUtULEdBQWhFLEVBQXFFYyxNQUFyRSxFQUE2RVAsVUFBN0UsQ0FBZjtBQUNBLGFBQUtMLFVBQUwsQ0FBZ0JnQixPQUFoQixDQUF5QkMsRUFBRCxJQUFNO0FBQzFCQyxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWixFQUF1Q04sUUFBdkM7QUFDQUksVUFBQUEsRUFBRSxDQUFDLEtBQUtsQixPQUFOLEVBQWVjLFFBQWYsQ0FBRjtBQUNILFNBSEQ7QUFJSDtBQUNKLEtBWGtCLENBQW5CO0FBWUEsU0FBS1osYUFBTCxDQUFtQm1CLElBQW5CLENBQXdCZCxZQUF4QjtBQUNIOztBQUVERyxFQUFBQSxTQUFTLENBQUNRLEVBQUQsRUFBSztBQUNWLFFBQUcsQ0FBQyxLQUFLakIsVUFBTCxDQUFnQnFCLFFBQWhCLENBQXlCSixFQUF6QixDQUFKLEVBQWtDO0FBQzlCQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWjtBQUNBLFdBQUtuQixVQUFMLENBQWdCb0IsSUFBaEIsQ0FBcUJILEVBQXJCO0FBQ0g7QUFDSjs7QUFFREssRUFBQUEsV0FBVyxHQUFHO0FBQ1YsU0FBS3JCLGFBQUwsQ0FBbUJlLE9BQW5CLENBQTRCVixZQUFELElBQWdCO0FBQ3ZDQSxNQUFBQSxZQUFZLENBQUNnQixXQUFiLENBQXlCLFVBQVNYLEtBQVQsRUFBZ0JZLE9BQWhCLEVBQXdCO0FBQzdDLFlBQUdBLE9BQUgsRUFDSUwsT0FBTyxDQUFDQyxHQUFSLENBQVksNEJBQVo7QUFDUCxPQUhEO0FBSUgsS0FMRDtBQU1IOztBQUVESyxFQUFBQSxLQUFLLEdBQUc7QUFDSixTQUFLRixXQUFMO0FBQ0g7O0FBOUM2QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbHlkaWEvRGVza3RvcC93b3JrU3BhY2UvZGV4L2RlbWF4LWJyaWRnZS1zZGsvc3JjL3Nkay9tb2RlbC8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlSW5zdGFuY2Uge1xuICAgIGNvbnN0cnVjdG9yKHByb3ZpZGVyLCBhYmksIGFkZHJlc3MpIHtcbiAgICAgICAgdGhpcy5hZGRyZXNzID0gYWRkcmVzcztcbiAgICAgICAgdGhpcy5wcm92aWRlciA9IHByb3ZpZGVyO1xuICAgICAgICB0aGlzLmFiaSA9IGFiaTtcbiAgICAgICAgdGhpcy5zdWJzY3JpYmVzID0gW107XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9IFtdO1xuICAgICAgICBpZihhZGRyZXNzKSB7XG4gICAgICAgICAgICB0aGlzLmNvbnRyYWN0ID0gdGhpcy5wcm92aWRlci5nZXRDb250cmFjdCh0aGlzLmFiaSwgYWRkcmVzcyk7XG4gICAgICAgIH0gXG4gICAgfVxuXG4gICAgaW5pdFN1YnNjcmliZShldmVudE5hbWVzPVtdKSB7XG4gICAgICAgIGxldCBzdWJzY3JpcHRpb24gPSB0aGlzLnByb3ZpZGVyLndlYjMuZXRoLnN1YnNjcmliZSgnbG9ncycsIHtcbiAgICAgICAgICAgIGZyb21CbG9jazogJ2xhdGVzdCcsXG4gICAgICAgICAgICBhZGRyZXNzOiB0aGlzLmFkZHJlc3NcbiAgICAgICAgfSwgKGVycm9yLCByZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmICghZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBsZXQgZXZlbnRMb2cgPSB0aGlzLnByb3ZpZGVyLndlYjNVdGlsLmZpbmRFdmVudE9uZUxvZyh0aGlzLnByb3ZpZGVyLndlYjMsIHRoaXMuYWJpLCByZXN1bHQsIGV2ZW50TmFtZXMpO1xuICAgICAgICAgICAgICAgIHRoaXMuc3Vic2NyaWJlcy5mb3JFYWNoKChjYik9PntcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2luaXRTdWJzY3JpYmUgc3Vic2NyaWJlJywgZXZlbnRMb2cpO1xuICAgICAgICAgICAgICAgICAgICBjYih0aGlzLmFkZHJlc3MsIGV2ZW50TG9nKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2goc3Vic2NyaXB0aW9uKTtcbiAgICB9XG5cbiAgICBzdWJzY3JpYmUoY2IpIHtcbiAgICAgICAgaWYoIXRoaXMuc3Vic2NyaWJlcy5pbmNsdWRlcyhjYikpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdpbml0U3Vic2NyaWJlIHN1YnNjcmliZScpXG4gICAgICAgICAgICB0aGlzLnN1YnNjcmliZXMucHVzaChjYik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1bnN1YnNjcmliZSgpIHtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmZvckVhY2goKHN1YnNjcmlwdGlvbik9PntcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZShmdW5jdGlvbihlcnJvciwgc3VjY2Vzcyl7XG4gICAgICAgICAgICAgICAgaWYoc3VjY2VzcylcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3NmdWxseSB1bnN1YnNjcmliZWQhJyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjbGVhbigpIHtcbiAgICAgICAgdGhpcy51bnN1YnNjcmliZSgpO1xuICAgIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "BaseInstance.js"
      ],
      "names": [
        "BaseInstance",
        "constructor",
        "provider",
        "abi",
        "address",
        "subscribes",
        "subscriptions",
        "contract",
        "getContract",
        "initSubscribe",
        "eventNames",
        "subscription",
        "web3",
        "eth",
        "subscribe",
        "fromBlock",
        "error",
        "result",
        "eventLog",
        "web3Util",
        "findEventOneLog",
        "forEach",
        "cb",
        "console",
        "log",
        "push",
        "includes",
        "unsubscribe",
        "success",
        "clean"
      ],
      "mappings": ";;;;;;;AAAe,MAAMA,YAAN,CAAmB;AAC9BC,EAAAA,WAAW,CAACC,QAAD,EAAWC,GAAX,EAAgBC,OAAhB,EAAyB;AAChC,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKE,UAAL,GAAkB,EAAlB;AACA,SAAKC,aAAL,GAAqB,EAArB;;AACA,QAAGF,OAAH,EAAY;AACR,WAAKG,QAAL,GAAgB,KAAKL,QAAL,CAAcM,WAAd,CAA0B,KAAKL,GAA/B,EAAoCC,OAApC,CAAhB;AACH;AACJ;;AAEDK,EAAAA,aAAa,CAACC,UAAU,GAAC,EAAZ,EAAgB;AACzB,QAAIC,YAAY,GAAG,KAAKT,QAAL,CAAcU,IAAd,CAAmBC,GAAnB,CAAuBC,SAAvB,CAAiC,MAAjC,EAAyC;AACxDC,MAAAA,SAAS,EAAE,QAD6C;AAExDX,MAAAA,OAAO,EAAE,KAAKA;AAF0C,KAAzC,EAGhB,CAACY,KAAD,EAAQC,MAAR,KAAmB;AAClB,UAAI,CAACD,KAAL,EAAY;AACR,YAAIE,QAAQ,GAAG,KAAKhB,QAAL,CAAciB,QAAd,CAAuBC,eAAvB,CAAuC,KAAKlB,QAAL,CAAcU,IAArD,EAA2D,KAAKT,GAAhE,EAAqEc,MAArE,EAA6EP,UAA7E,CAAf;AACA,aAAKL,UAAL,CAAgBgB,OAAhB,CAAyBC,EAAD,IAAM;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,QAAvC;AACAI,UAAAA,EAAE,CAAC,KAAKlB,OAAN,EAAec,QAAf,CAAF;AACH,SAHD;AAIH;AACJ,KAXkB,CAAnB;AAYA,SAAKZ,aAAL,CAAmBmB,IAAnB,CAAwBd,YAAxB;AACH;;AAEDG,EAAAA,SAAS,CAACQ,EAAD,EAAK;AACV,QAAG,CAAC,KAAKjB,UAAL,CAAgBqB,QAAhB,CAAyBJ,EAAzB,CAAJ,EAAkC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,WAAKnB,UAAL,CAAgBoB,IAAhB,CAAqBH,EAArB;AACH;AACJ;;AAEDK,EAAAA,WAAW,GAAG;AACV,SAAKrB,aAAL,CAAmBe,OAAnB,CAA4BV,YAAD,IAAgB;AACvCA,MAAAA,YAAY,CAACgB,WAAb,CAAyB,UAASX,KAAT,EAAgBY,OAAhB,EAAwB;AAC7C,YAAGA,OAAH,EACIL,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACP,OAHD;AAIH,KALD;AAMH;;AAEDK,EAAAA,KAAK,GAAG;AACJ,SAAKF,WAAL;AACH;;AA9C6B",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "sourcesContent": [
        "export default class BaseInstance {\n    constructor(provider, abi, address) {\n        this.address = address;\n        this.provider = provider;\n        this.abi = abi;\n        this.subscribes = [];\n        this.subscriptions = [];\n        if(address) {\n            this.contract = this.provider.getContract(this.abi, address);\n        } \n    }\n\n    initSubscribe(eventNames=[]) {\n        let subscription = this.provider.web3.eth.subscribe('logs', {\n            fromBlock: 'latest',\n            address: this.address\n        }, (error, result) => {\n            if (!error) {\n                let eventLog = this.provider.web3Util.findEventOneLog(this.provider.web3, this.abi, result, eventNames);\n                this.subscribes.forEach((cb)=>{\n                    console.log('initSubscribe subscribe', eventLog);\n                    cb(this.address, eventLog);\n                })\n            }\n        });\n        this.subscriptions.push(subscription);\n    }\n\n    subscribe(cb) {\n        if(!this.subscribes.includes(cb)) {\n            console.log('initSubscribe subscribe')\n            this.subscribes.push(cb);\n        }\n    }\n\n    unsubscribe() {\n        this.subscriptions.forEach((subscription)=>{\n            subscription.unsubscribe(function(error, success){\n                if(success)\n                    console.log('Successfully unsubscribed!');\n            });\n        })\n    }\n\n    clean() {\n        this.unsubscribe();\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1623748515466
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/Web3Provider.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/Web3Provider.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/Web3Provider.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/Web3Provider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
        "sourceFileName": "Web3Provider.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Web3Provider;\n\nvar _web = _interopRequireDefault(require(\"web3\"));\n\nvar _Web3Util = _interopRequireDefault(require(\"./Web3Util.js\"));\n\nvar _ChainConfig = require(\"./config/ChainConfig.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass Web3ProviderInstance {\n  constructor(chainId, account) {\n    this.ZERO_ADDR = '0x0000000000000000000000000000000000000000';\n    this.web3 = new _web.default(_ChainConfig.CHAIN_RPC[chainId]);\n    this.chainId = chainId;\n    this.tokens = [];\n    this.account = account;\n    this.apiModules = [];\n  }\n\n  registerModule(module) {\n    this.apiModules.push(module);\n  }\n\n  initModules() {\n    for (let module of this.apiModules) {\n      module.initialize();\n    }\n\n    for (let module of this.apiModules) {\n      module.initAfter();\n    }\n  }\n\n  getContract(abi, address) {\n    if (!abi || !address) {\n      throw 'Illegal getContract address:', address;\n    }\n\n    return new this.web3.eth.Contract(abi, address);\n  }\n\n  getContractMethods(abi, address) {\n    return new this.web3.eth.Contract(abi, address).methods;\n  }\n\n  getContractAddr(name) {\n    return _ChainConfig.ContractsAddr[this.chainId][name];\n  }\n\n  getTokenAddress(name) {\n    return _ChainConfig.Tokens[this.chainId][name];\n  }\n\n  isZeroAddress(addr) {\n    return addr == this.ZERO_ADDR;\n  }\n\n  getZeroSymbol() {\n    return _ChainConfig.ChainSymbol.ZeroToken[this.chainId];\n  }\n\n  async getGasPrice() {\n    return await this.web3.eth.getGasPrice();\n  }\n\n  async getBlockNumber() {\n    let res = await this.web3.eth.getBlockNumber();\n    return Number(res);\n  }\n\n  getBlockSpanTime() {\n    if (this.chainId == 1) {\n      return 13.5;\n    }\n\n    return 3;\n  }\n\n  getBlockToTimes(start, end) {\n    let now = new Date().getTime();\n    let spanTime = (Number(end) - Number(start)) * this.getBlockSpanTime();\n    return now + parseInt(spanTime * 1000);\n  }\n\n  async getNowToEndBlockTime(block) {\n    let currentBlock = await this.getBlockNumber();\n    return this.getBlockToTimes(currentBlock, block);\n  }\n\n  getBlockNumbers(blockNumber, blockTime, targetTime) {\n    let diff = (targetTime - blockTime) / 1000 / this.getBlockSpanTime();\n    return Number(blockNumber) + parseInt(diff);\n  }\n\n  getBlockNumberCount(blockTime, targetTime) {\n    return parseInt((targetTime - blockTime) / 1000 / this.getBlockSpanTime());\n  }\n\n}\n\nvar _Web3Provider = {};\n\nfunction Web3Provider(chainId, account) {\n  chainId = Number(chainId);\n\n  if (!_Web3Provider.hasOwnProperty(chainId)) {\n    _Web3Provider[chainId] = new Web3ProviderInstance(chainId, account);\n  }\n\n  return _Web3Provider[chainId];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Web3Provider.js"
      ],
      "names": [
        "Web3ProviderInstance",
        "constructor",
        "chainId",
        "account",
        "ZERO_ADDR",
        "web3",
        "Web3",
        "CHAIN_RPC",
        "tokens",
        "apiModules",
        "registerModule",
        "module",
        "push",
        "initModules",
        "initialize",
        "initAfter",
        "getContract",
        "abi",
        "address",
        "eth",
        "Contract",
        "getContractMethods",
        "methods",
        "getContractAddr",
        "name",
        "ContractsAddr",
        "getTokenAddress",
        "Tokens",
        "isZeroAddress",
        "addr",
        "getZeroSymbol",
        "ChainSymbol",
        "ZeroToken",
        "getGasPrice",
        "getBlockNumber",
        "res",
        "Number",
        "getBlockSpanTime",
        "getBlockToTimes",
        "start",
        "end",
        "now",
        "Date",
        "getTime",
        "spanTime",
        "parseInt",
        "getNowToEndBlockTime",
        "block",
        "currentBlock",
        "getBlockNumbers",
        "blockNumber",
        "blockTime",
        "targetTime",
        "diff",
        "getBlockNumberCount",
        "_Web3Provider",
        "Web3Provider",
        "hasOwnProperty"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/",
      "sourcesContent": [
        "import Web3 from \"web3\"\nimport web3Util from './Web3Util.js'\nimport { CHAIN_RPC, ContractsAddr, ChainSymbol, Tokens } from \"./config/ChainConfig.js\";\n\nclass Web3ProviderInstance {\n    constructor(chainId, account) {\n        this.ZERO_ADDR = '0x0000000000000000000000000000000000000000';\n        this.web3 = new Web3(CHAIN_RPC[chainId]);\n        this.chainId = chainId;\n        this.tokens = [];\n        this.account = account;\n        this.apiModules = [];\n    }\n\n    registerModule(module) {\n        this.apiModules.push(module);\n    }\n\n    initModules() {\n        for (let module of this.apiModules) {\n            module.initialize();\n        }\n        for (let module of this.apiModules) {\n            module.initAfter();\n        }\n    }\n\n    getContract(abi, address) {\n        if (!abi || !address) {\n            throw ('Illegal getContract address:', address);\n        }\n        return new this.web3.eth.Contract(abi, address)\n    }\n\n    getContractMethods(abi, address) {\n        return new this.web3.eth.Contract(abi, address).methods\n    }\n\n    getContractAddr(name) {\n        return ContractsAddr[this.chainId][name]\n    }\n\n    getTokenAddress(name) {\n        return Tokens[this.chainId][name]\n    }\n\n    isZeroAddress(addr) {\n        return addr == this.ZERO_ADDR;\n    }\n\n    getZeroSymbol() {\n        return ChainSymbol.ZeroToken[this.chainId];\n    }\n\n    async getGasPrice() {\n        return await this.web3.eth.getGasPrice();\n    }\n\n    async getBlockNumber() {\n        let res = await this.web3.eth.getBlockNumber();\n        return Number(res);\n    }\n\n    getBlockSpanTime() {\n        if(this.chainId == 1) {\n            return 13.5;\n        }\n        return 3;\n    }\n\n    getBlockToTimes(start, end) {\n        let now = new Date().getTime();\n        let spanTime = (Number(end) - Number(start))* this.getBlockSpanTime();\n        return now+parseInt(spanTime *1000);\n    }\n\n    async getNowToEndBlockTime(block) {\n        let currentBlock = await this.getBlockNumber();\n        return this.getBlockToTimes(currentBlock, block);\n    }\n\n    getBlockNumbers(blockNumber, blockTime, targetTime) {\n        let diff = (targetTime - blockTime)/1000/this.getBlockSpanTime();\n        return Number(blockNumber) + parseInt(diff);\n    }\n\n    getBlockNumberCount(blockTime, targetTime) {\n        return parseInt((targetTime - blockTime)/1000/this.getBlockSpanTime());\n    }\n\n\n}\n\nvar _Web3Provider = {}\nexport default function Web3Provider(chainId, account) {\n    chainId = Number(chainId);\n    if (!_Web3Provider.hasOwnProperty(chainId)) {\n        _Web3Provider[chainId] = new Web3ProviderInstance(chainId, account);\n    }\n    return _Web3Provider[chainId];\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625218360622
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchTicketFactory.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchTicketFactory.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchTicketFactory.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchTicketFactory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
        "sourceFileName": "SwitchTicketFactory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newSwitchTicketFactory = newSwitchTicketFactory;\nexports.SwitchTicketPools = exports.SwitchTicketFactory = void 0;\n\nvar _SwitchTicketFactory2 = _interopRequireDefault(require(\"../abi/SwitchTicketFactory.json\"));\n\nvar _bignumber = _interopRequireDefault(require(\"bignumber.js\"));\n\nvar _BaseByName = _interopRequireDefault(require(\"./BaseByName\"));\n\nvar _ERC20Token = require(\"./ERC20Token.js\");\n\nvar _SwitchTreasury = require(\"./SwitchTreasury.js\");\n\nvar _Web3Provider = _interopRequireDefault(require(\"../Web3Provider.js\"));\n\nvar _ChainConfig = require(\"../config/ChainConfig.js\");\n\nvar _SwitchConfig = require(\"../config/SwitchConfig.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _switchTicketPools = {};\nvar _switchTicketPoolKeyMap = {};\n\nfunction asleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction getTicketPoolKey(symbol, token, chainId) {\n  return (symbol + token + chainId).toLowerCase();\n}\n\nfunction getTicketPoolByKey(symbol, token, chainId) {\n  return _switchTicketPoolKeyMap[getTicketPoolKey(symbol, token, chainId)];\n}\n\nclass SwitchTicketFactory extends _BaseByName.default {\n  constructor(provider) {\n    console.log('SwitchTicketFactory constructor chainId:', provider.chainId);\n    super(provider, _SwitchTicketFactory2.default, 'SwitchTicketFactory');\n    this.tokenMaps = {};\n  }\n\n  async getTokenInfo(token) {\n    this.tokenIns = new _ERC20Token.ERC20Token(this.provider, token);\n    return await this.tokenIns.info();\n  }\n\n  async getTokenMap(token) {\n    token = token.toLowerCase();\n\n    if (!this.tokenMaps.hasOwnProperty(token)) {\n      let ticket = await this.contract.methods.getTokenMap(token).call();\n      this.tokenMaps[token] = ticket.toLowerCase();\n      this.tokenMaps[ticket.toLowerCase()] = token;\n    }\n\n    return this.tokenMaps[token];\n  }\n\n  async countTicket() {\n    return await this.contract.methods.countTicket().call();\n  }\n\n  async tickets(i) {\n    return await this.contract.methods.tickets(i).call();\n  }\n\n  async queryWithdraw(user, ticket) {\n    let tokenInfo = await this.getTokenInfo(ticket);\n    let amountOut = await this.contract.methods.queryWithdraw(user, ticket).call();\n    return new _bignumber.default(amountOut).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n  }\n\n  async queryWithdrawInfo(user, ticket) {\n    let tokenInfo = await this.getTokenInfo(ticket);\n    let res = await this.contract.methods.queryWithdrawInfo(user, ticket).call();\n    res.balance = new _bignumber.default(res.balance).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n    res.amount = new _bignumber.default(res.amount).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n    return res;\n  }\n\n  async deposit(token, value, to) {\n    if (!to) {\n      to = this.provider.account;\n    }\n\n    let tokenInfo = await this.getTokenInfo(token);\n    let amount = new _bignumber.default(value).shiftedBy(1 * tokenInfo.decimals);\n    let ethValue = new _bignumber.default(0);\n\n    if (token.toLocaleLowerCase() == this.provider.ZERO_ADDR) {\n      ethValue = ethValue.plus(amount);\n    }\n\n    let res = await this.provider.executeContract(this.contract, 'deposit', ethValue.toFixed(), [token, amount.toFixed(), to]);\n    console.log('deposit:', res);\n    this.updateBalanceByKey(tokenInfo.symbol, token, this.provider.chainId, to);\n    return res;\n  }\n\n  async withdraw(isETH, to, ticket, value) {\n    let ticketInfo = await this.getTokenInfo(ticket);\n    let token = await this.getTokenMap(ticket);\n    let tokenInfo = await this.getTokenInfo(token);\n    let amount = new _bignumber.default(value).shiftedBy(1 * ticketInfo.decimals).toFixed();\n    let res = await this.provider.executeContract(this.contract, 'withdraw', 0, [isETH, to, ticket, amount]);\n    this.updateBalanceByKey(tokenInfo.symbol, token, this.provider.chainId, to);\n    return res;\n  }\n\n  async getTicketFactoryAddress() {\n    return _ChainConfig.ContractsAddr[this.provider.chainId].SwitchTicketFactory;\n  }\n\n  async updateTotal(pool) {\n    let tvl = new _bignumber.default(0);\n    let vol = new _bignumber.default(0);\n\n    for (let i = 0; i < pool.list.length; i++) {\n      let ele = pool.list[i]; // console.log('updateTotal:', ele.total, ele);\n\n      tvl = tvl.plus(ele.total);\n      vol = vol.plus(ele.total);\n    }\n\n    pool.tvl = tvl.toFixed();\n    pool.vol = vol.toFixed();\n  }\n\n  async updateBalanceByKey(symbol, address, chainId, walletAddr) {\n    if (!walletAddr) {\n      walletAddr = this.provider.account;\n    }\n\n    let ele = getTicketPoolByKey(symbol, address, chainId);\n\n    if (ele) {\n      await this.updateBalance(ele, walletAddr);\n    }\n  }\n\n  async updateBalance(ele, walletAddr) {\n    if (!walletAddr) {\n      walletAddr = this.provider.account;\n    } // console.log('updateBalance:', ele, walletAddr);\n\n\n    let token = (0, _ERC20Token.newERC20Token)(ele.chainId, ele.tokenAddress);\n    ele.tokenBalance = await token.balanceOf(walletAddr);\n    ele.tokenAllowance = await token.allowance(walletAddr, _ChainConfig.ContractsAddr[ele.chainId].SwitchTreasury);\n    let ticketAddr = await this.getTokenMap(ele.tokenAddress);\n    let ticket = (0, _ERC20Token.newERC20Token)(ele.chainId, ticketAddr); // let ticketInfo = await ticket.info();\n\n    ele.ticketAddress = ticketAddr;\n    ele.ticketBalance = await ticket.tokenBalanceOf(walletAddr);\n    ele.ticketSymbol = _ChainConfig.STAKINGTOKENPRE + ele.name;\n    let treasury = (0, _SwitchTreasury.newSwitchTreasury)(ele.chainId);\n    ele.total = await treasury.tokenBalanceOf(ele.tokenAddress);\n    await this.updateTotal(_switchTicketPools[ele.name]);\n    console.log('switchPool Data:', ele);\n  }\n\n  async updateUserAllowance(ele, walletAddr) {\n    if (!walletAddr) {\n      walletAddr = this.provider.account;\n    }\n\n    let token = (0, _ERC20Token.newERC20Token)(ele.chainId, ele.tokenAddress);\n    ele.tokenAllowance = await token.allowance(walletAddr, _ChainConfig.ContractsAddr[ele.chainId].SwitchTreasury);\n    return ele;\n  }\n\n  async updateData(ele, walletAddr) {\n    if (!walletAddr) {\n      walletAddr = this.provider.account;\n    }\n\n    let token = (0, _ERC20Token.newERC20Token)(this.provider.chainId, ele.tokenAddress);\n    let tokenInfo = await token.info();\n    ele.tokenSymbol = tokenInfo.symbol;\n    ele.tokenBalance = await token.balanceOf(walletAddr);\n    ele.tokenAllowance = await token.allowance(walletAddr, _ChainConfig.ContractsAddr[this.provider.chainId].SwitchTreasury);\n    let ticket = (0, _ERC20Token.newERC20Token)(this.provider.chainId, ele.ticketAddress);\n    let ticketInfo = await ticket.info();\n    ele.ticketSymbol = ticketInfo.symbol;\n    ele.ticketBalance = await ticket.tokenBalanceOf(walletAddr);\n  }\n\n  async iterateTokenMapData(start, end) {\n    let res = await this.contract.methods.iterateTokenMapData(start, end).call();\n    let data = [];\n\n    for (let i = 0; i < res.length; i++) {\n      let d = {\n        tokenAddress: token,\n        ticketAddress: ticket,\n        tokenBalance: '',\n        ticketBalance: '',\n        tokenAllowance: ''\n      };\n      this.updateData(d);\n      data.push(d);\n    }\n\n    return data;\n  }\n\n}\n\nexports.SwitchTicketFactory = SwitchTicketFactory;\n\nclass SwitchTicketPools {\n  constructor(provider) {\n    this.provider = provider;\n    this.envName = 'main';\n  }\n\n  getEnvName() {\n    if ([42, 97, 256].includes(this.provider.chainId)) {\n      return 'test';\n    }\n\n    return 'main';\n  }\n\n  getPools() {\n    this.envName = this.getEnvName();\n    _switchTicketPools = _SwitchConfig.SwitchPools[this.envName];\n    return _switchTicketPools;\n  }\n\n  async updateUserAllowance(pool, walletAddr) {\n    if (!walletAddr) {\n      walletAddr = this.provider.account;\n    }\n\n    let _tokenIns = new _ERC20Token.ERC20Token(this.provider, pool.tokenAddress);\n\n    pool.tokenAllowance = await _tokenIns.allowance(this.provider.account, this.provider.getContractAddr('SwitchTreasury'));\n    return pool;\n  }\n\n  async getSwitchPools(walletAddr) {\n    this.getPools();\n\n    for (let k in _switchTicketPools) {\n      if (_switchTicketPools[k].opened == true) {\n        _switchTicketPools[k].name = k;\n        _switchTicketPools[k].apr = '0';\n        _switchTicketPools[k].tvl = '0';\n        _switchTicketPools[k].vol = '0';\n\n        for (let i = 0; i < _switchTicketPools[k].list.length; i++) {\n          _switchTicketPools[k].list[i].isTicket = _switchTicketPools[k].isTicket;\n          _switchTicketPools[k].list[i].total = '0';\n          _switchTicketPools[k].list[i].tokenBalance = '0';\n          _switchTicketPools[k].list[i].tokenAllowance = '0';\n          _switchTicketPools[k].list[i].ticketAddress = '';\n          _switchTicketPools[k].list[i].ticketBalance = '0';\n          _switchTicketPools[k].list[i].ticketSymbol = '';\n\n          if (!_switchTicketPools[k].list[i].hasOwnProperty('tokenSymbol')) {\n            _switchTicketPools[k].list[i].tokenSymbol = _switchTicketPools[k].list[i].name;\n          }\n\n          _switchTicketPoolKeyMap[getTicketPoolKey(_switchTicketPools[k].list[i].tokenSymbol, _switchTicketPools[k].list[i].tokenAddress, _switchTicketPools[k].list[i].chainId)] = _switchTicketPools[k].list[i];\n\n          if (walletAddr && _switchTicketPools[k].isTicket == false) {\n            try {\n              newSwitchTicketFactory(_switchTicketPools[k].list[i].chainId).updateBalance(_switchTicketPools[k].list[i], walletAddr);\n            } catch (e) {\n              console.error('updateBalance except:', _switchTicketPools[k].list[i], e);\n            }\n          }\n        }\n      }\n    }\n\n    ;\n    return _switchTicketPools;\n  }\n\n  async getSwitchTokens() {\n    let network = this.getEnvName();\n    let res = [];\n    await this.getSwitchPools();\n\n    for (let k in _SwitchConfig.SwitchPools[network]) {\n      if (_SwitchConfig.SwitchPools[network][k].opened) {\n        _SwitchConfig.SwitchPools[network][k].name = k;\n        res.push(_SwitchConfig.SwitchPools[network][k]);\n      }\n    }\n\n    return res;\n  }\n\n}\n\nexports.SwitchTicketPools = SwitchTicketPools;\nvar _SwitchTicketFactory = {};\n\nfunction newSwitchTicketFactory(chainId, account) {\n  chainId = Number(chainId);\n\n  if (!_SwitchTicketFactory.hasOwnProperty(chainId)) {\n    let provider = (0, _Web3Provider.default)(chainId, account);\n    _SwitchTicketFactory[chainId] = new SwitchTicketFactory(provider);\n  }\n\n  _SwitchTicketFactory[chainId].initialize(chainId, account);\n\n  return _SwitchTicketFactory[chainId];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "SwitchTicketFactory.js"
      ],
      "names": [
        "_switchTicketPools",
        "_switchTicketPoolKeyMap",
        "asleep",
        "ms",
        "Promise",
        "resolve",
        "setTimeout",
        "getTicketPoolKey",
        "symbol",
        "token",
        "chainId",
        "toLowerCase",
        "getTicketPoolByKey",
        "SwitchTicketFactory",
        "BaseByName",
        "constructor",
        "provider",
        "console",
        "log",
        "SwitchTicketFactoryABI",
        "tokenMaps",
        "getTokenInfo",
        "tokenIns",
        "ERC20Token",
        "info",
        "getTokenMap",
        "hasOwnProperty",
        "ticket",
        "contract",
        "methods",
        "call",
        "countTicket",
        "tickets",
        "i",
        "queryWithdraw",
        "user",
        "tokenInfo",
        "amountOut",
        "BigNumber",
        "shiftedBy",
        "decimals",
        "toFixed",
        "queryWithdrawInfo",
        "res",
        "balance",
        "amount",
        "deposit",
        "value",
        "to",
        "account",
        "ethValue",
        "toLocaleLowerCase",
        "ZERO_ADDR",
        "plus",
        "executeContract",
        "updateBalanceByKey",
        "withdraw",
        "isETH",
        "ticketInfo",
        "getTicketFactoryAddress",
        "ContractsAddr",
        "updateTotal",
        "pool",
        "tvl",
        "vol",
        "list",
        "length",
        "ele",
        "total",
        "address",
        "walletAddr",
        "updateBalance",
        "tokenAddress",
        "tokenBalance",
        "balanceOf",
        "tokenAllowance",
        "allowance",
        "SwitchTreasury",
        "ticketAddr",
        "ticketAddress",
        "ticketBalance",
        "tokenBalanceOf",
        "ticketSymbol",
        "STAKINGTOKENPRE",
        "name",
        "treasury",
        "updateUserAllowance",
        "updateData",
        "tokenSymbol",
        "iterateTokenMapData",
        "start",
        "end",
        "data",
        "d",
        "push",
        "SwitchTicketPools",
        "envName",
        "getEnvName",
        "includes",
        "getPools",
        "SwitchPools",
        "_tokenIns",
        "getContractAddr",
        "getSwitchPools",
        "k",
        "opened",
        "apr",
        "isTicket",
        "newSwitchTicketFactory",
        "e",
        "error",
        "getSwitchTokens",
        "network",
        "_SwitchTicketFactory",
        "Number",
        "initialize"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "sourcesContent": [
        "import SwitchTicketFactoryABI from '../abi/SwitchTicketFactory.json';\nimport BigNumber from \"bignumber.js\"\nimport BaseByName from './BaseByName';\nimport { ERC20Token } from './ERC20Token.js';\nimport { newSwitchTreasury } from './SwitchTreasury.js';\nimport { newERC20Token } from './ERC20Token.js';\nimport Web3Provider from '../Web3Provider.js';\nimport { ContractsAddr, STAKINGTOKENPRE } from '../config/ChainConfig.js';\nimport { SwitchPools } from '../config/SwitchConfig.js';\n\n\nvar _switchTicketPools = {};\nvar _switchTicketPoolKeyMap = {};\n\nfunction asleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nfunction getTicketPoolKey(symbol, token, chainId) {\n    return (symbol + token + chainId).toLowerCase();\n}\n\nfunction getTicketPoolByKey(symbol, token, chainId) {\n    return _switchTicketPoolKeyMap[getTicketPoolKey(symbol,token,chainId)];\n}\n\nclass SwitchTicketFactory extends BaseByName {\n    constructor(provider) {\n        console.log('SwitchTicketFactory constructor chainId:', provider.chainId);\n        super(provider, SwitchTicketFactoryABI, 'SwitchTicketFactory');\n        this.tokenMaps = {};\n    }\n\n    async getTokenInfo(token) {\n        this.tokenIns = new ERC20Token(this.provider, token);\n        return await this.tokenIns.info();\n    }\n\n    async getTokenMap(token) {\n        token = token.toLowerCase();\n        if(!this.tokenMaps.hasOwnProperty(token)) {\n            let ticket = await this.contract.methods.getTokenMap(token).call();\n            this.tokenMaps[token] = ticket.toLowerCase();\n            this.tokenMaps[ticket.toLowerCase()] = token;\n        }\n        return this.tokenMaps[token];\n    }\n\n    async countTicket() {\n        return await this.contract.methods.countTicket().call();\n    }\n\n    async tickets(i) {\n        return await this.contract.methods.tickets(i).call();\n    }\n\n    async queryWithdraw(user, ticket) {\n        let tokenInfo = await this.getTokenInfo(ticket)\n        let amountOut = await this.contract.methods.queryWithdraw(user, ticket).call();\n        return new BigNumber(amountOut).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n    }\n\n    async queryWithdrawInfo(user, ticket) {\n        let tokenInfo = await this.getTokenInfo(ticket)\n        let res = await this.contract.methods.queryWithdrawInfo(user, ticket).call();\n        res.balance = new BigNumber(res.balance).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n        res.amount = new BigNumber(res.amount).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n        return res;\n    }\n\n    async deposit(token, value, to) {\n        if (!to) {\n            to = this.provider.account\n        }\n        let tokenInfo = await this.getTokenInfo(token)\n        let amount = new BigNumber(value).shiftedBy(1 * tokenInfo.decimals)\n        let ethValue = new BigNumber(0);\n        if (token.toLocaleLowerCase() == this.provider.ZERO_ADDR) {\n            ethValue = ethValue.plus(amount)\n        }\n        let res = await this.provider.executeContract(this.contract, 'deposit', ethValue.toFixed(), [token, amount.toFixed(), to]);\n        console.log('deposit:', res);\n        this.updateBalanceByKey(tokenInfo.symbol, token, this.provider.chainId, to);\n        return res;\n    }\n\n    async withdraw(isETH, to, ticket, value) {\n        let ticketInfo = await this.getTokenInfo(ticket);\n        let token = await this.getTokenMap(ticket);\n        let tokenInfo = await this.getTokenInfo(token);\n        let amount = new BigNumber(value).shiftedBy(1 * ticketInfo.decimals).toFixed();\n        let res = await this.provider.executeContract(this.contract, 'withdraw', 0, [isETH, to, ticket, amount]);\n        this.updateBalanceByKey(tokenInfo.symbol, token, this.provider.chainId, to);\n        return res\n    }\n\n    async getTicketFactoryAddress() {\n        return ContractsAddr[this.provider.chainId].SwitchTicketFactory;\n    }\n\n    async updateTotal(pool) {\n        let tvl = new BigNumber(0);\n        let vol = new BigNumber(0);\n        for (let i=0; i< pool.list.length; i++) {\n            let ele = pool.list[i];\n            // console.log('updateTotal:', ele.total, ele);\n            tvl = tvl.plus(ele.total);\n            vol = vol.plus(ele.total);\n        }\n        pool.tvl = tvl.toFixed()\n        pool.vol = vol.toFixed()\n    }\n\n    async updateBalanceByKey(symbol, address, chainId, walletAddr) {\n        if(!walletAddr) {\n            walletAddr = this.provider.account;\n        }\n        let ele = getTicketPoolByKey(symbol, address, chainId);\n        if(ele) {\n            await this.updateBalance(ele, walletAddr);\n        }\n    }\n\n    async updateBalance(ele, walletAddr) {\n        if(!walletAddr) {\n            walletAddr = this.provider.account;\n        }\n        // console.log('updateBalance:', ele, walletAddr);\n        let token = newERC20Token(ele.chainId, ele.tokenAddress);\n        ele.tokenBalance = await token.balanceOf(walletAddr);\n        ele.tokenAllowance = await token.allowance(walletAddr, ContractsAddr[ele.chainId].SwitchTreasury);\n        let ticketAddr = await this.getTokenMap(ele.tokenAddress);\n        let ticket = newERC20Token(ele.chainId, ticketAddr);\n        // let ticketInfo = await ticket.info();\n        ele.ticketAddress = ticketAddr;\n        ele.ticketBalance = await ticket.tokenBalanceOf(walletAddr);\n        ele.ticketSymbol = STAKINGTOKENPRE + ele.name;\n        let treasury = newSwitchTreasury(ele.chainId);\n        ele.total = await treasury.tokenBalanceOf(ele.tokenAddress);\n\n        await this.updateTotal(_switchTicketPools[ele.name]);\n        console.log('switchPool Data:', ele);\n    }\n\n    async updateUserAllowance(ele, walletAddr) {\n        if(!walletAddr) {\n            walletAddr = this.provider.account;\n        }\n        let token = newERC20Token(ele.chainId, ele.tokenAddress);\n        ele.tokenAllowance = await token.allowance(walletAddr, ContractsAddr[ele.chainId].SwitchTreasury);\n        return ele;\n    }\n\n    async updateData(ele, walletAddr) {\n        if(!walletAddr) {\n            walletAddr = this.provider.account;\n        }\n        let token = newERC20Token(this.provider.chainId, ele.tokenAddress);\n        let tokenInfo = await token.info();\n        ele.tokenSymbol = tokenInfo.symbol;\n        ele.tokenBalance = await token.balanceOf(walletAddr);\n        ele.tokenAllowance = await token.allowance(walletAddr, ContractsAddr[this.provider.chainId].SwitchTreasury);\n        let ticket = newERC20Token(this.provider.chainId, ele.ticketAddress);\n        let ticketInfo = await ticket.info();\n        ele.ticketSymbol = ticketInfo.symbol;\n        ele.ticketBalance = await ticket.tokenBalanceOf(walletAddr);\n    }\n\n    async iterateTokenMapData(start, end) {\n        let res = await this.contract.methods.iterateTokenMapData(start, end).call();\n        let data = [];\n        for(let i=0; i<res.length; i++) {\n            let d = {\n                tokenAddress: token,\n                ticketAddress: ticket,\n                tokenBalance: '',\n                ticketBalance: '',\n                tokenAllowance: '',\n            };\n            this.updateData(d);\n            data.push(d);\n        }\n        return data;\n    }\n}\n\nclass SwitchTicketPools {\n    constructor(provider) {\n        this.provider = provider;\n        this.envName = 'main';\n    }\n\n    getEnvName() {\n        if([42,97,256].includes(this.provider.chainId)) {\n            return 'test';\n        }\n        return 'main';\n    }\n\n    getPools() {\n        this.envName = this.getEnvName();\n        _switchTicketPools = SwitchPools[this.envName];\n        return _switchTicketPools;\n    }\n\n    async updateUserAllowance(pool, walletAddr) {\n        if(!walletAddr) {\n            walletAddr = this.provider.account\n        }\n        let _tokenIns = new ERC20Token(this.provider, pool.tokenAddress)\n        pool.tokenAllowance = await _tokenIns.allowance(this.provider.account, this.provider.getContractAddr('SwitchTreasury'))\n        return pool\n    }\n\n    async getSwitchPools(walletAddr) {\n        this.getPools();\n        for (let k in _switchTicketPools) {\n            if (_switchTicketPools[k].opened == true) {\n                _switchTicketPools[k].name = k\n                _switchTicketPools[k].apr = '0';\n                _switchTicketPools[k].tvl = '0';\n                _switchTicketPools[k].vol = '0';\n                for (let i=0; i<_switchTicketPools[k].list.length; i++) {\n                    _switchTicketPools[k].list[i].isTicket = _switchTicketPools[k].isTicket;\n                    _switchTicketPools[k].list[i].total = '0';\n                    _switchTicketPools[k].list[i].tokenBalance = '0';\n                    _switchTicketPools[k].list[i].tokenAllowance = '0';\n                    _switchTicketPools[k].list[i].ticketAddress = '';\n                    _switchTicketPools[k].list[i].ticketBalance = '0';\n                    _switchTicketPools[k].list[i].ticketSymbol = '';\n                    if(!_switchTicketPools[k].list[i].hasOwnProperty('tokenSymbol')) {\n                        _switchTicketPools[k].list[i].tokenSymbol = _switchTicketPools[k].list[i].name;\n                    }\n                    _switchTicketPoolKeyMap[getTicketPoolKey(_switchTicketPools[k].list[i].tokenSymbol, _switchTicketPools[k].list[i].tokenAddress, _switchTicketPools[k].list[i].chainId)] = _switchTicketPools[k].list[i];\n                    if(walletAddr && _switchTicketPools[k].isTicket == false) {\n                        try {\n                            newSwitchTicketFactory(_switchTicketPools[k].list[i].chainId).updateBalance(_switchTicketPools[k].list[i], walletAddr);\n                        } catch(e) {\n                            console.error('updateBalance except:', _switchTicketPools[k].list[i], e);\n                        }\n\n                    }\n                }\n            }\n        };\n        return _switchTicketPools;\n    }\n\n    async getSwitchTokens() {\n        let network = this.getEnvName();\n        let res = []\n        await this.getSwitchPools()\n        for (let k in SwitchPools[network]) {\n            if (SwitchPools[network][k].opened) {\n                SwitchPools[network][k].name = k\n                res.push(SwitchPools[network][k])\n            }\n        }\n        return res;\n    }\n\n}\n\nvar _SwitchTicketFactory = {}\nfunction newSwitchTicketFactory(chainId, account) {\n    chainId = Number(chainId);\n    if(!_SwitchTicketFactory.hasOwnProperty(chainId)) {\n        let provider = Web3Provider(chainId, account);\n        _SwitchTicketFactory[chainId] =  new SwitchTicketFactory(provider);\n    }\n    _SwitchTicketFactory[chainId].initialize(chainId, account);\n    return _SwitchTicketFactory[chainId];\n}\n\nexport { SwitchTicketFactory, SwitchTicketPools, newSwitchTicketFactory }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625218498153
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/BaseByName.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/BaseByName.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/BaseByName.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/BaseByName.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
        "sourceFileName": "BaseByName.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass BaseByName {\n  constructor(provider, abi, name) {\n    this.provider = provider;\n    this.abi = abi;\n    this.address = '';\n    this.name = name;\n    provider.registerModule(this);\n  }\n\n  initialize(chainId, account = null) {\n    this.provider.chainId = chainId;\n\n    if (account) {\n      this.provider.account = account;\n    }\n\n    this.address = this.provider.getContractAddr(this.name);\n\n    if (this.abi && this.address) {\n      this.contract = this.provider.getContract(this.abi, this.address);\n    }\n  }\n\n  initAfter() {}\n\n  clean() {}\n\n}\n\nexports.default = BaseByName;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2VCeU5hbWUuanMiXSwibmFtZXMiOlsiQmFzZUJ5TmFtZSIsImNvbnN0cnVjdG9yIiwicHJvdmlkZXIiLCJhYmkiLCJuYW1lIiwiYWRkcmVzcyIsInJlZ2lzdGVyTW9kdWxlIiwiaW5pdGlhbGl6ZSIsImNoYWluSWQiLCJhY2NvdW50IiwiZ2V0Q29udHJhY3RBZGRyIiwiY29udHJhY3QiLCJnZXRDb250cmFjdCIsImluaXRBZnRlciIsImNsZWFuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWUsTUFBTUEsVUFBTixDQUFpQjtBQUM1QkMsRUFBQUEsV0FBVyxDQUFDQyxRQUFELEVBQVdDLEdBQVgsRUFBZ0JDLElBQWhCLEVBQXNCO0FBQzdCLFNBQUtGLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsU0FBS0MsR0FBTCxHQUFXQSxHQUFYO0FBQ0EsU0FBS0UsT0FBTCxHQUFlLEVBQWY7QUFDQSxTQUFLRCxJQUFMLEdBQVlBLElBQVo7QUFDQUYsSUFBQUEsUUFBUSxDQUFDSSxjQUFULENBQXdCLElBQXhCO0FBQ0g7O0FBRURDLEVBQUFBLFVBQVUsQ0FBQ0MsT0FBRCxFQUFVQyxPQUFPLEdBQUMsSUFBbEIsRUFBd0I7QUFDOUIsU0FBS1AsUUFBTCxDQUFjTSxPQUFkLEdBQXdCQSxPQUF4Qjs7QUFDQSxRQUFHQyxPQUFILEVBQVk7QUFDUixXQUFLUCxRQUFMLENBQWNPLE9BQWQsR0FBd0JBLE9BQXhCO0FBQ0g7O0FBQ0QsU0FBS0osT0FBTCxHQUFlLEtBQUtILFFBQUwsQ0FBY1EsZUFBZCxDQUE4QixLQUFLTixJQUFuQyxDQUFmOztBQUNBLFFBQUcsS0FBS0QsR0FBTCxJQUFZLEtBQUtFLE9BQXBCLEVBQTZCO0FBQ3pCLFdBQUtNLFFBQUwsR0FBZ0IsS0FBS1QsUUFBTCxDQUFjVSxXQUFkLENBQTBCLEtBQUtULEdBQS9CLEVBQW9DLEtBQUtFLE9BQXpDLENBQWhCO0FBQ0g7QUFDSjs7QUFFRFEsRUFBQUEsU0FBUyxHQUFHLENBRVg7O0FBRURDLEVBQUFBLEtBQUssR0FBRyxDQUVQOztBQTFCMkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2x5ZGlhL0Rlc2t0b3Avd29ya1NwYWNlL2RleC9kZW1heC1icmlkZ2Utc2RrL3NyYy9zZGsvbW9kZWwvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZUJ5TmFtZSB7XG4gICAgY29uc3RydWN0b3IocHJvdmlkZXIsIGFiaSwgbmFtZSkge1xuICAgICAgICB0aGlzLnByb3ZpZGVyID0gcHJvdmlkZXI7XG4gICAgICAgIHRoaXMuYWJpID0gYWJpO1xuICAgICAgICB0aGlzLmFkZHJlc3MgPSAnJztcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgcHJvdmlkZXIucmVnaXN0ZXJNb2R1bGUodGhpcyk7XG4gICAgfVxuXG4gICAgaW5pdGlhbGl6ZShjaGFpbklkLCBhY2NvdW50PW51bGwpIHtcbiAgICAgICAgdGhpcy5wcm92aWRlci5jaGFpbklkID0gY2hhaW5JZDtcbiAgICAgICAgaWYoYWNjb3VudCkge1xuICAgICAgICAgICAgdGhpcy5wcm92aWRlci5hY2NvdW50ID0gYWNjb3VudDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFkZHJlc3MgPSB0aGlzLnByb3ZpZGVyLmdldENvbnRyYWN0QWRkcih0aGlzLm5hbWUpO1xuICAgICAgICBpZih0aGlzLmFiaSAmJiB0aGlzLmFkZHJlc3MpIHtcbiAgICAgICAgICAgIHRoaXMuY29udHJhY3QgPSB0aGlzLnByb3ZpZGVyLmdldENvbnRyYWN0KHRoaXMuYWJpLCB0aGlzLmFkZHJlc3MpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaW5pdEFmdGVyKCkge1xuXG4gICAgfVxuXG4gICAgY2xlYW4oKSB7XG4gICAgICAgIFxuICAgIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "BaseByName.js"
      ],
      "names": [
        "BaseByName",
        "constructor",
        "provider",
        "abi",
        "name",
        "address",
        "registerModule",
        "initialize",
        "chainId",
        "account",
        "getContractAddr",
        "contract",
        "getContract",
        "initAfter",
        "clean"
      ],
      "mappings": ";;;;;;;AAAe,MAAMA,UAAN,CAAiB;AAC5BC,EAAAA,WAAW,CAACC,QAAD,EAAWC,GAAX,EAAgBC,IAAhB,EAAsB;AAC7B,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKE,OAAL,GAAe,EAAf;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACAF,IAAAA,QAAQ,CAACI,cAAT,CAAwB,IAAxB;AACH;;AAEDC,EAAAA,UAAU,CAACC,OAAD,EAAUC,OAAO,GAAC,IAAlB,EAAwB;AAC9B,SAAKP,QAAL,CAAcM,OAAd,GAAwBA,OAAxB;;AACA,QAAGC,OAAH,EAAY;AACR,WAAKP,QAAL,CAAcO,OAAd,GAAwBA,OAAxB;AACH;;AACD,SAAKJ,OAAL,GAAe,KAAKH,QAAL,CAAcQ,eAAd,CAA8B,KAAKN,IAAnC,CAAf;;AACA,QAAG,KAAKD,GAAL,IAAY,KAAKE,OAApB,EAA6B;AACzB,WAAKM,QAAL,GAAgB,KAAKT,QAAL,CAAcU,WAAd,CAA0B,KAAKT,GAA/B,EAAoC,KAAKE,OAAzC,CAAhB;AACH;AACJ;;AAEDQ,EAAAA,SAAS,GAAG,CAEX;;AAEDC,EAAAA,KAAK,GAAG,CAEP;;AA1B2B",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "sourcesContent": [
        "export default class BaseByName {\n    constructor(provider, abi, name) {\n        this.provider = provider;\n        this.abi = abi;\n        this.address = '';\n        this.name = name;\n        provider.registerModule(this);\n    }\n\n    initialize(chainId, account=null) {\n        this.provider.chainId = chainId;\n        if(account) {\n            this.provider.account = account;\n        }\n        this.address = this.provider.getContractAddr(this.name);\n        if(this.abi && this.address) {\n            this.contract = this.provider.getContract(this.abi, this.address);\n        }\n    }\n\n    initAfter() {\n\n    }\n\n    clean() {\n        \n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1623929811234
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchTreasury.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchTreasury.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchTreasury.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchTreasury.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
        "sourceFileName": "SwitchTreasury.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newSwitchTreasury = newSwitchTreasury;\nexports.SwitchTreasury = void 0;\n\nvar _SwitchTreasury = _interopRequireDefault(require(\"../abi/SwitchTreasury.json\"));\n\nvar _bignumber = _interopRequireDefault(require(\"bignumber.js\"));\n\nvar _BaseByName = _interopRequireDefault(require(\"./BaseByName\"));\n\nvar _Web3Provider = _interopRequireDefault(require(\"../Web3Provider.js\"));\n\nvar _ERC20Token = require(\"./ERC20Token.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass SwitchTreasury extends _BaseByName.default {\n  constructor(provider) {\n    super(provider, _SwitchTreasury.default, 'SwitchTreasury');\n  }\n\n  async getTokenInfo(token) {\n    let tokenIns = new _ERC20Token.ERC20Token(this.provider, token);\n    return await tokenIns.info();\n  }\n\n  async tokenBalanceOf(token) {\n    let tokenIns = new _ERC20Token.ERC20Token(this.provider, token);\n    return await tokenIns.balanceOf(this.address);\n  }\n\n  async queryWithdraw(_user, _token) {\n    return await this.contract.methods.queryWithdraw(_user, _token).call();\n  }\n\n}\n\nexports.SwitchTreasury = SwitchTreasury;\nvar _SwitchTreasuryInstanes = {};\n\nfunction newSwitchTreasury(chainId) {\n  if (!_SwitchTreasuryInstanes.hasOwnProperty(chainId)) {\n    let provider = (0, _Web3Provider.default)(chainId);\n    _SwitchTreasuryInstanes[chainId] = new SwitchTreasury(provider);\n\n    _SwitchTreasuryInstanes[chainId].initialize(chainId);\n  }\n\n  return _SwitchTreasuryInstanes[chainId];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN3aXRjaFRyZWFzdXJ5LmpzIl0sIm5hbWVzIjpbIlN3aXRjaFRyZWFzdXJ5IiwiQmFzZUJ5TmFtZSIsImNvbnN0cnVjdG9yIiwicHJvdmlkZXIiLCJTd2l0Y2hUcmVhc3VyeUFCSSIsImdldFRva2VuSW5mbyIsInRva2VuIiwidG9rZW5JbnMiLCJFUkMyMFRva2VuIiwiaW5mbyIsInRva2VuQmFsYW5jZU9mIiwiYmFsYW5jZU9mIiwiYWRkcmVzcyIsInF1ZXJ5V2l0aGRyYXciLCJfdXNlciIsIl90b2tlbiIsImNvbnRyYWN0IiwibWV0aG9kcyIsImNhbGwiLCJfU3dpdGNoVHJlYXN1cnlJbnN0YW5lcyIsIm5ld1N3aXRjaFRyZWFzdXJ5IiwiY2hhaW5JZCIsImhhc093blByb3BlcnR5IiwiaW5pdGlhbGl6ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLGNBQU4sU0FBNkJDLG1CQUE3QixDQUF3QztBQUNwQ0MsRUFBQUEsV0FBVyxDQUFDQyxRQUFELEVBQVc7QUFDbEIsVUFBTUEsUUFBTixFQUFnQkMsdUJBQWhCLEVBQW1DLGdCQUFuQztBQUNIOztBQUVpQixRQUFaQyxZQUFZLENBQUNDLEtBQUQsRUFBUTtBQUN0QixRQUFJQyxRQUFRLEdBQUcsSUFBSUMsc0JBQUosQ0FBZSxLQUFLTCxRQUFwQixFQUE4QkcsS0FBOUIsQ0FBZjtBQUNBLFdBQU8sTUFBTUMsUUFBUSxDQUFDRSxJQUFULEVBQWI7QUFDSDs7QUFFbUIsUUFBZEMsY0FBYyxDQUFDSixLQUFELEVBQVE7QUFDeEIsUUFBSUMsUUFBUSxHQUFHLElBQUlDLHNCQUFKLENBQWUsS0FBS0wsUUFBcEIsRUFBOEJHLEtBQTlCLENBQWY7QUFDQSxXQUFPLE1BQU1DLFFBQVEsQ0FBQ0ksU0FBVCxDQUFtQixLQUFLQyxPQUF4QixDQUFiO0FBQ0g7O0FBRWtCLFFBQWJDLGFBQWEsQ0FBQ0MsS0FBRCxFQUFRQyxNQUFSLEVBQWdCO0FBQy9CLFdBQU8sTUFBTSxLQUFLQyxRQUFMLENBQWNDLE9BQWQsQ0FBc0JKLGFBQXRCLENBQW9DQyxLQUFwQyxFQUEyQ0MsTUFBM0MsRUFBbURHLElBQW5ELEVBQWI7QUFDSDs7QUFqQm1DOzs7QUFvQnhDLElBQUlDLHVCQUF1QixHQUFHLEVBQTlCOztBQUNBLFNBQVNDLGlCQUFULENBQTJCQyxPQUEzQixFQUFvQztBQUNoQyxNQUFHLENBQUNGLHVCQUF1QixDQUFDRyxjQUF4QixDQUF1Q0QsT0FBdkMsQ0FBSixFQUFxRDtBQUNqRCxRQUFJbEIsUUFBUSxHQUFHLDJCQUFha0IsT0FBYixDQUFmO0FBQ0FGLElBQUFBLHVCQUF1QixDQUFDRSxPQUFELENBQXZCLEdBQW1DLElBQUlyQixjQUFKLENBQW1CRyxRQUFuQixDQUFuQzs7QUFDQWdCLElBQUFBLHVCQUF1QixDQUFDRSxPQUFELENBQXZCLENBQWlDRSxVQUFqQyxDQUE0Q0YsT0FBNUM7QUFDSDs7QUFDRCxTQUFPRix1QkFBdUIsQ0FBQ0UsT0FBRCxDQUE5QjtBQUNIIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9seWRpYS9EZXNrdG9wL3dvcmtTcGFjZS9kZXgvZGVtYXgtYnJpZGdlLXNkay9zcmMvc2RrL21vZGVsLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTd2l0Y2hUcmVhc3VyeUFCSSBmcm9tICcuLi9hYmkvU3dpdGNoVHJlYXN1cnkuanNvbic7XG5pbXBvcnQgQmlnTnVtYmVyIGZyb20gXCJiaWdudW1iZXIuanNcIlxuaW1wb3J0IEJhc2VCeU5hbWUgZnJvbSAnLi9CYXNlQnlOYW1lJztcbmltcG9ydCBXZWIzUHJvdmlkZXIgZnJvbSAnLi4vV2ViM1Byb3ZpZGVyLmpzJztcbmltcG9ydCB7IEVSQzIwVG9rZW4gfSBmcm9tICcuL0VSQzIwVG9rZW4uanMnO1xuXG5jbGFzcyBTd2l0Y2hUcmVhc3VyeSBleHRlbmRzIEJhc2VCeU5hbWUge1xuICAgIGNvbnN0cnVjdG9yKHByb3ZpZGVyKSB7XG4gICAgICAgIHN1cGVyKHByb3ZpZGVyLCBTd2l0Y2hUcmVhc3VyeUFCSSwgJ1N3aXRjaFRyZWFzdXJ5Jyk7XG4gICAgfVxuXG4gICAgYXN5bmMgZ2V0VG9rZW5JbmZvKHRva2VuKSB7XG4gICAgICAgIGxldCB0b2tlbklucyA9IG5ldyBFUkMyMFRva2VuKHRoaXMucHJvdmlkZXIsIHRva2VuKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRva2VuSW5zLmluZm8oKTtcbiAgICB9XG5cbiAgICBhc3luYyB0b2tlbkJhbGFuY2VPZih0b2tlbikge1xuICAgICAgICBsZXQgdG9rZW5JbnMgPSBuZXcgRVJDMjBUb2tlbih0aGlzLnByb3ZpZGVyLCB0b2tlbik7XG4gICAgICAgIHJldHVybiBhd2FpdCB0b2tlbklucy5iYWxhbmNlT2YodGhpcy5hZGRyZXNzKTtcbiAgICB9XG5cbiAgICBhc3luYyBxdWVyeVdpdGhkcmF3KF91c2VyLCBfdG9rZW4pIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuY29udHJhY3QubWV0aG9kcy5xdWVyeVdpdGhkcmF3KF91c2VyLCBfdG9rZW4pLmNhbGwoKTtcbiAgICB9XG59XG5cbnZhciBfU3dpdGNoVHJlYXN1cnlJbnN0YW5lcyA9IHt9XG5mdW5jdGlvbiBuZXdTd2l0Y2hUcmVhc3VyeShjaGFpbklkKSB7XG4gICAgaWYoIV9Td2l0Y2hUcmVhc3VyeUluc3RhbmVzLmhhc093blByb3BlcnR5KGNoYWluSWQpKSB7XG4gICAgICAgIGxldCBwcm92aWRlciA9IFdlYjNQcm92aWRlcihjaGFpbklkKTtcbiAgICAgICAgX1N3aXRjaFRyZWFzdXJ5SW5zdGFuZXNbY2hhaW5JZF0gPSBuZXcgU3dpdGNoVHJlYXN1cnkocHJvdmlkZXIpO1xuICAgICAgICBfU3dpdGNoVHJlYXN1cnlJbnN0YW5lc1tjaGFpbklkXS5pbml0aWFsaXplKGNoYWluSWQpO1xuICAgIH1cbiAgICByZXR1cm4gX1N3aXRjaFRyZWFzdXJ5SW5zdGFuZXNbY2hhaW5JZF07XG59XG5cbmV4cG9ydCB7IFN3aXRjaFRyZWFzdXJ5LCBuZXdTd2l0Y2hUcmVhc3VyeSB9XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "SwitchTreasury.js"
      ],
      "names": [
        "SwitchTreasury",
        "BaseByName",
        "constructor",
        "provider",
        "SwitchTreasuryABI",
        "getTokenInfo",
        "token",
        "tokenIns",
        "ERC20Token",
        "info",
        "tokenBalanceOf",
        "balanceOf",
        "address",
        "queryWithdraw",
        "_user",
        "_token",
        "contract",
        "methods",
        "call",
        "_SwitchTreasuryInstanes",
        "newSwitchTreasury",
        "chainId",
        "hasOwnProperty",
        "initialize"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,cAAN,SAA6BC,mBAA7B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,UAAMA,QAAN,EAAgBC,uBAAhB,EAAmC,gBAAnC;AACH;;AAEiB,QAAZC,YAAY,CAACC,KAAD,EAAQ;AACtB,QAAIC,QAAQ,GAAG,IAAIC,sBAAJ,CAAe,KAAKL,QAApB,EAA8BG,KAA9B,CAAf;AACA,WAAO,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACH;;AAEmB,QAAdC,cAAc,CAACJ,KAAD,EAAQ;AACxB,QAAIC,QAAQ,GAAG,IAAIC,sBAAJ,CAAe,KAAKL,QAApB,EAA8BG,KAA9B,CAAf;AACA,WAAO,MAAMC,QAAQ,CAACI,SAAT,CAAmB,KAAKC,OAAxB,CAAb;AACH;;AAEkB,QAAbC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC/B,WAAO,MAAM,KAAKC,QAAL,CAAcC,OAAd,CAAsBJ,aAAtB,CAAoCC,KAApC,EAA2CC,MAA3C,EAAmDG,IAAnD,EAAb;AACH;;AAjBmC;;;AAoBxC,IAAIC,uBAAuB,GAAG,EAA9B;;AACA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;AAChC,MAAG,CAACF,uBAAuB,CAACG,cAAxB,CAAuCD,OAAvC,CAAJ,EAAqD;AACjD,QAAIlB,QAAQ,GAAG,2BAAakB,OAAb,CAAf;AACAF,IAAAA,uBAAuB,CAACE,OAAD,CAAvB,GAAmC,IAAIrB,cAAJ,CAAmBG,QAAnB,CAAnC;;AACAgB,IAAAA,uBAAuB,CAACE,OAAD,CAAvB,CAAiCE,UAAjC,CAA4CF,OAA5C;AACH;;AACD,SAAOF,uBAAuB,CAACE,OAAD,CAA9B;AACH",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "sourcesContent": [
        "import SwitchTreasuryABI from '../abi/SwitchTreasury.json';\nimport BigNumber from \"bignumber.js\"\nimport BaseByName from './BaseByName';\nimport Web3Provider from '../Web3Provider.js';\nimport { ERC20Token } from './ERC20Token.js';\n\nclass SwitchTreasury extends BaseByName {\n    constructor(provider) {\n        super(provider, SwitchTreasuryABI, 'SwitchTreasury');\n    }\n\n    async getTokenInfo(token) {\n        let tokenIns = new ERC20Token(this.provider, token);\n        return await tokenIns.info();\n    }\n\n    async tokenBalanceOf(token) {\n        let tokenIns = new ERC20Token(this.provider, token);\n        return await tokenIns.balanceOf(this.address);\n    }\n\n    async queryWithdraw(_user, _token) {\n        return await this.contract.methods.queryWithdraw(_user, _token).call();\n    }\n}\n\nvar _SwitchTreasuryInstanes = {}\nfunction newSwitchTreasury(chainId) {\n    if(!_SwitchTreasuryInstanes.hasOwnProperty(chainId)) {\n        let provider = Web3Provider(chainId);\n        _SwitchTreasuryInstanes[chainId] = new SwitchTreasury(provider);\n        _SwitchTreasuryInstanes[chainId].initialize(chainId);\n    }\n    return _SwitchTreasuryInstanes[chainId];\n}\n\nexport { SwitchTreasury, newSwitchTreasury }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1624261816874
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/SwitchConfig.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/SwitchConfig.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/SwitchConfig.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/SwitchConfig.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/",
        "sourceFileName": "SwitchConfig.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SwitchFarms = exports.SwitchChainIds = exports.SwitchPools = void 0;\nvar SwitchPools = {\n  main: {\n    USDT: {\n      opened: false,\n      isTicket: false,\n      list: [{\n        name: \"USDT\",\n        tokenAddress: \"\",\n        chainId: 1\n      }, {\n        name: \"USDT\",\n        tokenAddress: \"\",\n        chainId: 56\n      }, {\n        name: \"USDT\",\n        tokenAddress: \"\",\n        chainId: 189\n      }, {\n        name: \"USDT\",\n        tokenAddress: \"\",\n        chainId: 137\n      }, {\n        name: \"USDT\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 137\n      }, {\n        name: \"USDT\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 123456\n      }, {\n        name: \"USDT\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 100\n      }, {\n        name: \"USDT\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 250\n      }]\n    },\n    USDC: {\n      opened: false,\n      isTicket: false,\n      list: [{\n        name: \"USDC\",\n        tokenAddress: \"\",\n        chainId: 1\n      }, {\n        name: \"USDC\",\n        tokenAddress: \"\",\n        chainId: 56\n      }, {\n        name: \"USDC\",\n        tokenAddress: \"\",\n        chainId: 189\n      }, {\n        name: \"USDC\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 137\n      }, {\n        name: \"USDC\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 123456789\n      }, {\n        name: \"USDC\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 100\n      }, {\n        name: \"USDC\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 250\n      }]\n    },\n    DAI: {\n      opened: false,\n      isTicket: false,\n      list: [{\n        name: \"DAI\",\n        tokenAddress: \"\",\n        chainId: 1\n      }, {\n        name: \"DAI\",\n        tokenAddress: \"\",\n        chainId: 56\n      }, {\n        name: \"DAI\",\n        tokenAddress: \"\",\n        chainId: 189\n      }, {\n        name: \"DAI\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 137\n      }, {\n        name: \"DAI\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 123456789\n      }, {\n        name: \"DAI\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 100\n      }, {\n        name: \"DAI\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 250\n      }]\n    }\n  },\n  test: {\n    USDT: {\n      opened: true,\n      isTicket: false,\n      list: [{\n        name: \"USDT\",\n        tokenAddress: \"0xF02D16a87F97428A258A48476b52Cfc105E371C1\",\n        chainId: 42\n      }, {\n        name: \"USDT\",\n        tokenAddress: \"0xF2ED382e6A3439Be124813842200cf6702fD6ecA\",\n        chainId: 97\n      }, {\n        name: \"USDT\",\n        tokenAddress: \"0xadCf42A9318D10F0D70333812F4A3Ab0622e0ef3\",\n        chainId: 256\n      }, {\n        name: \"USDT\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 80001\n      }, {\n        name: \"USDT\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 1234567\n      }, {\n        name: \"USDT\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 12345678\n      }, {\n        name: \"USDT\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 123456789\n      }]\n    },\n    USDC: {\n      opened: true,\n      isTicket: false,\n      list: [{\n        name: \"USDC\",\n        tokenAddress: \"0x42aC2e5bD42a5Eceb72d06C9c1A5A45433c17911\",\n        chainId: 42\n      }, {\n        name: \"USDC\",\n        tokenAddress: \"0x716AE8720739F0434B8D469cd3EC392A0fE16599\",\n        chainId: 97\n      }, {\n        name: \"USDC\",\n        tokenAddress: \"0xA0993880177D3c7BB57546b0b349F93143877d19\",\n        chainId: 256\n      }, {\n        name: \"USDC\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 80001\n      }, {\n        name: \"USDC\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 1234567\n      }, {\n        name: \"USDC\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 12345678\n      }, {\n        name: \"USDC\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 123456789\n      }]\n    },\n    DAI: {\n      opened: true,\n      isTicket: false,\n      list: [{\n        name: \"DAI\",\n        tokenAddress: \"0x38B9eC6994F288155345cF5aC9245182eF12F04f\",\n        chainId: 42\n      }, {\n        name: \"DAI\",\n        tokenAddress: \"0xCB6260C77629c25A065081442EF4E2Bec297aa09\",\n        chainId: 97\n      }, {\n        name: \"DAI\",\n        tokenAddress: \"0xD512A14824D40c82582522BFE936d35354658BC5\",\n        chainId: 256\n      }, {\n        name: \"DAI\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 80001\n      }, {\n        name: \"DAI\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 1234567\n      }, {\n        name: \"DAI\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 12345678\n      }, {\n        name: \"DAI\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 123456789\n      }]\n    },\n    BTC: {\n      opened: true,\n      isTicket: false,\n      list: [{\n        name: \"BTC\",\n        tokenSymbol: \"WBTC\",\n        tokenAddress: \"0x08717B6Ac9D0Ff71BF51cDdEBFCe4b2Fd52e448a\",\n        chainId: 42\n      }, {\n        name: \"BTC\",\n        tokenSymbol: \"BTCB\",\n        tokenAddress: \"0x737AD9985898a6aBCD87CC1F861D0769AD6EEf33\",\n        chainId: 97\n      }, {\n        name: \"BTC\",\n        tokenSymbol: \"HBTC\",\n        tokenAddress: \"\",\n        chainId: 256\n      }, {\n        name: \"BTC\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 80001\n      }, {\n        name: \"BTC\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 1234567\n      }, {\n        name: \"BTC\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 12345678\n      }, {\n        name: \"BTC\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 123456789\n      }]\n    },\n    swUSDT: {\n      opened: true,\n      isTicket: true,\n      list: [{\n        name: \"swUSDT\",\n        tokenAddress: \"0x98B62924475c13cF60017ea5ccf029b15CfBdAb3\",\n        chainId: 42\n      }, {\n        name: \"swUSDT\",\n        tokenAddress: \"0x0EaBCf2EBbb06B0fa88564822BD9171E5ec13eb6\",\n        chainId: 97\n      }, {\n        name: \"swUSDT\",\n        tokenAddress: \"0x09191DC2677cCB7937AA89241Ff2f6BBe93D5C1c\",\n        chainId: 256\n      }, {\n        name: \"swUSDT\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 80001\n      }, {\n        name: \"swUSDT\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 1234567\n      }, {\n        name: \"swUSDT\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 12345678\n      }, {\n        name: \"swUSDT\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 123456789\n      }]\n    },\n    swUSDC: {\n      opened: true,\n      isTicket: true,\n      list: [{\n        name: \"swUSDC\",\n        tokenAddress: \"0xC6fD96088F04483E310b83550e8eabb11feF1326\",\n        chainId: 42\n      }, {\n        name: \"swUSDC\",\n        tokenAddress: \"0x393ad6d183AABA07dBbdf0c870c38EcceeEEf35f\",\n        chainId: 97\n      }, {\n        name: \"swUSDC\",\n        tokenAddress: \"0xc5E6e58e3B5816C985B19415B9b4D20F2e9Ae634\",\n        chainId: 256\n      }, {\n        name: \"swUSDC\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 80001\n      }, {\n        name: \"swUSDC\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 1234567\n      }, {\n        name: \"swUSDC\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 12345678\n      }, {\n        name: \"swUSDC\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 123456789\n      }]\n    },\n    swDAI: {\n      opened: true,\n      isTicket: true,\n      list: [{\n        name: \"swDAI\",\n        tokenAddress: \"0xa54d64A13bCB8bF7dd8488070fF34E71538cd487\",\n        chainId: 42\n      }, {\n        name: \"swDAI\",\n        tokenAddress: \"0x483d4A0DCB015c9aB55649939b7fCd612c65F868\",\n        chainId: 97\n      }, {\n        name: \"swDAI\",\n        tokenAddress: \"0x5bdC9F9c0D070A3a647EF0FAAE6BA3b9c920CB46\",\n        chainId: 256\n      }, {\n        name: \"swDAI\",\n        //   polygon\n        tokenAddress: \"\",\n        chainId: 80001\n      }, {\n        name: \"swDAI\",\n        // solana\n        tokenAddress: \"\",\n        chainId: 1234567\n      }, {\n        name: \"swDAI\",\n        // xDai\n        tokenAddress: \"\",\n        chainId: 12345678\n      }, {\n        name: \"swDAI\",\n        //  fantom\n        tokenAddress: \"\",\n        chainId: 123456789\n      }]\n    }\n  }\n};\nexports.SwitchPools = SwitchPools;\nconst SwitchChainIds = {\n  main: [1, 56, 128],\n  test: [42, 97, 256]\n};\nexports.SwitchChainIds = SwitchChainIds;\nvar SwitchFarms = {\n  main: [],\n  test: [{\n    name: \"swUSDT\",\n    pid: 1,\n    chainId: 42\n  }, {\n    name: \"swUSDC\",\n    pid: 0,\n    chainId: 42\n  }, {\n    name: \"swDAI\",\n    pid: 2,\n    chainId: 42\n  }, {\n    name: \"swUSDT\",\n    pid: 0,\n    chainId: 97\n  }, {\n    name: \"swUSDC\",\n    pid: 1,\n    chainId: 97\n  }, {\n    name: \"swDAI\",\n    pid: 2,\n    chainId: 97\n  }, {\n    name: \"swUSDT\",\n    pid: 0,\n    chainId: 256\n  }, {\n    name: \"swUSDC\",\n    pid: 2,\n    chainId: 256\n  }, {\n    name: \"swDAI\",\n    pid: 1,\n    chainId: 256\n  }]\n};\nexports.SwitchFarms = SwitchFarms;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN3aXRjaENvbmZpZy5qcyJdLCJuYW1lcyI6WyJTd2l0Y2hQb29scyIsIm1haW4iLCJVU0RUIiwib3BlbmVkIiwiaXNUaWNrZXQiLCJsaXN0IiwibmFtZSIsInRva2VuQWRkcmVzcyIsImNoYWluSWQiLCJVU0RDIiwiREFJIiwidGVzdCIsIkJUQyIsInRva2VuU3ltYm9sIiwic3dVU0RUIiwic3dVU0RDIiwic3dEQUkiLCJTd2l0Y2hDaGFpbklkcyIsIlN3aXRjaEZhcm1zIiwicGlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFJQSxXQUFXLEdBQUc7QUFDZEMsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLElBQUFBLElBQUksRUFBRTtBQUNGQyxNQUFBQSxNQUFNLEVBQUUsS0FETjtBQUVGQyxNQUFBQSxRQUFRLEVBQUUsS0FGUjtBQUdGQyxNQUFBQSxJQUFJLEVBQUUsQ0FDRjtBQUNJQyxRQUFBQSxJQUFJLEVBQUUsTUFEVjtBQUVJQyxRQUFBQSxZQUFZLEVBQUUsRUFGbEI7QUFHSUMsUUFBQUEsT0FBTyxFQUFFO0FBSGIsT0FERSxFQU1GO0FBQ0lGLFFBQUFBLElBQUksRUFBRSxNQURWO0FBRUlDLFFBQUFBLFlBQVksRUFBRSxFQUZsQjtBQUdJQyxRQUFBQSxPQUFPLEVBQUU7QUFIYixPQU5FLEVBV0Y7QUFDSUYsUUFBQUEsSUFBSSxFQUFFLE1BRFY7QUFFSUMsUUFBQUEsWUFBWSxFQUFFLEVBRmxCO0FBR0lDLFFBQUFBLE9BQU8sRUFBRTtBQUhiLE9BWEUsRUFnQkY7QUFDSUYsUUFBQUEsSUFBSSxFQUFFLE1BRFY7QUFFSUMsUUFBQUEsWUFBWSxFQUFFLEVBRmxCO0FBR0lDLFFBQUFBLE9BQU8sRUFBRTtBQUhiLE9BaEJFLEVBcUJGO0FBQ0lGLFFBQUFBLElBQUksRUFBRSxNQURWO0FBQ2tCO0FBQ2RDLFFBQUFBLFlBQVksRUFBRSxFQUZsQjtBQUdJQyxRQUFBQSxPQUFPLEVBQUU7QUFIYixPQXJCRSxFQTJCRjtBQUNJRixRQUFBQSxJQUFJLEVBQUUs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O0FBQ0lGLElBQUFBLElBQUksRUFBRSxRQURWO0FBRUlhLElBQUFBLEdBQUcsRUFBRSxDQUZUO0FBR0lYLElBQUFBLE9BQU8sRUFBQztBQUhaLEdBckJFLEVBMEJGO0FBQ0lGLElBQUFBLElBQUksRUFBRSxPQURWO0FBRUlhLElBQUFBLEdBQUcsRUFBRSxDQUZUO0FBR0lYLElBQUFBLE9BQU8sRUFBQztBQUhaLEdBMUJFLEVBK0JGO0FBQ0lGLElBQUFBLElBQUksRUFBRSxRQURWO0FBRUlhLElBQUFBLEdBQUcsRUFBRSxDQUZUO0FBR0lYLElBQUFBLE9BQU8sRUFBQztBQUhaLEdBL0JFLEVBb0NGO0FBQ0lGLElBQUFBLElBQUksRUFBRSxRQURWO0FBRUlhLElBQUFBLEdBQUcsRUFBRSxDQUZUO0FBR0lYLElBQUFBLE9BQU8sRUFBQztBQUhaLEdBcENFLEVBeUNGO0FBQ0lGLElBQUFBLElBQUksRUFBRSxPQURWO0FBRUlhLElBQUFBLEdBQUcsRUFBRSxDQUZUO0FBR0lYLElBQUFBLE9BQU8sRUFBQztBQUhaLEdBekNFO0FBRlEsQ0FBbEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2x5ZGlhL0Rlc2t0b3Avd29ya1NwYWNlL2RleC9kZW1heC1icmlkZ2Utc2RrL3NyYy9zZGsvY29uZmlnLyIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIFN3aXRjaFBvb2xzID0ge1xuICAgIG1haW46IHtcbiAgICAgICAgVVNEVDoge1xuICAgICAgICAgICAgb3BlbmVkOiBmYWxzZSxcbiAgICAgICAgICAgIGlzVGlja2V0OiBmYWxzZSxcbiAgICAgICAgICAgIGxpc3Q6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVVNEVFwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RUXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogNTZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RUXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTg5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVVNEVFwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEzN1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRFRcIiwgLy8gICBwb2x5Z29uXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTM3XG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RUXCIsIC8vIHNvbGFuYVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEyMzQ1NlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRFRcIiwgLy8geERhaVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEwMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRFRcIiwgICAvLyAgZmFudG9tXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMjUwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBVU0RDOiB7XG4gICAgICAgICAgICBvcGVuZWQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNUaWNrZXQ6IGZhbHNlLFxuICAgICAgICAgICAgbGlzdDogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RDXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRENcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiA1NlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRENcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxODlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RDXCIsIC8vICAgcG9seWdvblxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEzN1xuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVVNEQ1wiLCAvLyBzb2xhbmFcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMjM0NTY3ODlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RDXCIsIC8vIHhEYWlcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RDXCIsICAgLy8gIGZhbnRvbVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDI1MFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgREFJOiB7XG4gICAgICAgICAgICBvcGVuZWQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNUaWNrZXQ6IGZhbHNlLFxuICAgICAgICAgICAgbGlzdDogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiREFJXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogNTZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxODlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIiwgLy8gICBwb2x5Z29uXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTM3XG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIiwgLy8gc29sYW5hXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2Nzg5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiREFJXCIsIC8vIHhEYWlcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIiwgICAvLyAgZmFudG9tXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMjUwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9XG4gICAgfSxcbiAgICB0ZXN0OiB7XG4gICAgICAgIFVTRFQ6IHtcbiAgICAgICAgICAgIG9wZW5lZDogdHJ1ZSxcbiAgICAgICAgICAgIGlzVGlja2V0OiBmYWxzZSxcbiAgICAgICAgICAgIGxpc3Q6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVVNEVFwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiMHhGMDJEMTZhODdGOTc0MjhBMjU4QTQ4NDc2YjUyQ2ZjMTA1RTM3MUMxXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDQyXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVVNEVFwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiMHhGMkVEMzgyZTZBMzQzOUJlMTI0ODEzODQyMjAwY2Y2NzAyZkQ2ZWNBXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDk3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVVNEVFwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiMHhhZENmNDJBOTMxOEQxMEYwRDcwMzMzODEyRjRBM0FiMDYyMmUwZWYzXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDI1NlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRFRcIiwgLy8gICBwb2x5Z29uXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogODAwMDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RUXCIsIC8vIHNvbGFuYVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEyMzQ1NjdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RUXCIsIC8vIHhEYWlcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMjM0NTY3OFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRFRcIiwgICAvLyAgZmFudG9tXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2Nzg5XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBVU0RDOiB7XG4gICAgICAgICAgICBvcGVuZWQ6IHRydWUsXG4gICAgICAgICAgICBpc1RpY2tldDogZmFsc2UsXG4gICAgICAgICAgICBsaXN0OiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRENcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4NDJhQzJlNWJENDJhNUVjZWI3MmQwNkM5YzFBNUE0NTQzM2MxNzkxMVwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiA0MlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRENcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4NzE2QUU4NzIwNzM5RjA0MzRCOEQ0NjljZDNFQzM5MkEwZkUxNjU5OVwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiA5N1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlVTRENcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4QTA5OTM4ODAxNzdEM2M3QkI1NzU0NmIwYjM0OUY5MzE0Mzg3N2QxOVwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAyNTZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RDXCIsIC8vICAgcG9seWdvblxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDgwMDAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVVNEQ1wiLCAvLyBzb2xhbmFcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMjM0NTY3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVVNEQ1wiLCAvLyB4RGFpXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2NzhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJVU0RDXCIsICAgLy8gIGZhbnRvbVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEyMzQ1Njc4OVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgREFJOiB7XG4gICAgICAgICAgICBvcGVuZWQ6IHRydWUsXG4gICAgICAgICAgICBpc1RpY2tldDogZmFsc2UsXG4gICAgICAgICAgICBsaXN0OiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkRBSVwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiMHgzOEI5ZUM2OTk0RjI4ODE1NTM0NWNGNWFDOTI0NTE4MmVGMTJGMDRmXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDQyXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiREFJXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCIweENCNjI2MEM3NzYyOWMyNUEwNjUwODE0NDJFRjRFMkJlYzI5N2FhMDlcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogOTdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4RDUxMkExNDgyNEQ0MGM4MjU4MjUyMkJGRTkzNmQzNTM1NDY1OEJDNVwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAyNTZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIiwgLy8gICBwb2x5Z29uXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogODAwMDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIiwgLy8gc29sYW5hXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2N1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkRBSVwiLCAvLyB4RGFpXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2NzhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEQUlcIiwgICAvLyAgZmFudG9tXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2Nzg5XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBCVEM6IHtcbiAgICAgICAgICAgIG9wZW5lZDogdHJ1ZSxcbiAgICAgICAgICAgIGlzVGlja2V0OiBmYWxzZSxcbiAgICAgICAgICAgIGxpc3Q6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQlRDXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuU3ltYm9sOiBcIldCVENcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4MDg3MTdCNkFjOUQwRmY3MUJGNTFjRGRFQkZDZTRiMkZkNTJlNDQ4YVwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiA0MlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkJUQ1wiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlblN5bWJvbDogXCJCVENCXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCIweDczN0FEOTk4NTg5OGE2YUJDRDg3Q0MxRjg2MUQwNzY5QUQ2RUVmMzNcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogOTdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJCVENcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5TeW1ib2w6IFwiSEJUQ1wiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDI1NlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkJUQ1wiLCAvLyAgIHBvbHlnb25cbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiA4MDAwMVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkJUQ1wiLCAvLyBzb2xhbmFcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMjM0NTY3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQlRDXCIsIC8vIHhEYWlcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMjM0NTY3OFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkJUQ1wiLCAgIC8vICBmYW50b21cbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMjM0NTY3ODlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHN3VVNEVDoge1xuICAgICAgICAgICAgb3BlbmVkOiB0cnVlLFxuICAgICAgICAgICAgaXNUaWNrZXQ6IHRydWUsXG4gICAgICAgICAgICBsaXN0OiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInN3VVNEVFwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiMHg5OEI2MjkyNDQ3NWMxM2NGNjAwMTdlYTVjY2YwMjliMTVDZkJkQWIzXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDQyXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dVU0RUXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCIweDBFYUJDZjJFQmJiMDZCMGZhODg1NjQ4MjJCRDkxNzFFNWVjMTNlYjZcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogOTdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzd1VTRFRcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4MDkxOTFEQzI2NzdjQ0I3OTM3QUE4OTI0MUZmMmY2QkJlOTNENUMxY1wiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAyNTZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzd1VTRFRcIiwgLy8gICBwb2x5Z29uXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogODAwMDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzd1VTRFRcIiwgLy8gc29sYW5hXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2N1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInN3VVNEVFwiLCAvLyB4RGFpXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2NzhcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzd1VTRFRcIiwgICAvLyAgZmFudG9tXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2Nzg5XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBzd1VTREM6IHtcbiAgICAgICAgICAgIG9wZW5lZDogdHJ1ZSxcbiAgICAgICAgICAgIGlzVGlja2V0OiB0cnVlLFxuICAgICAgICAgICAgbGlzdDogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzd1VTRENcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4QzZmRDk2MDg4RjA0NDgzRTMxMGI4MzU1MGU4ZWFiYjExZmVGMTMyNlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiA0MlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInN3VVNEQ1wiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiMHgzOTNhZDZkMTgzQUFCQTA3ZEJiZGYwYzg3MGMzOEVjY2VlRUVmMzVmXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDk3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dVU0RDXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCIweGM1RTZlNThlM0I1ODE2Qzk4NUIxOTQxNUI5YjREMjBGMmU5QWU2MzRcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMjU2XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dVU0RDXCIsIC8vICAgcG9seWdvblxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDgwMDAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dVU0RDXCIsIC8vIHNvbGFuYVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEyMzQ1NjdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzd1VTRENcIiwgLy8geERhaVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEyMzQ1Njc4XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dVU0RDXCIsICAgLy8gIGZhbnRvbVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEyMzQ1Njc4OVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgc3dEQUk6IHtcbiAgICAgICAgICAgIG9wZW5lZDogdHJ1ZSxcbiAgICAgICAgICAgIGlzVGlja2V0OiB0cnVlLFxuICAgICAgICAgICAgbGlzdDogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzd0RBSVwiLFxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiMHhhNTRkNjRBMTNiQ0I4YkY3ZGQ4NDg4MDcwZkYzNEU3MTUzOGNkNDg3XCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDQyXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dEQUlcIixcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4NDgzZDRBMERDQjAxNWM5YUI1NTY0OTkzOWI3ZkNkNjEyYzY1Rjg2OFwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiA5N1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInN3REFJXCIsXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCIweDViZEM5RjljMEQwNzBBM2E2NDdFRjBGQUFFNkJBM2I5YzkyMENCNDZcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMjU2XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dEQUlcIiwgLy8gICBwb2x5Z29uXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogODAwMDFcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzd0RBSVwiLCAvLyBzb2xhbmFcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiAxMjM0NTY3XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dEQUlcIiwgLy8geERhaVxuICAgICAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3M6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IDEyMzQ1Njc4XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic3dEQUlcIiwgICAvLyAgZmFudG9tXG4gICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzczogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZDogMTIzNDU2Nzg5XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgIH0sXG59XG5cbmNvbnN0IFN3aXRjaENoYWluSWRzID0ge1xuICAgIG1haW46IFsxLDU2LDEyOF0sXG4gICAgdGVzdDogWzQyLDk3LDI1Nl0sXG59XG5cbnZhciBTd2l0Y2hGYXJtcyA9IHtcbiAgICBtYWluOiBbXSxcbiAgICB0ZXN0OiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IFwic3dVU0RUXCIsXG4gICAgICAgICAgICBwaWQ6IDEsXG4gICAgICAgICAgICBjaGFpbklkOjQyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IFwic3dVU0RDXCIsXG4gICAgICAgICAgICBwaWQ6IDAsXG4gICAgICAgICAgICBjaGFpbklkOjQyXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IFwic3dEQUlcIixcbiAgICAgICAgICAgIHBpZDogMixcbiAgICAgICAgICAgIGNoYWluSWQ6NDJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJzd1VTRFRcIixcbiAgICAgICAgICAgIHBpZDogMCxcbiAgICAgICAgICAgIGNoYWluSWQ6OTdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJzd1VTRENcIixcbiAgICAgICAgICAgIHBpZDogMSxcbiAgICAgICAgICAgIGNoYWluSWQ6OTdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJzd0RBSVwiLFxuICAgICAgICAgICAgcGlkOiAyLFxuICAgICAgICAgICAgY2hhaW5JZDo5N1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBcInN3VVNEVFwiLFxuICAgICAgICAgICAgcGlkOiAwLFxuICAgICAgICAgICAgY2hhaW5JZDoyNTZcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJzd1VTRENcIixcbiAgICAgICAgICAgIHBpZDogMixcbiAgICAgICAgICAgIGNoYWluSWQ6MjU2XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IFwic3dEQUlcIixcbiAgICAgICAgICAgIHBpZDogMSxcbiAgICAgICAgICAgIGNoYWluSWQ6MjU2XG4gICAgICAgIH0sXG4gICAgXVxufVxuXG5leHBvcnQgeyBTd2l0Y2hQb29scywgU3dpdGNoQ2hhaW5JZHMsIFN3aXRjaEZhcm1zIH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "SwitchConfig.js"
      ],
      "names": [
        "SwitchPools",
        "main",
        "USDT",
        "opened",
        "isTicket",
        "list",
        "name",
        "tokenAddress",
        "chainId",
        "USDC",
        "DAI",
        "test",
        "BTC",
        "tokenSymbol",
        "swUSDT",
        "swUSDC",
        "swDAI",
        "SwitchChainIds",
        "SwitchFarms",
        "pid"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/config/",
      "sourcesContent": [
        "\nvar SwitchPools = {\n    main: {\n        USDT: {\n            opened: false,\n            isTicket: false,\n            list: [\n                {\n                    name: \"USDT\",\n                    tokenAddress: \"\",\n                    chainId: 1\n                },\n                {\n                    name: \"USDT\",\n                    tokenAddress: \"\",\n                    chainId: 56\n                },\n                {\n                    name: \"USDT\",\n                    tokenAddress: \"\",\n                    chainId: 189\n                },\n                {\n                    name: \"USDT\",\n                    tokenAddress: \"\",\n                    chainId: 137\n                },\n                {\n                    name: \"USDT\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 137\n                },\n\n                {\n                    name: \"USDT\", // solana\n                    tokenAddress: \"\",\n                    chainId: 123456\n                },\n                {\n                    name: \"USDT\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 100\n                },\n                {\n                    name: \"USDT\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 250\n                }\n            ]\n        },\n        USDC: {\n            opened: false,\n            isTicket: false,\n            list: [\n                {\n                    name: \"USDC\",\n                    tokenAddress: \"\",\n                    chainId: 1\n                },\n                {\n                    name: \"USDC\",\n                    tokenAddress: \"\",\n                    chainId: 56\n                },\n                {\n                    name: \"USDC\",\n                    tokenAddress: \"\",\n                    chainId: 189\n                },\n                {\n                    name: \"USDC\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 137\n                },\n\n                {\n                    name: \"USDC\", // solana\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                },\n                {\n                    name: \"USDC\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 100\n                },\n                {\n                    name: \"USDC\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 250\n                }\n            ]\n        },\n        DAI: {\n            opened: false,\n            isTicket: false,\n            list: [\n                {\n                    name: \"DAI\",\n                    tokenAddress: \"\",\n                    chainId: 1\n                },\n                {\n                    name: \"DAI\",\n                    tokenAddress: \"\",\n                    chainId: 56\n                },\n                {\n                    name: \"DAI\",\n                    tokenAddress: \"\",\n                    chainId: 189\n                },\n                {\n                    name: \"DAI\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 137\n                },\n\n                {\n                    name: \"DAI\", // solana\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                },\n                {\n                    name: \"DAI\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 100\n                },\n                {\n                    name: \"DAI\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 250\n                }\n            ]\n        }\n    },\n    test: {\n        USDT: {\n            opened: true,\n            isTicket: false,\n            list: [\n                {\n                    name: \"USDT\",\n                    tokenAddress: \"0xF02D16a87F97428A258A48476b52Cfc105E371C1\",\n                    chainId: 42\n                },\n                {\n                    name: \"USDT\",\n                    tokenAddress: \"0xF2ED382e6A3439Be124813842200cf6702fD6ecA\",\n                    chainId: 97\n                },\n                {\n                    name: \"USDT\",\n                    tokenAddress: \"0xadCf42A9318D10F0D70333812F4A3Ab0622e0ef3\",\n                    chainId: 256\n                },\n                {\n                    name: \"USDT\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 80001\n                },\n                {\n                    name: \"USDT\", // solana\n                    tokenAddress: \"\",\n                    chainId: 1234567\n                },\n                {\n                    name: \"USDT\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 12345678\n                },\n                {\n                    name: \"USDT\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                }\n            ]\n        },\n        USDC: {\n            opened: true,\n            isTicket: false,\n            list: [\n                {\n                    name: \"USDC\",\n                    tokenAddress: \"0x42aC2e5bD42a5Eceb72d06C9c1A5A45433c17911\",\n                    chainId: 42\n                },\n                {\n                    name: \"USDC\",\n                    tokenAddress: \"0x716AE8720739F0434B8D469cd3EC392A0fE16599\",\n                    chainId: 97\n                },\n                {\n                    name: \"USDC\",\n                    tokenAddress: \"0xA0993880177D3c7BB57546b0b349F93143877d19\",\n                    chainId: 256\n                },\n                {\n                    name: \"USDC\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 80001\n                },\n                {\n                    name: \"USDC\", // solana\n                    tokenAddress: \"\",\n                    chainId: 1234567\n                },\n                {\n                    name: \"USDC\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 12345678\n                },\n                {\n                    name: \"USDC\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                }\n            ]\n        },\n        DAI: {\n            opened: true,\n            isTicket: false,\n            list: [\n                {\n                    name: \"DAI\",\n                    tokenAddress: \"0x38B9eC6994F288155345cF5aC9245182eF12F04f\",\n                    chainId: 42\n                },\n                {\n                    name: \"DAI\",\n                    tokenAddress: \"0xCB6260C77629c25A065081442EF4E2Bec297aa09\",\n                    chainId: 97\n                },\n                {\n                    name: \"DAI\",\n                    tokenAddress: \"0xD512A14824D40c82582522BFE936d35354658BC5\",\n                    chainId: 256\n                },\n                {\n                    name: \"DAI\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 80001\n                },\n                {\n                    name: \"DAI\", // solana\n                    tokenAddress: \"\",\n                    chainId: 1234567\n                },\n                {\n                    name: \"DAI\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 12345678\n                },\n                {\n                    name: \"DAI\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                }\n            ]\n        },\n        BTC: {\n            opened: true,\n            isTicket: false,\n            list: [\n                {\n                    name: \"BTC\",\n                    tokenSymbol: \"WBTC\",\n                    tokenAddress: \"0x08717B6Ac9D0Ff71BF51cDdEBFCe4b2Fd52e448a\",\n                    chainId: 42\n                },\n                {\n                    name: \"BTC\",\n                    tokenSymbol: \"BTCB\",\n                    tokenAddress: \"0x737AD9985898a6aBCD87CC1F861D0769AD6EEf33\",\n                    chainId: 97\n                },\n                {\n                    name: \"BTC\",\n                    tokenSymbol: \"HBTC\",\n                    tokenAddress: \"\",\n                    chainId: 256\n                },\n                {\n                    name: \"BTC\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 80001\n                },\n                {\n                    name: \"BTC\", // solana\n                    tokenAddress: \"\",\n                    chainId: 1234567\n                },\n                {\n                    name: \"BTC\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 12345678\n                },\n                {\n                    name: \"BTC\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                }\n            ]\n        },\n        swUSDT: {\n            opened: true,\n            isTicket: true,\n            list: [\n                {\n                    name: \"swUSDT\",\n                    tokenAddress: \"0x98B62924475c13cF60017ea5ccf029b15CfBdAb3\",\n                    chainId: 42\n                },\n                {\n                    name: \"swUSDT\",\n                    tokenAddress: \"0x0EaBCf2EBbb06B0fa88564822BD9171E5ec13eb6\",\n                    chainId: 97\n                },\n                {\n                    name: \"swUSDT\",\n                    tokenAddress: \"0x09191DC2677cCB7937AA89241Ff2f6BBe93D5C1c\",\n                    chainId: 256\n                },\n                {\n                    name: \"swUSDT\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 80001\n                },\n                {\n                    name: \"swUSDT\", // solana\n                    tokenAddress: \"\",\n                    chainId: 1234567\n                },\n                {\n                    name: \"swUSDT\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 12345678\n                },\n                {\n                    name: \"swUSDT\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                }\n            ]\n        },\n        swUSDC: {\n            opened: true,\n            isTicket: true,\n            list: [\n                {\n                    name: \"swUSDC\",\n                    tokenAddress: \"0xC6fD96088F04483E310b83550e8eabb11feF1326\",\n                    chainId: 42\n                },\n                {\n                    name: \"swUSDC\",\n                    tokenAddress: \"0x393ad6d183AABA07dBbdf0c870c38EcceeEEf35f\",\n                    chainId: 97\n                },\n                {\n                    name: \"swUSDC\",\n                    tokenAddress: \"0xc5E6e58e3B5816C985B19415B9b4D20F2e9Ae634\",\n                    chainId: 256\n                },\n                {\n                    name: \"swUSDC\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 80001\n                },\n                {\n                    name: \"swUSDC\", // solana\n                    tokenAddress: \"\",\n                    chainId: 1234567\n                },\n                {\n                    name: \"swUSDC\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 12345678\n                },\n                {\n                    name: \"swUSDC\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                }\n            ]\n        },\n        swDAI: {\n            opened: true,\n            isTicket: true,\n            list: [\n                {\n                    name: \"swDAI\",\n                    tokenAddress: \"0xa54d64A13bCB8bF7dd8488070fF34E71538cd487\",\n                    chainId: 42\n                },\n                {\n                    name: \"swDAI\",\n                    tokenAddress: \"0x483d4A0DCB015c9aB55649939b7fCd612c65F868\",\n                    chainId: 97\n                },\n                {\n                    name: \"swDAI\",\n                    tokenAddress: \"0x5bdC9F9c0D070A3a647EF0FAAE6BA3b9c920CB46\",\n                    chainId: 256\n                },\n                {\n                    name: \"swDAI\", //   polygon\n                    tokenAddress: \"\",\n                    chainId: 80001\n                },\n                {\n                    name: \"swDAI\", // solana\n                    tokenAddress: \"\",\n                    chainId: 1234567\n                },\n                {\n                    name: \"swDAI\", // xDai\n                    tokenAddress: \"\",\n                    chainId: 12345678\n                },\n                {\n                    name: \"swDAI\",   //  fantom\n                    tokenAddress: \"\",\n                    chainId: 123456789\n                }\n            ]\n        },\n    },\n}\n\nconst SwitchChainIds = {\n    main: [1,56,128],\n    test: [42,97,256],\n}\n\nvar SwitchFarms = {\n    main: [],\n    test: [\n        {\n            name: \"swUSDT\",\n            pid: 1,\n            chainId:42\n        },\n        {\n            name: \"swUSDC\",\n            pid: 0,\n            chainId:42\n        },\n        {\n            name: \"swDAI\",\n            pid: 2,\n            chainId:42\n        },\n        {\n            name: \"swUSDT\",\n            pid: 0,\n            chainId:97\n        },\n        {\n            name: \"swUSDC\",\n            pid: 1,\n            chainId:97\n        },\n        {\n            name: \"swDAI\",\n            pid: 2,\n            chainId:97\n        },\n        {\n            name: \"swUSDT\",\n            pid: 0,\n            chainId:256\n        },\n        {\n            name: \"swUSDC\",\n            pid: 2,\n            chainId:256\n        },\n        {\n            name: \"swDAI\",\n            pid: 1,\n            chainId:256\n        },\n    ]\n}\n\nexport { SwitchPools, SwitchChainIds, SwitchFarms };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625212206234
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchFarm.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchFarm.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchFarm.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchFarm.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
        "sourceFileName": "SwitchFarm.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newSwitchFarm = newSwitchFarm;\nexports.SwitchFarmPools = exports.SwitchFarm = void 0;\n\nvar _SwitchFarm2 = _interopRequireDefault(require(\"../abi/SwitchFarm.json\"));\n\nvar _bignumber = _interopRequireDefault(require(\"bignumber.js\"));\n\nvar _BaseByName = _interopRequireDefault(require(\"./BaseByName\"));\n\nvar _ERC20Token = require(\"./ERC20Token.js\");\n\nvar _Web3Provider = _interopRequireDefault(require(\"../Web3Provider.js\"));\n\nvar _SwitchConfig = require(\"../config/SwitchConfig.js\");\n\nvar _SwitchAcross = require(\"./SwitchAcross\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet _farmData = {};\n\nclass SwitchFarm extends _BaseByName.default {\n  constructor(provider) {\n    super(provider, _SwitchFarm2.default, 'SwitchFarm');\n    this.pool = null;\n  }\n\n  async getTokenInfo(token) {\n    // console.log('token==>', token)\n    this.tokenIns = new _ERC20Token.ERC20Token(this.provider, token);\n    return await this.tokenIns.info();\n  }\n\n  async queryWithdraw(user, ticket) {\n    let tokenInfo = await this.getTokenInfo(ticket);\n    let amountOut = await this.contract.methods.queryWithdraw(user, ticket).call();\n    return new _bignumber.default(amountOut).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n  }\n\n  async deposit(pool, amount) {\n    let user = this.provider.account;\n    console.log('deposit:', amount, pool, user);\n    let token = pool.depositToken;\n    let tokenInfo = await this.getTokenInfo(token);\n    amount = new _bignumber.default(amount).shiftedBy(1 * tokenInfo.decimals).toFixed();\n    let res = await this.provider.executeContract(this.contract, 'deposit', 0, [pool.pid, amount, user]);\n    this.farmUpdatePool(pool);\n    return res;\n  }\n\n  async withdraw(pool, amount) {\n    let user = this.provider.account;\n    let token = pool.depositToken;\n    let tokenInfo = await this.getTokenInfo(token);\n    amount = new _bignumber.default(amount).shiftedBy(1 * tokenInfo.decimals).toFixed();\n    let res = await this.provider.executeContract(this.contract, 'withdraw', 0, [pool.pid, amount, user]);\n    this.farmUpdatePool(pool);\n    return res;\n  }\n\n  async pendingReward(pool) {\n    let user = this.provider.account;\n    console.log('pendingReward user:', user);\n    let token = pool.depositToken;\n    let tokenInfo = await this.getTokenInfo(token);\n    let amount = await this.contract.methods.pendingReward(pool.pid, user).call();\n    return new _bignumber.default(amount).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n  }\n\n  async pendingEarn(pool) {\n    let user = this.provider.account;\n    let token = pool.earnToken;\n    let tokenInfo = await this.getTokenInfo(token);\n    let amount = await this.contract.methods.pendingEarn(pool.pid, user).call();\n    return new _bignumber.default(amount).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n  }\n\n  async harvest(pool) {\n    let user = this.provider.account;\n    let res = await this.provider.executeContract(this.contract, 'harvest', 0, [pool.pid, user]);\n    this.farmUpdatePool(pool);\n    return res;\n  }\n\n  async getTokenUSDPrice(addr) {\n    return 1;\n  }\n\n  async getLpUSDValue(depositToken, totalStake, rewardPrice) {\n    return 1;\n  }\n\n  async farmPoolRewardApr(poolData, farmData) {\n    if (farmData.mintPerBlock == 0 || farmData.totalAllocPoint == 0 || farmData.totalSupply == 0 || farmData.rewardPrice == 0) {\n      // console.log('poolRewardApr param is 0 ', farmData, poolData.totalStake, farmData.rewardPrice)\n      return '0';\n    }\n\n    let rewardTokenDecimals = 18; //todo\n\n    let aYearAmount = new _bignumber.default(farmData.mintPerBlock).shiftedBy(-1 * rewardTokenDecimals).div(this.provider.getBlockSpanTime()).multipliedBy(24 * 3600 * 365);\n    aYearAmount = aYearAmount.multipliedBy(poolData.weight).div(farmData.totalAllocPoint);\n    let earned = aYearAmount.multipliedBy(farmData.rewardPrice);\n    let apy = earned.toFixed(2);\n\n    if (poolData.totalStakeValue > 0) {\n      // console.log('poolRewardApr earned is ', poolData.tokenSymbol+'/'+poolData.baseSymbol, earned.toFixed(), farmData.rewardPrice)\n      apy = earned.div(new _bignumber.default(poolData.totalStakeValue)).multipliedBy(100).toFixed(2);\n    }\n\n    return apy;\n  }\n\n  async farmPoolEarnApr(poolData, farmData) {\n    if (farmData.totalAllocPoint == 0 || farmData.totalSupply == 0) {\n      // console.log('poolRewardApr param is 0 ', farmData, poolData.totalStake)\n      return '0';\n    }\n\n    let earnToken = await this.getTokenInfo(poolData.earnToken);\n    let pendingEarn = await (0, _SwitchAcross.newSwitchAcross)(poolData.chainId).totalSlideOfToken(poolData.earnToken);\n    let mintPerBlock = new _bignumber.default(pendingEarn).dividedBy((await this.provider.getBlockNumber()) - poolData.lastBlock);\n    let aYearAmount = new _bignumber.default(mintPerBlock).shiftedBy(-1 * earnToken.decimals).div(this.provider.getBlockSpanTime()).multipliedBy(24 * 3600 * 365);\n    aYearAmount = aYearAmount.multipliedBy(poolData.weight).div(farmData.totalAllocPoint);\n    let earned = aYearAmount.multipliedBy(1);\n    let apy = earned.toFixed(2);\n\n    if (poolData.totalStakeValue > 0) {\n      apy = earned.div(new _bignumber.default(poolData.totalStakeValue)).multipliedBy(100).toFixed(2);\n    }\n\n    return apy;\n  }\n\n  async farmPoolApr(poolData, farmData) {\n    let rewardApr = await this.farmPoolRewardApr(poolData, farmData);\n    let earnApr = await this.farmPoolEarnApr(poolData, farmData);\n    return new _bignumber.default(rewardApr).plus(earnApr).toFixed(2);\n  }\n\n  async farmUpdatePool(pool) {\n    let pid = pool.pid;\n    let farmData = await this.getFarmData();\n    let userInfo = await this.contract.methods.userInfo(pid, this.provider.account).call();\n    let poolInfo = await this.contract.methods.poolInfo(pid).call();\n    pool.depositToken = poolInfo.depositToken;\n    pool.earnToken = poolInfo.earnToken;\n    pool.lastBlock = poolInfo.lastBlock;\n    let pendingUserEarn = await this.pendingEarn(pool);\n    let rewardTokenDecimals = 18;\n    let depositToken = await this.getTokenInfo(poolInfo.depositToken);\n    let rewardToken = await this.getTokenInfo(farmData.rewardToken);\n    let earnToken = await this.getTokenInfo(poolInfo.earnToken);\n    pool.depositSymbol = depositToken.symbol;\n    pool.rewardSymbol = rewardToken.symbol;\n    pool.earnSymbol = earnToken.symbol;\n    pool.earnDecimals = earnToken.decimals;\n    pool.depositDecimals = depositToken.decimals;\n    let pendingUserReward = await this.pendingReward(pool);\n\n    let _depositTokenIns = new _ERC20Token.ERC20Token(this.provider, poolInfo.depositToken);\n\n    pool.userBalance = await _depositTokenIns.balanceOf(this.provider.account);\n    pool.userAmount = new _bignumber.default(userInfo.amount).shiftedBy(-1 * depositToken.decimals).toFixed();\n    pool.userReward = new _bignumber.default(pendingUserReward).shiftedBy(-1 * rewardTokenDecimals).toFixed();\n    pool.userEarn = new _bignumber.default(pendingUserEarn).shiftedBy(-1 * earnToken.decimals).toFixed();\n    let totalStake = poolInfo.depositTokenSupply;\n    let depositTokenPrice = '0';\n\n    if (poolInfo.depositToken.toLocaleLowerCase() == rewardToken.address.toLocaleLowerCase()) {\n      depositTokenPrice = farmData.rewardPrice;\n    } else if (poolInfo.depositToken.toLocaleLowerCase() == earnToken.address.toLocaleLowerCase()) {\n      depositTokenPrice = farmData.earnPrice;\n    } else {\n      depositTokenPrice = await this.getTokenUSDPrice(poolInfo.depositToken);\n    }\n\n    let totalStakeValue = new _bignumber.default(totalStake).shiftedBy(-1 * depositToken.decimals).multipliedBy(depositTokenPrice).toFixed(2);\n    pool.totalStake = new _bignumber.default(totalStake).shiftedBy(-1 * depositToken.decimals).toFixed();\n    pool.totalStakeValue = totalStakeValue;\n    pool.weight = poolInfo.allocPoint;\n    pool.userAllowance = await _depositTokenIns.allowance(this.provider.account, this.address);\n    pool.apy = await this.farmPoolApr(pool, farmData); // console.log('updatePool:', pool)\n\n    return pool;\n  }\n\n  async updateUserAllowance(pool) {\n    let _depositTokenIns = new _ERC20Token.ERC20Token(this.provider, pool.depositToken);\n\n    pool.userAllowance = await _depositTokenIns.allowance(this.provider.account, this.address);\n    return pool;\n  }\n\n  async getFarmData() {\n    let rewardPrice = 0;\n    let earnPrice = 1;\n\n    if (!_farmData.hasOwnProperty(this.provider.chainId)) {\n      _farmData[this.provider.chainId] = {\n        totalAllocPoint: await this.contract.methods.totalAllocPoint().call(),\n        mintPerBlock: await this.contract.methods.mintPerBlock().call(),\n        rewardTotal: await this.contract.methods.rewardTotal().call(),\n        rewardToken: await this.contract.methods.rewardToken().call(),\n        rewardPrice: rewardPrice,\n        earnPrice: earnPrice\n      };\n    }\n\n    return _farmData[this.provider.chainId];\n  }\n\n  async iterateFarms(start, end) {\n    let count = await this.contract.methods.poolLength().call();\n    count = Number(count);\n\n    if (end > count) {\n      end = count;\n    }\n\n    let data = [];\n\n    for (let i = start; i < end; i++) {\n      let d = {\n        pid: i\n      };\n      this.farmUpdatePool(d);\n      data.push(d);\n    }\n\n    return data;\n  }\n\n}\n\nexports.SwitchFarm = SwitchFarm;\nvar _SwitchFarm = {};\n\nfunction newSwitchFarm(chainId, account) {\n  chainId = Number(chainId);\n\n  if (!_SwitchFarm.hasOwnProperty(chainId)) {\n    let provider = (0, _Web3Provider.default)(chainId, account);\n    _SwitchFarm[chainId] = new SwitchFarm(provider);\n  }\n\n  _SwitchFarm[chainId].initialize(chainId, account);\n\n  return _SwitchFarm[chainId];\n}\n\nclass SwitchFarmPools {\n  constructor(provider) {\n    this.provider = provider;\n    this.envName = 'main';\n  }\n\n  getPools() {\n    if ([42, 97, 256].includes(this.provider.chainId)) {\n      this.envName = 'test';\n    }\n\n    return _SwitchConfig.SwitchFarms[this.envName];\n  }\n\n  async filterFarms(chainId = 0, name = '', my = false) {\n    let pools = this.getPools();\n\n    for (let i = 0; i < pools.length; i++) {\n      let d = pools[i];\n      d.isShow = true;\n\n      if (chainId > 0 && chainId != d.chainId) {\n        d.isShow = false;\n      }\n\n      if (name && name != d.name) {\n        d.isShow = false;\n      }\n\n      if (my && d.userAmount <= '0') {\n        d.isShow = false;\n      }\n    }\n  }\n\n  async getFarms() {\n    let pools = this.getPools();\n\n    for (let i = 0; i < pools.length; i++) {\n      let d = pools[i];\n      d.apy = '--';\n      d.lastBlock = 0;\n      d.rewardSymbol = '--';\n      d.earnSymbol = '--';\n      d.userAllowance = '0';\n      d.userBalance = '--';\n      d.userAmount = '--';\n      d.userReward = '--';\n      d.userEarn = '--';\n      d.totalStake = '--';\n      d.totalStakeValue = '--';\n      d.weight = '--';\n      d.isShow = true;\n      console.log('getFarms:', d.chainId, this.provider.account);\n      newSwitchFarm(d.chainId, this.provider.account).farmUpdatePool(d);\n    }\n\n    return pools;\n  }\n\n  async getSwitchTokens() {\n    let network = process.env.VUE_APP_POOL_NETWORK;\n    let res = [];\n\n    for (let k in SwitchPools[network]) {\n      if (SwitchPools[network][k].opened) {\n        SwitchPools[network][k].name = k;\n        res.push(SwitchPools[network][k]);\n      }\n    }\n\n    return res;\n  }\n\n}\n\nexports.SwitchFarmPools = SwitchFarmPools;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "SwitchFarm.js"
      ],
      "names": [
        "_farmData",
        "SwitchFarm",
        "BaseByName",
        "constructor",
        "provider",
        "SwitchFarmABI",
        "pool",
        "getTokenInfo",
        "token",
        "tokenIns",
        "ERC20Token",
        "info",
        "queryWithdraw",
        "user",
        "ticket",
        "tokenInfo",
        "amountOut",
        "contract",
        "methods",
        "call",
        "BigNumber",
        "shiftedBy",
        "decimals",
        "toFixed",
        "deposit",
        "amount",
        "account",
        "console",
        "log",
        "depositToken",
        "res",
        "executeContract",
        "pid",
        "farmUpdatePool",
        "withdraw",
        "pendingReward",
        "pendingEarn",
        "earnToken",
        "harvest",
        "getTokenUSDPrice",
        "addr",
        "getLpUSDValue",
        "totalStake",
        "rewardPrice",
        "farmPoolRewardApr",
        "poolData",
        "farmData",
        "mintPerBlock",
        "totalAllocPoint",
        "totalSupply",
        "rewardTokenDecimals",
        "aYearAmount",
        "div",
        "getBlockSpanTime",
        "multipliedBy",
        "weight",
        "earned",
        "apy",
        "totalStakeValue",
        "farmPoolEarnApr",
        "chainId",
        "totalSlideOfToken",
        "dividedBy",
        "getBlockNumber",
        "lastBlock",
        "farmPoolApr",
        "rewardApr",
        "earnApr",
        "plus",
        "getFarmData",
        "userInfo",
        "poolInfo",
        "pendingUserEarn",
        "rewardToken",
        "depositSymbol",
        "symbol",
        "rewardSymbol",
        "earnSymbol",
        "earnDecimals",
        "depositDecimals",
        "pendingUserReward",
        "_depositTokenIns",
        "userBalance",
        "balanceOf",
        "userAmount",
        "userReward",
        "userEarn",
        "depositTokenSupply",
        "depositTokenPrice",
        "toLocaleLowerCase",
        "address",
        "earnPrice",
        "allocPoint",
        "userAllowance",
        "allowance",
        "updateUserAllowance",
        "hasOwnProperty",
        "rewardTotal",
        "iterateFarms",
        "start",
        "end",
        "count",
        "poolLength",
        "Number",
        "data",
        "i",
        "d",
        "push",
        "_SwitchFarm",
        "newSwitchFarm",
        "initialize",
        "SwitchFarmPools",
        "envName",
        "getPools",
        "includes",
        "SwitchFarms",
        "filterFarms",
        "name",
        "my",
        "pools",
        "length",
        "isShow",
        "getFarms",
        "getSwitchTokens",
        "network",
        "process",
        "env",
        "VUE_APP_POOL_NETWORK",
        "k",
        "SwitchPools",
        "opened"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "sourcesContent": [
        "import SwitchFarmABI from '../abi/SwitchFarm.json';\nimport BigNumber from \"bignumber.js\"\nimport BaseByName from './BaseByName';\nimport { ERC20Token } from './ERC20Token.js';\nimport Web3Provider from '../Web3Provider.js';\nimport { SwitchFarms } from '../config/SwitchConfig.js';\nimport { newSwitchAcross } from './SwitchAcross';\n\nlet _farmData = {};\nclass SwitchFarm extends BaseByName {\n    constructor(provider) {\n        super(provider, SwitchFarmABI, 'SwitchFarm');\n        this.pool = null;\n    }\n\n    async getTokenInfo(token) {\n        // console.log('token==>', token)\n        this.tokenIns = new ERC20Token(this.provider, token);\n        return await this.tokenIns.info();\n    }\n\n    async queryWithdraw(user, ticket) {\n        let tokenInfo = await this.getTokenInfo(ticket);\n        let amountOut = await this.contract.methods.queryWithdraw(user, ticket).call();\n        return new BigNumber(amountOut).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n    }\n\n    async deposit(pool, amount) {\n        let user = this.provider.account;\n        console.log('deposit:', amount, pool, user);\n        let token = pool.depositToken;\n        let tokenInfo = await this.getTokenInfo(token);\n        amount = new BigNumber(amount).shiftedBy(1 * tokenInfo.decimals).toFixed();\n        let res = await this.provider.executeContract(this.contract, 'deposit', 0, [pool.pid, amount, user]);\n        this.farmUpdatePool(pool);\n        return res;\n    }\n\n    async withdraw(pool, amount) {\n        let user = this.provider.account;\n        let token = pool.depositToken;\n        let tokenInfo = await this.getTokenInfo(token);\n        amount = new BigNumber(amount).shiftedBy(1 * tokenInfo.decimals).toFixed();\n        let res = await this.provider.executeContract(this.contract, 'withdraw', 0, [pool.pid, amount, user]);\n        this.farmUpdatePool(pool);\n        return res;\n    }\n\n    async pendingReward(pool) {\n        let user = this.provider.account;\n        console.log('pendingReward user:', user);\n        let token = pool.depositToken;\n        let tokenInfo = await this.getTokenInfo(token);\n        let amount = await this.contract.methods.pendingReward(pool.pid, user).call();\n        return new BigNumber(amount).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n    }\n\n    async pendingEarn(pool) {\n        let user = this.provider.account;\n        let token = pool.earnToken;\n        let tokenInfo = await this.getTokenInfo(token);\n        let amount = await this.contract.methods.pendingEarn(pool.pid, user).call();\n        return new BigNumber(amount).shiftedBy(-1 * tokenInfo.decimals).toFixed();\n    }\n\n    async harvest(pool) {\n        let user = this.provider.account;\n        let res = await this.provider.executeContract(this.contract, 'harvest', 0, [pool.pid, user]);\n        this.farmUpdatePool(pool);\n        return res;\n    }\n\n    async getTokenUSDPrice(addr) {\n        return 1;\n    }\n\n    async getLpUSDValue(depositToken, totalStake, rewardPrice) {\n        return 1;\n    }\n\n    async farmPoolRewardApr(poolData, farmData) {\n        if(farmData.mintPerBlock == 0 || farmData.totalAllocPoint == 0 || farmData.totalSupply == 0 || farmData.rewardPrice == 0) {\n            // console.log('poolRewardApr param is 0 ', farmData, poolData.totalStake, farmData.rewardPrice)\n            return '0'\n        }\n\n        let rewardTokenDecimals = 18 //todo\n        let aYearAmount = new BigNumber(farmData.mintPerBlock).shiftedBy(-1*rewardTokenDecimals).div(this.provider.getBlockSpanTime()).multipliedBy(24*3600*365)\n        aYearAmount = aYearAmount.multipliedBy(poolData.weight).div(farmData.totalAllocPoint)\n        let earned = aYearAmount.multipliedBy(farmData.rewardPrice)\n        let apy = earned.toFixed(2)\n        if(poolData.totalStakeValue > 0) {\n            // console.log('poolRewardApr earned is ', poolData.tokenSymbol+'/'+poolData.baseSymbol, earned.toFixed(), farmData.rewardPrice)\n            apy = earned.div(new BigNumber(poolData.totalStakeValue)).multipliedBy(100).toFixed(2)\n        }\n        return apy\n    }\n\n    async farmPoolEarnApr(poolData, farmData) {\n        if(farmData.totalAllocPoint == 0 || farmData.totalSupply == 0) {\n            // console.log('poolRewardApr param is 0 ', farmData, poolData.totalStake)\n            return '0'\n        }\n        let earnToken = await this.getTokenInfo(poolData.earnToken)\n        let pendingEarn = await newSwitchAcross(poolData.chainId).totalSlideOfToken(poolData.earnToken);\n        let mintPerBlock = new BigNumber(pendingEarn).dividedBy(await this.provider.getBlockNumber() - poolData.lastBlock);\n        let aYearAmount = new BigNumber(mintPerBlock).shiftedBy(-1*earnToken.decimals).div(this.provider.getBlockSpanTime()).multipliedBy(24*3600*365)\n        aYearAmount = aYearAmount.multipliedBy(poolData.weight).div(farmData.totalAllocPoint)\n        let earned = aYearAmount.multipliedBy(1)\n        let apy = earned.toFixed(2)\n        if(poolData.totalStakeValue > 0) {\n            apy = earned.div(new BigNumber(poolData.totalStakeValue)).multipliedBy(100).toFixed(2)\n        }\n        return apy\n    }\n\n    async farmPoolApr(poolData, farmData) {\n        let rewardApr = await this.farmPoolRewardApr(poolData, farmData);\n        let earnApr = await this.farmPoolEarnApr(poolData, farmData);\n        return new BigNumber(rewardApr).plus(earnApr).toFixed(2);\n    }\n\n    async farmUpdatePool(pool) {\n        let pid = pool.pid\n        let farmData = await this.getFarmData()\n        let userInfo = await this.contract.methods.userInfo(pid, this.provider.account).call()\n        let poolInfo = await this.contract.methods.poolInfo(pid).call()\n        pool.depositToken = poolInfo.depositToken\n        pool.earnToken = poolInfo.earnToken\n        pool.lastBlock = poolInfo.lastBlock\n        let pendingUserEarn = await this.pendingEarn(pool)\n        let rewardTokenDecimals = 18\n        let depositToken = await this.getTokenInfo(poolInfo.depositToken)\n        let rewardToken = await this.getTokenInfo(farmData.rewardToken)\n        let earnToken = await this.getTokenInfo(poolInfo.earnToken)\n        pool.depositSymbol = depositToken.symbol;\n        pool.rewardSymbol = rewardToken.symbol\n        pool.earnSymbol = earnToken.symbol\n        pool.earnDecimals = earnToken.decimals\n        pool.depositDecimals = depositToken.decimals\n        let pendingUserReward = await this.pendingReward(pool)\n        let _depositTokenIns = new ERC20Token(this.provider, poolInfo.depositToken)\n        pool.userBalance = await _depositTokenIns.balanceOf(this.provider.account)\n        pool.userAmount = new BigNumber(userInfo.amount).shiftedBy(-1*depositToken.decimals).toFixed()\n        pool.userReward = new BigNumber(pendingUserReward).shiftedBy(-1*rewardTokenDecimals).toFixed()\n        pool.userEarn = new BigNumber(pendingUserEarn).shiftedBy(-1*earnToken.decimals).toFixed()\n        let totalStake = poolInfo.depositTokenSupply\n        let depositTokenPrice = '0'\n        if(poolInfo.depositToken.toLocaleLowerCase()==rewardToken.address.toLocaleLowerCase()) {\n            depositTokenPrice = farmData.rewardPrice\n        } else if(poolInfo.depositToken.toLocaleLowerCase()==earnToken.address.toLocaleLowerCase()) {\n            depositTokenPrice = farmData.earnPrice\n        } else {\n            depositTokenPrice = await this.getTokenUSDPrice(poolInfo.depositToken)\n        }\n\n        let totalStakeValue = new BigNumber(totalStake).shiftedBy(-1*depositToken.decimals).multipliedBy(depositTokenPrice).toFixed(2)\n\n        pool.totalStake = new BigNumber(totalStake).shiftedBy(-1*depositToken.decimals).toFixed()\n        pool.totalStakeValue = totalStakeValue\n        pool.weight = poolInfo.allocPoint\n        pool.userAllowance = await _depositTokenIns.allowance(this.provider.account, this.address)\n        pool.apy = await this.farmPoolApr(pool, farmData)\n\n        // console.log('updatePool:', pool)\n        return pool\n    }\n\n    async updateUserAllowance(pool) {\n        let _depositTokenIns = new ERC20Token(this.provider, pool.depositToken)\n        pool.userAllowance = await _depositTokenIns.allowance(this.provider.account, this.address)\n        return pool\n    }\n\n    async getFarmData() {\n        let rewardPrice = 0;\n        let earnPrice = 1;\n        if(!_farmData.hasOwnProperty(this.provider.chainId)) {\n            _farmData[this.provider.chainId] = {\n                totalAllocPoint: await this.contract.methods.totalAllocPoint().call(),\n                mintPerBlock: await this.contract.methods.mintPerBlock().call(),\n                rewardTotal: await this.contract.methods.rewardTotal().call(),\n                rewardToken: await this.contract.methods.rewardToken().call(),\n                rewardPrice: rewardPrice,\n                earnPrice: earnPrice,\n            }\n        }\n        return _farmData[this.provider.chainId];\n    }\n\n    async iterateFarms(start, end) {\n        let count = await this.contract.methods.poolLength().call();\n        count = Number(count);\n        if(end > count) {\n            end = count;\n        }\n        let data = [];\n        for(let i = start; i < end; i++) {\n            let d = {\n                pid: i,\n            };\n            this.farmUpdatePool(d);\n            data.push(d);\n        }\n        return data;\n    }\n}\n\n\nvar _SwitchFarm = {}\nfunction newSwitchFarm(chainId, account) {\n    chainId = Number(chainId);\n    if(!_SwitchFarm.hasOwnProperty(chainId)) {\n        let provider = Web3Provider(chainId, account);\n        _SwitchFarm[chainId] =  new SwitchFarm(provider);\n    }\n    _SwitchFarm[chainId].initialize(chainId, account);\n    return _SwitchFarm[chainId];\n}\nclass SwitchFarmPools {\n    constructor(provider) {\n        this.provider = provider;\n        this.envName = 'main';\n    }\n\n    getPools() {\n        if([42,97,256].includes(this.provider.chainId)) {\n            this.envName = 'test';\n        }\n        return SwitchFarms[this.envName];\n    }\n    async filterFarms(chainId=0, name='', my=false) {\n        let pools = this.getPools();\n        for (let i=0; i<pools.length; i++) {\n            let d = pools[i];\n            d.isShow = true\n            if(chainId>0 && chainId != d.chainId) {\n                d.isShow = false\n            }\n            if(name && name != d.name) {\n                d.isShow = false\n            }\n            if(my && d.userAmount <= '0') {\n                d.isShow = false\n            }\n        }\n    }\n\n    async getFarms() {\n        let pools = this.getPools();\n        for (let i=0; i<pools.length; i++) {\n            let d = pools[i];\n            d.apy = '--'\n            d.lastBlock = 0\n            d.rewardSymbol = '--'\n            d.earnSymbol = '--'\n            d.userAllowance = '0'\n            d.userBalance = '--'\n            d.userAmount = '--'\n            d.userReward = '--'\n            d.userEarn = '--'\n            d.totalStake = '--'\n            d.totalStakeValue = '--'\n            d.weight = '--'\n            d.isShow = true\n            console.log('getFarms:', d.chainId, this.provider.account);\n            newSwitchFarm(d.chainId, this.provider.account).farmUpdatePool(d);\n        }\n        return pools;\n    }\n\n\n    async getSwitchTokens() {\n        let network = process.env.VUE_APP_POOL_NETWORK;\n        let res = []\n        for (let k in SwitchPools[network]) {\n            if (SwitchPools[network][k].opened) {\n                SwitchPools[network][k].name = k\n                res.push(SwitchPools[network][k])\n            }\n        }\n        return res;\n    }\n\n}\n\nexport { SwitchFarm, newSwitchFarm, SwitchFarmPools }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1624948660235
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchAcross.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchAcross.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchAcross.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/SwitchAcross.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
        "sourceFileName": "SwitchAcross.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newSwitchAcross = newSwitchAcross;\nexports.SwitchAcrossHistory = exports.SwitchAcross = void 0;\n\nvar _SwitchAcross = _interopRequireDefault(require(\"../abi/SwitchAcross.json\"));\n\nvar _bignumber = _interopRequireDefault(require(\"bignumber.js\"));\n\nvar _BaseByName = _interopRequireDefault(require(\"./BaseByName\"));\n\nvar _Base = _interopRequireDefault(require(\"./Base\"));\n\nvar _ERC20Token = require(\"./ERC20Token.js\");\n\nvar _Web3Provider = _interopRequireDefault(require(\"../Web3Provider.js\"));\n\nvar _Web3Util = _interopRequireDefault(require(\"../Web3Util.js\"));\n\nvar _SwitchConfig = require(\"../config/SwitchConfig.js\");\n\nvar _SwitchTreasury = require(\"./SwitchTreasury.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction getChainIds(chainId) {\n  if ([42, 97, 256].includes(chainId)) {\n    return _SwitchConfig.SwitchChainIds.test;\n  }\n\n  return _SwitchConfig.SwitchChainIds.main;\n}\n\nvar _switchAcrossTokens = {};\nvar _switchCount = 0;\nvar _switchAcrossHistory = [];\nvar _process = {\n  step1_pending: 10,\n  step1_success: 11,\n  step1_fail: 12,\n  step2_pending: 20,\n  step2_success: 21,\n  step2_fail: 22\n};\nconst _switchDefaultData = {\n  \"ukey\": \"chainIdIn-inSn\",\n  \"process\": _process.step1_pending,\n  \"status\": 0,\n  \"inSn\": 0,\n  \"outSn\": 0,\n  \"mode\": 0,\n  \"chainIdIn\": 0,\n  \"tokenIn\": \"\",\n  \"tokenInSymbol\": \"\",\n  \"chainIdOut\": 0,\n  \"tokenOut\": \"\",\n  \"tokenOutSymbol\": \"\",\n  \"amountIn\": \"0\",\n  \"amountOut\": \"0\",\n  \"fee\": \"0\",\n  \"slide\": \"0\",\n  \"user\": \"\",\n  \"signature\": \"\",\n  \"txIn\": \"\",\n  \"txOut\": \"\",\n  \"blockIn\": 0,\n  \"blockOut\": 0,\n  \"timeIn\": null,\n  \"timeOut\": null,\n  \"updateTime\": new Date()\n};\nvar _switchData = { ..._switchDefaultData\n};\n\nfunction loadSwitchCount() {\n  let res = localStorage.getItem('_switchCount');\n\n  if (res) {\n    _switchCount = Number(res);\n\n    if (_switchCount < 0) {\n      _switchCount = 0;\n    }\n  }\n}\n\nfunction cleanSwitchCount() {\n  _switchCount = 0;\n  localStorage.setItem('_switchCount', _switchCount + '');\n}\n\nfunction updateSwitchCount(num) {\n  _switchCount += num;\n\n  if (_switchCount < 0) {\n    _switchCount = 0;\n  }\n\n  localStorage.setItem('_switchCount', _switchCount + '');\n}\n\nloadSwitchCount();\n\nfunction isMyWallet(_user) {\n  const local = localStorage.getItem('myWallets');\n\n  if (local) {\n    const wallets = JSON.parse(local);\n\n    for (let w in wallets) {\n      console.log('isMywallet:', w, _user);\n\n      if (w.toLowerCase() == _user.toLowerCase()) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction isTicket(_token, chainId) {\n  for (let k in _switchAcrossTokens) {\n    if (_switchAcrossTokens[k].opened == true) {\n      for (let i = 0; i < _switchAcrossTokens[k].list.length; i++) {\n        if (_switchAcrossTokens[k].list[i].tokenAddress.toLowerCase() == _token.toLowerCase() && _switchAcrossTokens[k].list[i].chainId == chainId) {\n          return _switchAcrossTokens[k].list[i].isTicket;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction updateChainBlock(chainId) {\n  let provider = (0, _Web3Provider.default)(chainId);\n  provider.getBlockNumber().then(res => {\n    localStorage.setItem('_switchBlockNumber' + chainId, res + '');\n  });\n}\n\nfunction getChainBlock(chainId) {\n  if (_switchCount > 0) {\n    let res = localStorage.getItem('_switchBlockNumber' + chainId);\n    return Number(res);\n  }\n\n  return 0;\n}\n\nclass SwitchAcross extends _BaseByName.default {\n  constructor(provider) {\n    super(provider, _SwitchAcross.default, 'SwitchAcross');\n    this.gasDecimals = 18;\n    this.targetTokens = {};\n    this.subscribes = [];\n    this.subscriptions = [];\n    this.currentBlock = 0;\n    this.process = _process;\n  }\n\n  initialize(chainId, account = null) {\n    console.log('SwitchAcross initialize...', this.provider.chainId);\n    super.initialize(chainId, account);\n  }\n\n  initAfter() {\n    console.log('SwitchAcross initAfter...', this.provider.chainId, this.subscribes.length);\n    this.initSubscribe();\n  }\n\n  initSubscribe() {\n    let subscription = this.provider.web3.eth.subscribe('logs', {\n      fromBlock: 'latest',\n      address: this.address\n    }, (error, result) => {\n      if (!error) {\n        let eventLog = this.findEventOneLog(result);\n        eventLog.chainId = this.provider.chainId;\n        console.log('subscribes length:', this.provider.chainId, this.subscribes.length);\n        this.subscribes.forEach(cb => {\n          console.log('SwitchAcross subscribe subscribe', this.provider.chainId, eventLog);\n\n          if (this.address.toLowerCase() == eventLog.address.toLowerCase()) {\n            cb(eventLog);\n          } else {\n            console.warn('SwitchAcross subscribe unknown address', this.provider.chainId, eventLog.address);\n          }\n        });\n      } else {\n        console.error('SwitchAcross subscribe error:', this.provider.chainId, error);\n      }\n    });\n    this.subscriptions.push(subscription);\n  }\n\n  async scanEventLog() {\n    if (this.currentBlock == 0) {\n      this.currentBlock = getChainBlock(this.provider.chainId);\n      if (this.currentBlock == 0) this.currentBlock = await this.provider.getBlockNumber();\n    }\n\n    if (_switchCount <= 0) {\n      // console.log('SwitchAcross scanEventLog sikp');\n      await asleep(3000);\n      this.scanEventLog();\n      return;\n    }\n\n    let latestBlockNumber = this.currentBlock;\n\n    try {\n      latestBlockNumber = await this.provider.getBlockNumber();\n    } catch (e) {\n      console.error('SwitchAcross scan except:', e);\n      await asleep(3000);\n      this.scanEventLog();\n      return;\n    }\n\n    let toBlock = Math.min(this.currentBlock + 1000, latestBlockNumber); // console.log('SwitchAcross scanEventLog...', this.provider.chainId, this.currentBlock, toBlock);\n\n    if (toBlock > this.currentBlock) {\n      let records = null;\n\n      try {\n        console.log('SwitchAcross getPastEvents...', this.provider.chainId, this.currentBlock, toBlock);\n        records = await this.contract.getPastEvents(\"TransferOuted\", {\n          fromBlock: this.currentBlock,\n          toBlock: toBlock\n        }); // console.log('SwitchAcross getPastEvents records:', this.provider.chainId, records);\n\n        Object.keys(records).forEach(async i => {\n          let eventLog = { ...records[i]\n          };\n          eventLog.chainId = this.provider.chainId;\n          eventLog.eventName = \"TransferOuted\";\n          console.log('getPastEvents eventLog:', this.subscribes.length, eventLog);\n          this.subscribes.forEach(cb => {\n            cb(eventLog);\n          });\n          this.currentBlock = Number(eventLog.blockNumber);\n        });\n        this.currentBlock = toBlock;\n      } catch (e) {\n        console.error('SwitchAcross scan getTransferOutedEvents:', this.provider.chainId, typeof records, Array.isArray(records), records, e);\n      }\n    }\n\n    await asleep(3000);\n    this.scanEventLog();\n  }\n\n  findEventOneLog(logs) {\n    return _Web3Util.default.parseEventOneLog(this.provider.web3, _SwitchAcross.default, logs, 'TransferIned');\n  }\n\n  subscribe(cb) {\n    if (!this.subscribes.includes(cb)) {\n      console.log('SwitchAcrossInstance initSubscribe subscribe chainId:', this.provider.chainId);\n      this.subscribes.push(cb);\n    }\n  }\n\n  unsubscribe() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe(function (error, success) {\n        if (success) console.log('Successfully unsubscribed!');\n      });\n    });\n  }\n\n  clean() {\n    console.log('clean...');\n    this.unsubscribe();\n  }\n\n  async getTokenInfo(token) {\n    this.tokenIns = new _ERC20Token.ERC20Token(this.provider, token);\n    return await this.tokenIns.info();\n  }\n\n  async getTokenOutInfo(tokenIn, toChainId) {\n    let key = tokenIn.toLowerCase() + '_' + toChainId;\n    let res = null;\n\n    if (!this.targetTokens.hasOwnProperty(key)) {\n      res = await this.contract.methods.targetTokens(tokenIn, toChainId).call();\n\n      if (!this.provider.isZeroAddress(res.tokenOut)) {\n        this.targetTokens[key] = res;\n      }\n    } else {\n      res = this.targetTokens[key];\n    }\n\n    return res;\n  }\n\n  async getSourceToken(tokenIn) {\n    let res = await this.contract.methods.sourceTokens(tokenIn).call();\n    let source = { ...res\n    };\n    source.tokenIn = tokenIn;\n    source.symbol = (await this.getTokenInfo(tokenIn)).symbol;\n    return source;\n  }\n\n  async iterateTokens(start, end) {\n    let count = await this.contract.methods.countToken().call();\n    count = Number(count);\n\n    if (end > count) {\n      end = count;\n    }\n\n    let data = [];\n\n    for (let i = start; i < end; i++) {\n      let token = await this.contract.methods.tokens(i).call();\n      let d = await this.getSourceToken(token);\n      d.targets = await this.getTargetTokensForSource(token);\n      data.push(d);\n    }\n\n    return data;\n  }\n\n  async getTargetToken(tokenIn, chainId) {\n    let key = tokenIn.toLowerCase() + '_' + chainId;\n    let res = await this.contract.methods.targetTokens(tokenIn, chainId).call();\n    let target = { ...res\n    };\n    target.symbol = '';\n\n    if (!this.provider.isZeroAddress(target.tokenOut)) {\n      let tokenIns = (0, _ERC20Token.newERC20Token)(chainId, target.tokenOut);\n      let tokenInfo = await tokenIns.info();\n      target.chainId = chainId;\n      target.symbol = tokenInfo.symbol;\n    }\n\n    this.targetTokens[key] = target;\n    return target;\n  }\n\n  async getTargetTokensForSource(tokenIn) {\n    let chainIds = getChainIds(this.provider.chainId);\n    let data = [];\n\n    for (let chainId of chainIds) {\n      if (chainId == this.provider.chainId) continue;\n      let d = await this.getTargetToken(tokenIn, chainId);\n      data.push(d);\n    }\n\n    return data;\n  }\n\n  async getInOrders(sn) {\n    return await this.contract.methods.getInOrders(sn).call();\n  }\n\n  async getOutOrders(sn) {\n    return await this.contract.methods.getOutOrders(sn).call();\n  }\n\n  async queryWithdraw(token, value) {\n    return await this.contract.methods.queryWithdraw(token, value).call();\n  }\n\n  async totalSlideOfToken(token) {\n    return await this.contract.methods.totalSlideOfToken(token).call();\n  }\n\n  async getOutInfo(tokenIn, toChainId, amountIn, mode) {\n    if (!mode) {\n      mode = 2;\n    }\n\n    console.log('getOutInfo:', tokenIn, toChainId, amountIn, mode);\n    let tokenInInfo = await this.getTokenInfo(tokenIn);\n    let amountInStr = new _bignumber.default(amountIn).shiftedBy(1 * tokenInInfo.decimals).toFixed();\n    let res = await this.contract.methods.getOutInfo(tokenIn, toChainId, amountInStr, mode).call();\n\n    if (this.provider.isZeroAddress(res.tokenOut)) {\n      res.amountOut = '0';\n    }\n\n    let tokenOutInfo = await this.getTokenOutInfo(tokenIn, toChainId);\n    let d = { ...res\n    };\n    d.amountIn = amountIn;\n    d.amountOut = new _bignumber.default(res.amountOut).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n    d.slide = new _bignumber.default(res.slide).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n    d.fee = new _bignumber.default(res.fee).shiftedBy(-1 * this.gasDecimals).toFixed();\n    d.inLimit = new _bignumber.default(res.inLimit).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n    d.outLimit = new _bignumber.default(res.outLimit).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n\n    if (!isTicket(tokenOutInfo.tokenOut, toChainId)) {\n      let treasureBalance = await (0, _SwitchTreasury.newSwitchTreasury)(toChainId).queryWithdraw(this.address, tokenOutInfo.tokenOut);\n\n      if (new _bignumber.default(res.outLimit).gt(new _bignumber.default(treasureBalance))) {\n        d.outLimit = new _bignumber.default(treasureBalance).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n      }\n    }\n\n    return d;\n  }\n\n  async getInInfo(tokenIn, toChainId, amountOut, mode) {\n    if (!mode) {\n      mode = 2;\n    }\n\n    let tokenOutInfo = await this.getTokenOutInfo(tokenIn, toChainId);\n\n    if (this.provider.isZeroAddress(tokenOutInfo.tokenOut)) {\n      d.amountOut = '0';\n    }\n\n    let amountOutStr = new _bignumber.default(amountOut).shiftedBy(1 * tokenOutInfo.decimals).toFixed();\n    console.log('inInfo:', tokenOutInfo, amountOutStr);\n    let tokenInInfo = await this.getTokenInfo(tokenIn);\n    let res = await this.contract.methods.getInInfo(tokenIn, toChainId, amountOutStr, mode).call();\n    let d = { ...res\n    };\n    d.amountOut = amountOut;\n    d.amountIn = new _bignumber.default(res.amountIn).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n    d.slide = new _bignumber.default(res.slide).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n    d.fee = new _bignumber.default(res.fee).shiftedBy(-1 * this.gasDecimals).toFixed();\n    d.inLimit = new _bignumber.default(res.inLimit).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n    d.outLimit = new _bignumber.default(res.outLimit).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n\n    if (!isTicket(tokenOutInfo.tokenOut, toChainId)) {\n      let treasureBalance = await (0, _SwitchTreasury.newSwitchTreasury)(toChainId).queryWithdraw(this.address, tokenOutInfo.tokenOut);\n\n      if (new _bignumber.default(res.outLimit).gt(new _bignumber.default(treasureBalance))) {\n        d.outLimit = new _bignumber.default(treasureBalance).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n      }\n    }\n\n    return d;\n  }\n\n  async transferIn(to, tokenIn, tokenOut, amountIn, amountOut, toChainId, fee, mode) {\n    if (!mode) {\n      mode = 2;\n    }\n\n    let tokenInInfo = await this.getTokenInfo(tokenIn);\n    let amountInInt = new _bignumber.default(amountIn).shiftedBy(1 * tokenInInfo.decimals);\n    let tokenOutInfo = await this.contract.methods.targetTokens(tokenIn, toChainId).call();\n    let amountOutInt = new _bignumber.default(amountOut).shiftedBy(1 * tokenOutInfo.decimals);\n    let value = new _bignumber.default(fee).shiftedBy(1 * this.gasDecimals);\n\n    if (tokenIn.toLocaleLowerCase() == this.provider.ZERO_ADDR) {\n      value = value.plus(amountInInt);\n    }\n\n    let tokens = [tokenIn, tokenOut];\n    let values = [amountInInt.toFixed(), amountOutInt.toFixed(), toChainId, mode];\n    updateChainBlock(toChainId);\n    return await this.provider.executeContract(this.contract, 'transferIn', value.toFixed(), [to, tokens, values], this.handleTransferIn);\n  }\n\n  async transferOut(from, token0, token1, amountIn, amountOut, fromChainId, mode, slide, inSn, signature) {\n    if (!mode) {\n      mode = 0;\n    }\n\n    let tokens = [token0, token1];\n    let values = [amountIn, amountOut, fromChainId, mode, slide, inSn];\n    return await this.provider.executeContract(this.contract, 'transferOut', 0, [from, tokens, values, signature], this.handleTransferOut);\n  }\n\n  async myTransferOut(data) {\n    if (data.process != _process.step1_success) throw 'myTransferOut: process must be step1_success';\n    if (Number(data.chainIdOut) != this.provider.chainId) throw 'myTransferOut: invalid chainId';\n    let res = await this.handleTxWrap(data.chainIdIn, data.txIn);\n    console.log('myTransferOut handleTxWrap: ', res);\n    if (!res) throw 'myTransferOut: network error';\n    if (res && res.data && res.data.status == 1) throw 'myTransferOut: already hanlded';\n    if (res && res.data && res.data.status == 0 && !res.data.signature) throw 'myTransferOut: invalid signature';\n    data = res.data;\n    return await this.transferOut(data.user, data.tokenIn, data.tokenOut, data.amountIn, data.amountOut, data.chainIdIn, data.mode, data.slide, data.inSn, data.signature);\n  }\n\n  async handleTransferIn(data) {\n    console.log('handleTransferIn:', data);\n    _switchData.process = _process.step1_pending;\n    _switchData.user = data.inputValues[0].toLowerCase();\n    _switchData.chainIdIn = Number(data.chainId);\n    _switchData.chainIdOut = Number(data.inputValues[2][2]);\n    _switchData.tokenIn = data.inputValues[1][0].toLowerCase();\n    _switchData.tokenOut = data.inputValues[1][1].toLowerCase();\n    _switchData.txIn = data.transactionHash;\n    _switchData.mode = Number(data.inputValues[2][3]);\n    _switchData.timeIn = new Date();\n    _switchData.updateTime = new Date();\n    let tokenInInfo = await (0, _ERC20Token.newERC20Token)(_switchData.chainIdIn, _switchData.tokenIn).info();\n    let tokenOutInfo = await (0, _ERC20Token.newERC20Token)(_switchData.chainIdOut, _switchData.tokenOut).info();\n    _switchData.tokenInSymbol = tokenInInfo.symbol;\n    _switchData.tokenOutSymbol = tokenOutInfo.symbol;\n    _switchData.amountIn = new _bignumber.default(data.inputValues[2][0]).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n    _switchData.amountOut = new _bignumber.default(data.inputValues[2][1]).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n\n    if (data.hasOwnProperty('status')) {\n      if (data.status) {\n        _switchData.process = _process.step1_success;\n      } else {\n        _switchData.process = _process.step1_fail;\n      }\n    }\n  }\n\n  async handleTransferOut(data) {\n    console.log('handleTransferOut:', data);\n    _switchData.process = _process.step2_pending;\n    _switchData.user = data.inputValues[0].toLowerCase();\n    _switchData.inSn = Number(data.inputValues[2][5]);\n    _switchData.chainIdIn = data.inputValues[2][2];\n    _switchData.chainIdOut = Number(data.chainId);\n    _switchData.tokenIn = data.inputValues[1][0].toLowerCase();\n    _switchData.tokenOut = data.inputValues[1][1].toLowerCase();\n    _switchData.txOut = data.transactionHash;\n    _switchData.updateTime = new Date();\n    let tokenInInfo = await (0, _ERC20Token.newERC20Token)(_switchData.chainIdIn, _switchData.tokenIn).info();\n    let tokenOutInfo = await (0, _ERC20Token.newERC20Token)(_switchData.chainIdOut, _switchData.tokenOut).info();\n    _switchData.tokenInSymbol = tokenInInfo.symbol;\n    _switchData.tokenOutSymbol = tokenOutInfo.symbol;\n    _switchData.amountIn = new _bignumber.default(data.inputValues[2][0]).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n    _switchData.amountOut = new _bignumber.default(data.inputValues[2][1]).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n    let _status = 0;\n\n    if (data.hasOwnProperty('status')) {\n      if (data.status) {\n        _switchData.timeOut = new Date();\n        _switchData.process = _process.step2_success;\n        _status = 1;\n      } else {\n        _switchData.process = _process.step2_fail;\n      }\n    }\n\n    let tableName = 'switchArcossHistory' + _switchData.user;\n    const local = localStorage.getItem(tableName);\n\n    if (local) {\n      let foundI = -1;\n      let ukey = _switchData.chainIdIn + '-' + _switchData.inSn;\n\n      _switchAcrossHistory.forEach((d, i) => {\n        if (d.ukey == ukey) {\n          foundI = i;\n          return;\n        }\n      });\n\n      if (foundI > -1) {\n        let item = { ..._switchAcrossHistory[foundI]\n        };\n        item.status = _status;\n        item.process = _switchData.process;\n        item.outSn = _switchData.outSn;\n        item.txOut = _switchData.txOut;\n        item.blockOut = _switchData.blockOut;\n        item.timeOut = new Date();\n        item.updateTime = new Date();\n\n        _switchAcrossHistory.splice(foundI, 1);\n      }\n\n      _switchAcrossHistory.unshift(item);\n\n      localStorage.setItem(tableName, JSON.stringify(_switchAcrossHistory));\n    }\n  }\n\n  resetSwitchData() {\n    _switchData = { ..._switchDefaultData\n    };\n    return _switchData;\n  }\n\n  async handleTxWrap(chainId, tx) {\n    let url = '/api/handleTx';\n\n    if ([42, 97, 256].includes(chainId)) {\n      url = '/api-test/handleTx';\n    }\n\n    return await this.handleTx(chainId, tx, url);\n  }\n\n  async handleTx(chainId, tx, url) {\n    if (!url) {\n      if ([42, 97, 256].includes(chainId)) {\n        url = 'https://switchfinance.xyz/api-test/handleTx';\n      } else {\n        url = 'https://switchfinance.xyz/api/handleTx';\n      }\n    }\n\n    let param = {\n      chainId: chainId,\n      tx: tx\n    };\n    let res = await fetch(url, {\n      method: 'post',\n      body: JSON.stringify(param),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let text = await res.text();\n    return JSON.parse(text);\n  }\n\n}\n\nexports.SwitchAcross = SwitchAcross;\n\nclass SwitchAcrossHistory extends _Base.default {\n  constructor(provider) {\n    super(provider);\n    this.envName = 'main';\n    this.process = _process;\n  }\n\n  getEnvName() {\n    if ([42, 97, 256].includes(this.provider.chainId)) {\n      return 'test';\n    }\n\n    return 'main';\n  }\n\n  initialize(chainId, account = null) {\n    console.log('SwitchAcrossHistory initialize...', this.provider.chainId);\n    super.initialize(chainId, account);\n    this.getAcrossTokens();\n    this.loadHistory();\n    let ids = getChainIds(this.provider.chainId);\n\n    for (let i = 0; i < ids.length; i++) {\n      newSwitchAcross(ids[i]).subscribe(this.handleHistory);\n    }\n  } // status, 0: pending 1:success\n\n\n  async handleHistory(log) {\n    let d = log.returnValues;\n\n    if (!isMyWallet(d.user)) {\n      return;\n    }\n\n    let tableName = 'switchArcossHistory' + d.user.toLowerCase();\n    let item = { ..._switchData\n    };\n\n    if (log.eventName == \"TransferIned\") {\n      updateSwitchCount(1);\n      item.ukey = log.chainId + '-' + d.sn;\n      item.status = 0;\n      item.process = _process.step1_success;\n      item.inSn = d.sn;\n      item.mode = Number(d.mode);\n      item.chainIdIn = Number(log.chainId);\n      item.chainIdOut = Number(d.chainId);\n      item.tokenIn = d.tokenIn.toLowerCase();\n      item.tokenOut = d.tokenOut.toLowerCase();\n      item.amountIn = d.amountIn;\n      item.amountOut = d.amountOut;\n      item.fee = d.fee;\n      item.slide = d.slide;\n      item.user = d.user.toLowerCase();\n      item.txIn = log.transactionHash;\n      item.blockIn = log.blockNumber;\n      item.timeIn = new Date();\n      item.updateTime = new Date();\n      let tokenInInfo = await (0, _ERC20Token.newERC20Token)(log.chainId, item.tokenIn).info();\n      let tokenOutInfo = await (0, _ERC20Token.newERC20Token)(d.chainId, item.tokenOut).info();\n      item.tokenInSymbol = tokenInInfo.symbol;\n      item.tokenOutSymbol = tokenOutInfo.symbol;\n      item.amountIn = new _bignumber.default(item.amountIn).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n      item.amountOut = new _bignumber.default(item.amountOut).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n      item.fee = new _bignumber.default(item.fee).shiftedBy(-18).toFixed();\n      item.slide = new _bignumber.default(item.slide).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n    } else if (log.eventName == \"TransferOuted\") {\n      updateSwitchCount(-1);\n      item.ukey = d.chainId + '-' + d.inSn;\n    } else {\n      console.error('handleHistory unknown log:', log);\n      return;\n    }\n\n    const local = localStorage.getItem(tableName);\n\n    if (local) {\n      let foundI = -1;\n\n      _switchAcrossHistory.forEach((d, i) => {\n        if (d.ukey == item.ukey) {\n          foundI = i;\n          return;\n        }\n      });\n\n      if (foundI > -1) {\n        if (log.eventName == \"TransferOuted\") {\n          item = { ..._switchAcrossHistory[foundI]\n          };\n          item.status = 1;\n          item.process = _process.step2_success;\n          item.outSn = d.sn;\n          item.txOut = log.transactionHash;\n          item.blockOut = log.blockNumber;\n          item.timeOut = new Date();\n          item.updateTime = new Date();\n\n          if (_switchData.chainIdIn == item.chainIdIn && _switchData.txIn == item.txIn) {\n            _switchData.txOut = item.txOut;\n            _switchData.timeOut = new Date();\n            _switchData.updateTime = new Date();\n            _switchData.process = _process.step2_success;\n          }\n        }\n\n        _switchAcrossHistory.splice(foundI, 1);\n      }\n\n      _switchAcrossHistory.unshift(item);\n\n      localStorage.setItem(tableName, JSON.stringify(_switchAcrossHistory));\n    } else {\n      _switchAcrossHistory.unshift(item);\n\n      localStorage.setItem(tableName, JSON.stringify(_switchAcrossHistory));\n    }\n\n    console.log('handleHistory set:', item);\n  }\n\n  getHistory() {\n    return _switchAcrossHistory;\n  }\n\n  loadHistory() {\n    console.log('loadHistory user:', this.provider.getSelectedAddress());\n\n    if (!this.provider.getSelectedAddress()) {\n      return _switchAcrossHistory;\n    }\n\n    let tableName = 'switchArcossHistory' + this.provider.getSelectedAddress().toLowerCase();\n    const local = localStorage.getItem(tableName);\n\n    if (local) {\n      cleanSwitchCount();\n\n      _switchAcrossHistory.splice(0, _switchAcrossHistory.length);\n\n      let _data = JSON.parse(local);\n\n      for (let i = 0; i < _data.length; i++) {\n        _switchAcrossHistory.push(_data[i]);\n\n        if (_data[i].status == 0) {\n          updateSwitchCount(1);\n        }\n      }\n    }\n\n    return _switchAcrossHistory;\n  }\n\n  cleanHistory() {\n    let tableName = 'switchArcossHistory' + this.provider.getSelectedAddress().toLowerCase();\n    ;\n    localStorage.removeItem(tableName);\n\n    _switchAcrossHistory.splice(0, _switchAcrossHistory.length);\n  }\n\n  getAcrossTokens() {\n    this.envName = this.getEnvName();\n    _switchAcrossTokens = _SwitchConfig.SwitchPools[this.envName];\n\n    for (let k in _switchAcrossTokens) {\n      if (_switchAcrossTokens[k].opened == true) {\n        _switchAcrossTokens[k].name = k;\n\n        for (let i = 0; i < _switchAcrossTokens[k].list.length; i++) {\n          _switchAcrossTokens[k].list[i].isTicket = _switchAcrossTokens[k].isTicket;\n        }\n      }\n    }\n\n    ;\n    return _switchAcrossTokens;\n  }\n\n}\n\nexports.SwitchAcrossHistory = SwitchAcrossHistory;\nvar _SwitchAcrossInstanes = {};\n\nfunction newSwitchAcross(chainId) {\n  if (!_SwitchAcrossInstanes.hasOwnProperty(chainId)) {\n    let provider = (0, _Web3Provider.default)(chainId);\n    _SwitchAcrossInstanes[chainId] = new SwitchAcross(provider);\n\n    _SwitchAcrossInstanes[chainId].initialize(chainId);\n\n    _SwitchAcrossInstanes[chainId].scanEventLog();\n  }\n\n  return _SwitchAcrossInstanes[chainId];\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN3aXRjaEFjcm9zcy5qcyJdLCJuYW1lcyI6WyJhc2xlZXAiLCJtcyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsImdldENoYWluSWRzIiwiY2hhaW5JZCIsImluY2x1ZGVzIiwiU3dpdGNoQ2hhaW5JZHMiLCJ0ZXN0IiwibWFpbiIsIl9zd2l0Y2hBY3Jvc3NUb2tlbnMiLCJfc3dpdGNoQ291bnQiLCJfc3dpdGNoQWNyb3NzSGlzdG9yeSIsIl9wcm9jZXNzIiwic3RlcDFfcGVuZGluZyIsInN0ZXAxX3N1Y2Nlc3MiLCJzdGVwMV9mYWlsIiwic3RlcDJfcGVuZGluZyIsInN0ZXAyX3N1Y2Nlc3MiLCJzdGVwMl9mYWlsIiwiX3N3aXRjaERlZmF1bHREYXRhIiwiRGF0ZSIsIl9zd2l0Y2hEYXRhIiwibG9hZFN3aXRjaENvdW50IiwicmVzIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIk51bWJlciIsImNsZWFuU3dpdGNoQ291bnQiLCJzZXRJdGVtIiwidXBkYXRlU3dpdGNoQ291bnQiLCJudW0iLCJpc015V2FsbGV0IiwiX3VzZXIiLCJsb2NhbCIsIndhbGxldHMiLCJKU09OIiwicGFyc2UiLCJ3IiwiY29uc29sZSIsImxvZyIsInRvTG93ZXJDYXNlIiwiaXNUaWNrZXQiLCJfdG9rZW4iLCJrIiwib3BlbmVkIiwiaSIsImxpc3QiLCJsZW5ndGgiLCJ0b2tlbkFkZHJlc3MiLCJ1cGRhdGVDaGFpbkJsb2NrIiwicHJvdmlkZXIiLCJnZXRCbG9ja051bWJlciIsInRoZW4iLCJnZXRDaGFpbkJsb2NrIiwiU3dpdGNoQWNyb3NzIiwiQmFzZUJ5TmFtZSIsImNvbnN0cnVjdG9yIiwiU3dpdGNoQWNyb3NzQUJJIiwiZ2FzRGVjaW1hbHMiLCJ0YXJnZXRUb2tlbnMiLCJzdWJzY3JpYmVzIiwic3Vic2NyaXB0aW9ucyIsImN1cnJlbnRCbG9jayIsInByb2Nlc3MiLCJpbml0aWFsaXplIiwiYWNjb3VudCIsImluaXRBZnRlciIsImluaXRTdWJzY3JpYmUiLCJzdWJzY3JpcHRpb24iLCJ3ZWIzIiwiZXRoIiwic3Vic2NyaWJlIiwiZnJvbUJsb2NrIiwiYWRkcmVzcyIsImVycm9yIiwicmVzdWx0IiwiZXZlbnRMb2ciLCJmaW5kRXZlbnRPbmVMb2ciLCJmb3JFYWNoIiwiY2IiLCJ3YXJuIiwicHVzaCIsInNjYW5FdmVudExvZyIsImxhdGVzdEJsb2NrTnVtYmVyIiwiZSIsInRvQmxvY2siLCJNYXRoIiwibWluIiwicmVjb3JkcyIsImNvbnRyYWN0IiwiZ2V0UGFzdEV2ZW50cyIsIk9iamVjdCIsImtleXMiLCJldmVudE5hbWUiLCJibG9ja051bWJlciIsIkFycmF5IiwiaXNBcnJheSIsImxvZ3MiLCJ3ZWIzVXRpbCIsInBhcnNlRXZlbnRPbmVMb2ciLCJ1bnN1YnNjcmliZSIsInN1Y2Nlc3MiLCJjbGVhbiIsImdldFRva2VuSW5mbyIsInRva2VuIiwidG9rZW5JbnMiLCJFUkMyMFRva2VuIiwiaW5mbyIsImdldFRva2VuT3V0SW5mbyIsInRva2VuSW4iLCJ0b0NoYWluSWQiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsIm1ldGhvZHMiLCJjYWxsIiwiaXNaZXJvQWRkcmVzcyIsInRva2VuT3V0IiwiZ2V0U291cmNlVG9rZW4iLCJzb3VyY2VUb2tlbnMiLCJzb3VyY2UiLCJzeW1ib2wiLCJpdGVyYXRlVG9rZW5zIiwic3RhcnQiLCJlbmQiLCJjb3VudCIsImNvdW50VG9rZW4iLCJkYXRhIiwidG9rZW5zIiwiZCIsInRhcmdldHMiLCJnZXRUYXJnZXRUb2tlbnNGb3JTb3VyY2UiLCJnZXRUYXJnZXRUb2tlbiIsInRhcmdldCIsInRva2VuSW5mbyIsImNoYWluSWRzIiwiZ2V0SW5PcmRlcnMiLCJzbiIsImdldE91dE9yZGVycyIsInF1ZXJ5V2l0aGRyYXciLCJ2YWx1ZSIsInRvdGFsU2xpZGVPZlRva2VuIiwiZ2V0T3V0SW5mbyIsImFtb3VudEluIiwibW9kZSIsInRva2VuSW5JbmZvIiwiYW1vdW50SW5TdHIiLCJCaWdOdW1iZXIiLCJzaGlmdGVkQnkiLCJkZWNpbWFscyIsInRvRml4ZWQiLCJhbW91bnRPdXQiLCJ0b2tlbk91dEluZm8iLCJzbGlkZSIsImZlZSIsImluTGltaXQiLCJvdXRMaW1pdCIsInRyZWFzdXJlQmFsYW5jZSIsImd0IiwiZ2V0SW5JbmZvIiwiYW1vdW50T3V0U3RyIiwidHJhbnNmZXJJbiIsInRvIiwiYW1vdW50SW5JbnQiLCJhbW91bnRPdXRJbnQiLCJ0b0xvY2FsZUxvd2VyQ2FzZSIsIlpFUk9fQUREUiIsInBsdXMiLCJ2YWx1ZXMiLCJleGVjdXRlQ29udHJhY3QiLCJoYW5kbGVUcmFuc2ZlckluIiwidHJhbnNmZXJPdXQiLCJmcm9tIiwidG9rZW4wIiwidG9rZW4xIiwiZnJvbUNoYWluSWQiLCJpblNuIiwic2lnbmF0dXJlIiwiaGFuZGxlVHJhbnNmZXJPdXQiLCJteVRyYW5zZmVyT3V0IiwiY2hhaW5JZE91dCIsImhhbmRsZVR4V3JhcCIsImNoYWluSWRJbiIsInR4SW4iLCJzdGF0dXMiLCJ1c2VyIiwiaW5wdXRWYWx1ZXMiLCJ0cmFuc2FjdGlvbkhhc2giLCJ0aW1lSW4iLCJ1cGRhdGVUaW1lIiwidG9rZW5JblN5bWJvbCIsInRva2VuT3V0U3ltYm9sIiwidHhPdXQiLCJfc3RhdHVzIiwidGltZU91dCIsInRhYmxlTmFtZSIsImZvdW5kSSIsInVrZXkiLCJpdGVtIiwib3V0U24iLCJibG9ja091dCIsInNwbGljZSIsInVuc2hpZnQiLCJzdHJpbmdpZnkiLCJyZXNldFN3aXRjaERhdGEiLCJ0eCIsInVybCIsImhhbmRsZVR4IiwicGFyYW0iLCJmZXRjaCIsIm1ldGhvZCIsImJvZHkiLCJoZWFkZXJzIiwidGV4dCIsIlN3aXRjaEFjcm9zc0hpc3RvcnkiLCJCYXNlIiwiZW52TmFtZSIsImdldEVudk5hbWUiLCJnZXRBY3Jvc3NUb2tlbnMiLCJsb2FkSGlzdG9yeSIsImlkcyIsIm5ld1N3aXRjaEFjcm9zcyIsImhhbmRsZUhpc3RvcnkiLCJyZXR1cm5WYWx1ZXMiLCJibG9ja0luIiwiZ2V0SGlzdG9yeSIsImdldFNlbGVjdGVkQWRkcmVzcyIsIl9kYXRhIiwiY2xlYW5IaXN0b3J5IiwicmVtb3ZlSXRlbSIsIlN3aXRjaFBvb2xzIiwibmFtZSIsIl9Td2l0Y2hBY3Jvc3NJbnN0YW5lcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLFNBQVNBLE1BQVQsQ0FBZ0JDLEVBQWhCLEVBQW9CO0FBQ2hCLFNBQU8sSUFBSUMsT0FBSixDQUFZQyxPQUFPLElBQUlDLFVBQVUsQ0FBQ0QsT0FBRCxFQUFVRixFQUFWLENBQWpDLENBQVA7QUFDSDs7QUFFRCxTQUFTSSxXQUFULENBQXFCQyxPQUFyQixFQUE4QjtBQUMxQixNQUFHLENBQUMsRUFBRCxFQUFJLEVBQUosRUFBTyxHQUFQLEVBQVlDLFFBQVosQ0FBcUJELE9BQXJCLENBQUgsRUFBa0M7QUFDOUIsV0FBT0UsNkJBQWVDLElBQXRCO0FBQ0g7O0FBQ0QsU0FBT0QsNkJBQWVFLElBQXRCO0FBQ0g7O0FBRUQsSUFBSUMsbUJBQW1CLEdBQUcsRUFBMUI7QUFDQSxJQUFJQyxZQUFZLEdBQUcsQ0FBbkI7QUFDQSxJQUFJQyxvQkFBb0IsR0FBRyxFQUEzQjtBQUNBLElBQUlDLFFBQVEsR0FBRztBQUNYQyxFQUFBQSxhQUFhLEVBQUUsRUFESjtBQUVYQyxFQUFBQSxhQUFhLEVBQUUsRUFGSjtBQUdYQyxFQUFBQSxVQUFVLEVBQUUsRUFIRDtBQUlYQyxFQUFBQSxhQUFhLEVBQUUsRUFKSjtBQUtYQyxFQUFBQSxhQUFhLEVBQUUsRUFMSjtBQU1YQyxFQUFBQSxVQUFVLEVBQUU7QUFORCxDQUFmO0FBU0EsTUFBTUMsa0JBQWtCLEdBQUc7QUFDdkIsVUFBUSxnQkFEZTtBQUV2QixhQUFXUCxRQUFRLENBQUNDLGFBRkc7QUFHdkIsWUFBVSxDQUhhO0FBSXZCLFVBQVEsQ0FKZTtBQUt2QixXQUFTLENBTGM7QUFNdkIsVUFBUSxDQU5lO0FBT3ZCLGVBQWEsQ0FQVTtBQVF2QixhQUFXLEVBUlk7QUFTdkIsbUJBQWlC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b3Avd29ya1NwYWNlL2RleC9kZW1heC1icmlkZ2Utc2RrL3NyYy9zZGsvbW9kZWwvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN3aXRjaEFjcm9zc0FCSSBmcm9tICcuLi9hYmkvU3dpdGNoQWNyb3NzLmpzb24nO1xuaW1wb3J0IEJpZ051bWJlciBmcm9tIFwiYmlnbnVtYmVyLmpzXCJcbmltcG9ydCBCYXNlQnlOYW1lIGZyb20gJy4vQmFzZUJ5TmFtZSc7XG5pbXBvcnQgQmFzZSBmcm9tICcuL0Jhc2UnO1xuaW1wb3J0IHsgRVJDMjBUb2tlbiwgbmV3RVJDMjBUb2tlbiB9IGZyb20gJy4vRVJDMjBUb2tlbi5qcyc7XG5pbXBvcnQgV2ViM1Byb3ZpZGVyIGZyb20gJy4uL1dlYjNQcm92aWRlci5qcyc7XG5pbXBvcnQgd2ViM1V0aWwgZnJvbSAnLi4vV2ViM1V0aWwuanMnXG5pbXBvcnQgeyBTd2l0Y2hDaGFpbklkcywgU3dpdGNoUG9vbHMgfSBmcm9tICcuLi9jb25maWcvU3dpdGNoQ29uZmlnLmpzJztcbmltcG9ydCB7IG5ld1N3aXRjaFRyZWFzdXJ5IH0gZnJvbSAnLi9Td2l0Y2hUcmVhc3VyeS5qcyc7XG5cbmZ1bmN0aW9uIGFzbGVlcChtcykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKVxufVxuXG5mdW5jdGlvbiBnZXRDaGFpbklkcyhjaGFpbklkKSB7XG4gICAgaWYoWzQyLDk3LDI1Nl0uaW5jbHVkZXMoY2hhaW5JZCkpIHtcbiAgICAgICAgcmV0dXJuIFN3aXRjaENoYWluSWRzLnRlc3Q7XG4gICAgfVxuICAgIHJldHVybiBTd2l0Y2hDaGFpbklkcy5tYWluO1xufVxuXG52YXIgX3N3aXRjaEFjcm9zc1Rva2VucyA9IHt9O1xudmFyIF9zd2l0Y2hDb3VudCA9IDA7XG52YXIgX3N3aXRjaEFjcm9zc0hpc3RvcnkgPSBbXTtcbnZhciBfcHJvY2VzcyA9IHtcbiAgICBzdGVwMV9wZW5kaW5nOiAxMCxcbiAgICBzdGVwMV9zdWNjZXNzOiAxMSxcbiAgICBzdGVwMV9mYWlsOiAxMixcbiAgICBzdGVwMl9wZW5kaW5nOiAyMCxcbiAgICBzdGVwMl9zdWNjZXNzOiAyMSxcbiAgICBzdGVwMl9mYWlsOiAyMixcbn1cblxuY29uc3QgX3N3aXRjaERlZmF1bHREYXRhID0ge1xuICAgIFwidWtleVwiOiBcImNoYWluSWRJbi1pblNuXCIsXG4gICAgXCJwcm9jZXNzXCI6IF9wcm9jZXNzLnN0ZXAxX3BlbmRpbmcsXG4gICAgXCJzdGF0dXNcIjogMCxcbiAgICBcImluU25cIjogMCxcbiAgICBcIm91dFNuXCI6IDAsXG4gICAgXCJtb2RlXCI6IDAsXG4gICAgXCJjaGFpbklkSW5cIjogMCxcbiAgICBcInRva2VuSW5cIjogXCJcIixcbiAgICBcInRva2VuSW5TeW1ib2xcIjogXCJcIixcbiAgICBcImNoYWluSWRPdXRcIjogMCxcbiAgICBcInRva2VuT3V0XCI6IFwiXCIsXG4gICAgXCJ0b2tlbk91dFN5bWJvbFwiOiBcIlwiLFxuICAgIFwiYW1vdW50SW5cIjogXCIwXCIsXG4gICAgXCJhbW91bnRPdXRcIjogXCIwXCIsXG4gICAgXCJmZWVcIjogXCIwXCIsXG4gICAgXCJzbGlkZVwiOiBcIjBcIixcbiAgICBcInVzZXJcIjogXCJcIixcbiAgICBcInNpZ25hdHVyZVwiOiBcIlwiLFxuICAgIFwidHhJblwiOiBcIlwiLFxuICAgIFwidHhPdXRcIjogXCJcIixcbiAgICBcImJsb2NrSW5cIjogMCxcbiAgICBcImJsb2NrT3V0XCI6IDAsXG4gICAgXCJ0aW1lSW5cIjogbnVsbCxcbiAgICBcInRpbWVPdXRcIjogbnVsbCxcbiAgICBcInVwZGF0ZVRpbWVcIjogbmV3IERhdGUoKSxcbn07XG52YXIgX3N3aXRjaERhdGEgPSB7Li4uX3N3aXRjaERlZmF1bHREYXRhfTtcblxuZnVuY3Rpb24gbG9hZFN3aXRjaENvdW50KCkge1xuICAgIGxldCByZXMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnX3N3aXRjaENvdW50Jyk7XG4gICAgaWYocmVzKSB7XG4gICAgICAgIF9zd2l0Y2hDb3VudCA9IE51bWJlcihyZXMpO1xuICAgICAgICBpZihfc3dpdGNoQ291bnQgPDApIHtcbiAgICAgICAgICAgIF9zd2l0Y2hDb3VudCA9IDA7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmZ1bmN0aW9uIGNsZWFuU3dpdGNoQ291bnQoKSB7XG4gICAgX3N3aXRjaENvdW50ID0gMDtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnX3N3aXRjaENvdW50JywgX3N3aXRjaENvdW50KycnKTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlU3dpdGNoQ291bnQobnVtKSB7XG4gICAgX3N3aXRjaENvdW50ICs9IG51bTtcbiAgICBpZihfc3dpdGNoQ291bnQgPDApIHtcbiAgICAgICAgX3N3aXRjaENvdW50ID0gMDtcbiAgICB9XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ19zd2l0Y2hDb3VudCcsIF9zd2l0Y2hDb3VudCsnJyk7XG59XG5cbmxvYWRTd2l0Y2hDb3VudCgpO1xuXG5mdW5jdGlvbiBpc015V2FsbGV0KF91c2VyKSB7XG4gICAgY29uc3QgbG9jYWwgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbXlXYWxsZXRzJyk7XG4gICAgaWYgKGxvY2FsKSB7XG4gICAgICAgIGNvbnN0IHdhbGxldHMgPSBKU09OLnBhcnNlKGxvY2FsKTtcbiAgICAgICAgZm9yKGxldCB3IGluIHdhbGxldHMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdpc015d2FsbGV0OicsIHcsIF91c2VyKTtcbiAgICAgICAgICAgIGlmKHcudG9Mb3dlckNhc2UoKSA9PSBfdXNlci50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBpc1RpY2tldChfdG9rZW4sIGNoYWluSWQpIHtcbiAgICBmb3IgKGxldCBrIGluIF9zd2l0Y2hBY3Jvc3NUb2tlbnMpIHtcbiAgICAgICAgaWYgKF9zd2l0Y2hBY3Jvc3NUb2tlbnNba10ub3BlbmVkID09IHRydWUpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGk9MDsgaTxfc3dpdGNoQWNyb3NzVG9rZW5zW2tdLmxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZihfc3dpdGNoQWNyb3NzVG9rZW5zW2tdLmxpc3RbaV0udG9rZW5BZGRyZXNzLnRvTG93ZXJDYXNlKCkgPT0gX3Rva2VuLnRvTG93ZXJDYXNlKCkgJiYgX3N3aXRjaEFjcm9zc1Rva2Vuc1trXS5saXN0W2ldLmNoYWluSWQgPT0gY2hhaW5JZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3N3aXRjaEFjcm9zc1Rva2Vuc1trXS5saXN0W2ldLmlzVGlja2V0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUNoYWluQmxvY2soY2hhaW5JZCkge1xuICAgIGxldCBwcm92aWRlciA9IFdlYjNQcm92aWRlcihjaGFpbklkKTtcbiAgICBwcm92aWRlci5nZXRCbG9ja051bWJlcigpLnRoZW4ocmVzPT4ge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnX3N3aXRjaEJsb2NrTnVtYmVyJytjaGFpbklkLCByZXMrJycpO1xuICAgIH0pXG59XG5cbmZ1bmN0aW9uIGdldENoYWluQmxvY2soY2hhaW5JZCkge1xuICAgIGlmKF9zd2l0Y2hDb3VudCA+IDApIHtcbiAgICAgICAgbGV0IHJlcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdfc3dpdGNoQmxvY2tOdW1iZXInK2NoYWluSWQpO1xuICAgICAgICByZXR1cm4gTnVtYmVyKHJlcyk7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuXG5jbGFzcyBTd2l0Y2hBY3Jvc3MgZXh0ZW5kcyBCYXNlQnlOYW1lIHtcbiAgICBjb25zdHJ1Y3Rvcihwcm92aWRlcikge1xuICAgICAgICBzdXBlcihwcm92aWRlciwgU3dpdGNoQWNyb3NzQUJJLCAnU3dpdGNoQWNyb3NzJyk7XG5cbiAgICAgICAgdGhpcy5nYXNEZWNpbWFscyA9IDE4O1xuICAgICAgICB0aGlzLnRhcmdldFRva2VucyA9IHt9O1xuICAgICAgICB0aGlzLnN1YnNjcmliZXMgPSBbXTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW107XG4gICAgICAgIHRoaXMuY3VycmVudEJsb2NrID0gMDtcbiAgICAgICAgdGhpcy5wcm9jZXNzID0gX3Byb2Nlc3M7XG4gICAgfVxuXG4gICAgaW5pdGlhbGl6ZShjaGFpbklkLCBhY2NvdW50PW51bGwpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1N3aXRjaEFjcm9zcyBpbml0aWFsaXplLi4uJywgdGhpcy5wcm92aWRlci5jaGFpbklkKTtcbiAgICAgICAgc3VwZXIuaW5pdGlhbGl6ZShjaGFpbklkLCBhY2NvdW50KTtcbiAgICB9XG5cbiAgICBpbml0QWZ0ZXIoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTd2l0Y2hBY3Jvc3MgaW5pdEFmdGVyLi4uJywgdGhpcy5wcm92aWRlci5jaGFpbklkLCB0aGlzLnN1YnNjcmliZXMubGVuZ3RoKTtcbiAgICAgICAgdGhpcy5pbml0U3Vic2NyaWJlKCk7XG4gICAgfVxuXG4gICAgaW5pdFN1YnNjcmliZSgpIHtcbiAgICAgICAgbGV0IHN1YnNjcmlwdGlvbiA9IHRoaXMucHJvdmlkZXIud2ViMy5ldGguc3Vic2NyaWJlKCdsb2dzJywge1xuICAgICAgICAgICAgZnJvbUJsb2NrOiAnbGF0ZXN0JyxcbiAgICAgICAgICAgIGFkZHJlc3M6IHRoaXMuYWRkcmVzc1xuICAgICAgICB9LCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFlcnJvcikge1xuICAgICAgICAgICAgICAgIGxldCBldmVudExvZyA9IHRoaXMuZmluZEV2ZW50T25lTG9nKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgZXZlbnRMb2cuY2hhaW5JZCA9IHRoaXMucHJvdmlkZXIuY2hhaW5JZDtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3Vic2NyaWJlcyBsZW5ndGg6JywgdGhpcy5wcm92aWRlci5jaGFpbklkLCB0aGlzLnN1YnNjcmliZXMubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnN1YnNjcmliZXMuZm9yRWFjaCgoY2IpPT57XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTd2l0Y2hBY3Jvc3Mgc3Vic2NyaWJlIHN1YnNjcmliZScsIHRoaXMucHJvdmlkZXIuY2hhaW5JZCwgZXZlbnRMb2cpO1xuICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmFkZHJlc3MudG9Mb3dlckNhc2UoKSA9PSBldmVudExvZy5hZGRyZXNzLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNiKGV2ZW50TG9nKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignU3dpdGNoQWNyb3NzIHN1YnNjcmliZSB1bmtub3duIGFkZHJlc3MnLCB0aGlzLnByb3ZpZGVyLmNoYWluSWQsIGV2ZW50TG9nLmFkZHJlc3MpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1N3aXRjaEFjcm9zcyBzdWJzY3JpYmUgZXJyb3I6JywgdGhpcy5wcm92aWRlci5jaGFpbklkLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMucHVzaChzdWJzY3JpcHRpb24pO1xuICAgIH1cblxuICAgIGFzeW5jIHNjYW5FdmVudExvZygpIHtcbiAgICAgICAgaWYodGhpcy5jdXJyZW50QmxvY2sgPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50QmxvY2sgPSBnZXRDaGFpbkJsb2NrKHRoaXMucHJvdmlkZXIuY2hhaW5JZCk7XG4gICAgICAgICAgICBpZih0aGlzLmN1cnJlbnRCbG9jayA9PSAwKSB0aGlzLmN1cnJlbnRCbG9jayA9IGF3YWl0IHRoaXMucHJvdmlkZXIuZ2V0QmxvY2tOdW1iZXIoKTtcbiAgICAgICAgfVxuICAgICAgICBpZihfc3dpdGNoQ291bnQgPD0wKSB7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnU3dpdGNoQWNyb3NzIHNjYW5FdmVudExvZyBzaWtwJyk7XG4gICAgICAgICAgICBhd2FpdCBhc2xlZXAoMzAwMCk7XG4gICAgICAgICAgICB0aGlzLnNjYW5FdmVudExvZygpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBsYXRlc3RCbG9ja051bWJlciA9IHRoaXMuY3VycmVudEJsb2NrO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGF0ZXN0QmxvY2tOdW1iZXIgPSBhd2FpdCB0aGlzLnByb3ZpZGVyLmdldEJsb2NrTnVtYmVyKCk7XG4gICAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignU3dpdGNoQWNyb3NzIHNjYW4gZXhjZXB0OicsIGUpO1xuICAgICAgICAgICAgYXdhaXQgYXNsZWVwKDMwMDApO1xuICAgICAgICAgICAgdGhpcy5zY2FuRXZlbnRMb2coKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgdG9CbG9jayA9IE1hdGgubWluKHRoaXMuY3VycmVudEJsb2NrKzEwMDAsIGxhdGVzdEJsb2NrTnVtYmVyKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ1N3aXRjaEFjcm9zcyBzY2FuRXZlbnRMb2cuLi4nLCB0aGlzLnByb3ZpZGVyLmNoYWluSWQsIHRoaXMuY3VycmVudEJsb2NrLCB0b0Jsb2NrKTtcbiAgICAgICAgaWYodG9CbG9jayA+IHRoaXMuY3VycmVudEJsb2NrKSB7XG4gICAgICAgICAgICBsZXQgcmVjb3JkcyA9IG51bGw7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTd2l0Y2hBY3Jvc3MgZ2V0UGFzdEV2ZW50cy4uLicsIHRoaXMucHJvdmlkZXIuY2hhaW5JZCwgdGhpcy5jdXJyZW50QmxvY2ssIHRvQmxvY2spO1xuICAgICAgICAgICAgICAgIHJlY29yZHMgPSBhd2FpdCB0aGlzLmNvbnRyYWN0LmdldFBhc3RFdmVudHMoXCJUcmFuc2Zlck91dGVkXCIsIHtmcm9tQmxvY2s6IHRoaXMuY3VycmVudEJsb2NrLCB0b0Jsb2NrOiB0b0Jsb2NrfSk7XG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ1N3aXRjaEFjcm9zcyBnZXRQYXN0RXZlbnRzIHJlY29yZHM6JywgdGhpcy5wcm92aWRlci5jaGFpbklkLCByZWNvcmRzKTtcbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhyZWNvcmRzKS5mb3JFYWNoKGFzeW5jIChpKT0+e1xuICAgICAgICAgICAgICAgICAgICBsZXQgZXZlbnRMb2cgPSB7Li4ucmVjb3Jkc1tpXX07XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50TG9nLmNoYWluSWQgPSB0aGlzLnByb3ZpZGVyLmNoYWluSWQ7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50TG9nLmV2ZW50TmFtZSA9IFwiVHJhbnNmZXJPdXRlZFwiO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZ2V0UGFzdEV2ZW50cyBldmVudExvZzonLCB0aGlzLnN1YnNjcmliZXMubGVuZ3RoLCBldmVudExvZyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3Vic2NyaWJlcy5mb3JFYWNoKChjYik9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIGNiKGV2ZW50TG9nKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEJsb2NrID0gTnVtYmVyKGV2ZW50TG9nLmJsb2NrTnVtYmVyKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEJsb2NrID0gdG9CbG9jaztcbiAgICAgICAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1N3aXRjaEFjcm9zcyBzY2FuIGdldFRyYW5zZmVyT3V0ZWRFdmVudHM6JywgdGhpcy5wcm92aWRlci5jaGFpbklkLCB0eXBlb2YocmVjb3JkcyksIEFycmF5LmlzQXJyYXkocmVjb3JkcyksIHJlY29yZHMsIGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGF3YWl0IGFzbGVlcCgzMDAwKTtcbiAgICAgICAgdGhpcy5zY2FuRXZlbnRMb2coKTtcbiAgICB9XG5cbiAgICBmaW5kRXZlbnRPbmVMb2cobG9ncykge1xuICAgICAgICByZXR1cm4gd2ViM1V0aWwucGFyc2VFdmVudE9uZUxvZyh0aGlzLnByb3ZpZGVyLndlYjMsIFN3aXRjaEFjcm9zc0FCSSwgbG9ncywgJ1RyYW5zZmVySW5lZCcpO1xuICAgIH1cblxuICAgIHN1YnNjcmliZShjYikge1xuICAgICAgICBpZighdGhpcy5zdWJzY3JpYmVzLmluY2x1ZGVzKGNiKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1N3aXRjaEFjcm9zc0luc3RhbmNlIGluaXRTdWJzY3JpYmUgc3Vic2NyaWJlIGNoYWluSWQ6JywgdGhpcy5wcm92aWRlci5jaGFpbklkKTtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaWJlcy5wdXNoKGNiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVuc3Vic2NyaWJlKCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuZm9yRWFjaCgoc3Vic2NyaXB0aW9uKT0+e1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKGZ1bmN0aW9uKGVycm9yLCBzdWNjZXNzKXtcbiAgICAgICAgICAgICAgICBpZihzdWNjZXNzKVxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IHVuc3Vic2NyaWJlZCEnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNsZWFuKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnY2xlYW4uLi4nKTtcbiAgICAgICAgdGhpcy51bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIGFzeW5jIGdldFRva2VuSW5mbyh0b2tlbikge1xuICAgICAgICB0aGlzLnRva2VuSW5zID0gbmV3IEVSQzIwVG9rZW4odGhpcy5wcm92aWRlciwgdG9rZW4pO1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy50b2tlbklucy5pbmZvKCk7XG4gICAgfVxuXG4gICAgYXN5bmMgZ2V0VG9rZW5PdXRJbmZvKHRva2VuSW4sIHRvQ2hhaW5JZCkge1xuICAgICAgICBsZXQga2V5ID0gdG9rZW5Jbi50b0xvd2VyQ2FzZSgpKydfJyt0b0NoYWluSWQ7XG4gICAgICAgIGxldCByZXMgPSBudWxsO1xuICAgICAgICBpZighdGhpcy50YXJnZXRUb2tlbnMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgcmVzID0gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLnRhcmdldFRva2Vucyh0b2tlbkluLCB0b0NoYWluSWQpLmNhbGwoKTtcbiAgICAgICAgICAgIGlmKCF0aGlzLnByb3ZpZGVyLmlzWmVyb0FkZHJlc3MocmVzLnRva2VuT3V0KSkge1xuICAgICAgICAgICAgICAgIHRoaXMudGFyZ2V0VG9rZW5zW2tleV0gPSByZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXMgPSB0aGlzLnRhcmdldFRva2Vuc1trZXldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuXG4gICAgYXN5bmMgZ2V0U291cmNlVG9rZW4odG9rZW5Jbikge1xuICAgICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLnNvdXJjZVRva2Vucyh0b2tlbkluKS5jYWxsKCk7XG4gICAgICAgIGxldCBzb3VyY2UgPSB7Li4ucmVzfTtcbiAgICAgICAgc291cmNlLnRva2VuSW4gPSB0b2tlbkluO1xuICAgICAgICBzb3VyY2Uuc3ltYm9sID0gKGF3YWl0IHRoaXMuZ2V0VG9rZW5JbmZvKHRva2VuSW4pKS5zeW1ib2w7XG4gICAgICAgIHJldHVybiBzb3VyY2U7XG4gICAgfVxuXG4gICAgYXN5bmMgaXRlcmF0ZVRva2VucyhzdGFydCwgZW5kKSB7XG4gICAgICAgIGxldCBjb3VudCA9IGF3YWl0IHRoaXMuY29udHJhY3QubWV0aG9kcy5jb3VudFRva2VuKCkuY2FsbCgpO1xuICAgICAgICBjb3VudCA9IE51bWJlcihjb3VudCk7XG4gICAgICAgIGlmKGVuZCA+IGNvdW50KSB7XG4gICAgICAgICAgICBlbmQgPSBjb3VudDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZGF0YSA9IFtdO1xuICAgICAgICBmb3IobGV0IGkgPSBzdGFydDsgaSA8IGVuZDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgdG9rZW4gPSBhd2FpdCB0aGlzLmNvbnRyYWN0Lm1ldGhvZHMudG9rZW5zKGkpLmNhbGwoKTtcbiAgICAgICAgICAgIGxldCBkID0gYXdhaXQgdGhpcy5nZXRTb3VyY2VUb2tlbih0b2tlbik7XG4gICAgICAgICAgICBkLnRhcmdldHMgPSBhd2FpdCB0aGlzLmdldFRhcmdldFRva2Vuc0ZvclNvdXJjZSh0b2tlbik7XG4gICAgICAgICAgICBkYXRhLnB1c2goZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuXG4gICAgYXN5bmMgZ2V0VGFyZ2V0VG9rZW4odG9rZW5JbiwgY2hhaW5JZCkge1xuICAgICAgICBsZXQga2V5ID0gdG9rZW5Jbi50b0xvd2VyQ2FzZSgpKydfJytjaGFpbklkO1xuICAgICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLnRhcmdldFRva2Vucyh0b2tlbkluLCBjaGFpbklkKS5jYWxsKCk7XG4gICAgICAgIGxldCB0YXJnZXQgPSB7Li4ucmVzfTtcbiAgICAgICAgdGFyZ2V0LnN5bWJvbCA9ICcnO1xuICAgICAgICBpZighdGhpcy5wcm92aWRlci5pc1plcm9BZGRyZXNzKHRhcmdldC50b2tlbk91dCkpIHtcbiAgICAgICAgICAgIGxldCB0b2tlbklucyA9IG5ld0VSQzIwVG9rZW4oY2hhaW5JZCwgdGFyZ2V0LnRva2VuT3V0KTtcbiAgICAgICAgICAgIGxldCB0b2tlbkluZm8gPSBhd2FpdCB0b2tlbklucy5pbmZvKCk7XG4gICAgICAgICAgICB0YXJnZXQuY2hhaW5JZCA9IGNoYWluSWQ7XG4gICAgICAgICAgICB0YXJnZXQuc3ltYm9sID0gdG9rZW5JbmZvLnN5bWJvbDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRhcmdldFRva2Vuc1trZXldID0gdGFyZ2V0O1xuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cblxuICAgIGFzeW5jIGdldFRhcmdldFRva2Vuc0ZvclNvdXJjZSh0b2tlbkluKSB7XG4gICAgICAgIGxldCBjaGFpbklkcyA9IGdldENoYWluSWRzKHRoaXMucHJvdmlkZXIuY2hhaW5JZCk7XG4gICAgICAgIGxldCBkYXRhID0gW107XG4gICAgICAgIGZvcihsZXQgY2hhaW5JZCBvZiBjaGFpbklkcykge1xuICAgICAgICAgICAgaWYoY2hhaW5JZCA9PSB0aGlzLnByb3ZpZGVyLmNoYWluSWQpIGNvbnRpbnVlO1xuICAgICAgICAgICAgbGV0IGQgPSBhd2FpdCB0aGlzLmdldFRhcmdldFRva2VuKHRva2VuSW4sIGNoYWluSWQpO1xuICAgICAgICAgICAgZGF0YS5wdXNoKGQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cblxuICAgIGFzeW5jIGdldEluT3JkZXJzKHNuKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmNvbnRyYWN0Lm1ldGhvZHMuZ2V0SW5PcmRlcnMoc24pLmNhbGwoKTtcbiAgICB9XG5cbiAgICBhc3luYyBnZXRPdXRPcmRlcnMoc24pIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuY29udHJhY3QubWV0aG9kcy5nZXRPdXRPcmRlcnMoc24pLmNhbGwoKTtcbiAgICB9XG5cbiAgICBhc3luYyBxdWVyeVdpdGhkcmF3KHRva2VuLCB2YWx1ZSkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLnF1ZXJ5V2l0aGRyYXcodG9rZW4sIHZhbHVlKS5jYWxsKCk7XG4gICAgfVxuXG4gICAgYXN5bmMgdG90YWxTbGlkZU9mVG9rZW4odG9rZW4pIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuY29udHJhY3QubWV0aG9kcy50b3RhbFNsaWRlT2ZUb2tlbih0b2tlbikuY2FsbCgpO1xuICAgIH1cblxuICAgIGFzeW5jIGdldE91dEluZm8odG9rZW5JbiwgdG9DaGFpbklkLCBhbW91bnRJbiwgbW9kZSkge1xuICAgICAgICBpZiAoIW1vZGUpIHtcbiAgICAgICAgICAgIG1vZGUgPSAyXG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coJ2dldE91dEluZm86JywgdG9rZW5JbiwgdG9DaGFpbklkLCBhbW91bnRJbiwgbW9kZSk7XG4gICAgICAgIGxldCB0b2tlbkluSW5mbyA9IGF3YWl0IHRoaXMuZ2V0VG9rZW5JbmZvKHRva2VuSW4pXG4gICAgICAgIGxldCBhbW91bnRJblN0ciA9IG5ldyBCaWdOdW1iZXIoYW1vdW50SW4pLnNoaWZ0ZWRCeSgxICogdG9rZW5JbkluZm8uZGVjaW1hbHMpLnRvRml4ZWQoKTtcbiAgICAgICAgbGV0IHJlcyA9IGF3YWl0IHRoaXMuY29udHJhY3QubWV0aG9kcy5nZXRPdXRJbmZvKHRva2VuSW4sIHRvQ2hhaW5JZCwgYW1vdW50SW5TdHIsIG1vZGUpLmNhbGwoKTtcbiAgICAgICAgaWYodGhpcy5wcm92aWRlci5pc1plcm9BZGRyZXNzKHJlcy50b2tlbk91dCkpIHtcbiAgICAgICAgICAgIHJlcy5hbW91bnRPdXQgPSAnMCc7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHRva2VuT3V0SW5mbyA9IGF3YWl0IHRoaXMuZ2V0VG9rZW5PdXRJbmZvKHRva2VuSW4sIHRvQ2hhaW5JZCk7XG4gICAgICAgIGxldCBkID0gey4uLnJlc307XG4gICAgICAgIGQuYW1vdW50SW4gPSBhbW91bnRJbjtcbiAgICAgICAgZC5hbW91bnRPdXQgPSBuZXcgQmlnTnVtYmVyKHJlcy5hbW91bnRPdXQpLnNoaWZ0ZWRCeSgtMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBkLnNsaWRlID0gbmV3IEJpZ051bWJlcihyZXMuc2xpZGUpLnNoaWZ0ZWRCeSgtMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBkLmZlZSA9IG5ldyBCaWdOdW1iZXIocmVzLmZlZSkuc2hpZnRlZEJ5KC0xICogdGhpcy5nYXNEZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBkLmluTGltaXQgPSBuZXcgQmlnTnVtYmVyKHJlcy5pbkxpbWl0KS5zaGlmdGVkQnkoLTEgKiB0b2tlbkluSW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBkLm91dExpbWl0ID0gbmV3IEJpZ051bWJlcihyZXMub3V0TGltaXQpLnNoaWZ0ZWRCeSgtMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuXG5cbiAgICAgICAgaWYoIWlzVGlja2V0KHRva2VuT3V0SW5mby50b2tlbk91dCwgdG9DaGFpbklkKSkge1xuICAgICAgICAgICAgbGV0IHRyZWFzdXJlQmFsYW5jZSA9IGF3YWl0IG5ld1N3aXRjaFRyZWFzdXJ5KHRvQ2hhaW5JZCkucXVlcnlXaXRoZHJhdyh0aGlzLmFkZHJlc3MsIHRva2VuT3V0SW5mby50b2tlbk91dCk7XG4gICAgICAgICAgICBpZihuZXcgQmlnTnVtYmVyKHJlcy5vdXRMaW1pdCkuZ3QobmV3IEJpZ051bWJlcih0cmVhc3VyZUJhbGFuY2UpKSkge1xuICAgICAgICAgICAgICAgIGQub3V0TGltaXQgPSBuZXcgQmlnTnVtYmVyKHRyZWFzdXJlQmFsYW5jZSkuc2hpZnRlZEJ5KC0xICogdG9rZW5PdXRJbmZvLmRlY2ltYWxzKS50b0ZpeGVkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZDtcbiAgICB9XG5cbiAgICBhc3luYyBnZXRJbkluZm8odG9rZW5JbiwgdG9DaGFpbklkLCBhbW91bnRPdXQsIG1vZGUpIHtcbiAgICAgICAgaWYgKCFtb2RlKSB7XG4gICAgICAgICAgICBtb2RlID0gMlxuICAgICAgICB9XG4gICAgICAgIGxldCB0b2tlbk91dEluZm8gPSBhd2FpdCB0aGlzLmdldFRva2VuT3V0SW5mbyh0b2tlbkluLCB0b0NoYWluSWQpO1xuICAgICAgICBpZih0aGlzLnByb3ZpZGVyLmlzWmVyb0FkZHJlc3ModG9rZW5PdXRJbmZvLnRva2VuT3V0KSkge1xuICAgICAgICAgICAgZC5hbW91bnRPdXQgPSAnMCc7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGFtb3VudE91dFN0ciA9IG5ldyBCaWdOdW1iZXIoYW1vdW50T3V0KS5zaGlmdGVkQnkoMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBjb25zb2xlLmxvZygnaW5JbmZvOicsIHRva2VuT3V0SW5mbywgYW1vdW50T3V0U3RyKVxuICAgICAgICBsZXQgdG9rZW5JbkluZm8gPSBhd2FpdCB0aGlzLmdldFRva2VuSW5mbyh0b2tlbkluKVxuICAgICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLmdldEluSW5mbyh0b2tlbkluLCB0b0NoYWluSWQsIGFtb3VudE91dFN0ciwgbW9kZSkuY2FsbCgpO1xuICAgICAgICBsZXQgZCA9IHsuLi5yZXN9O1xuICAgICAgICBkLmFtb3VudE91dCA9IGFtb3VudE91dDtcbiAgICAgICAgZC5hbW91bnRJbiA9IG5ldyBCaWdOdW1iZXIocmVzLmFtb3VudEluKS5zaGlmdGVkQnkoLTEgKiB0b2tlbkluSW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBkLnNsaWRlID0gbmV3IEJpZ051bWJlcihyZXMuc2xpZGUpLnNoaWZ0ZWRCeSgtMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBkLmZlZSA9IG5ldyBCaWdOdW1iZXIocmVzLmZlZSkuc2hpZnRlZEJ5KC0xICogdGhpcy5nYXNEZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBkLmluTGltaXQgPSBuZXcgQmlnTnVtYmVyKHJlcy5pbkxpbWl0KS5zaGlmdGVkQnkoLTEgKiB0b2tlbkluSW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBkLm91dExpbWl0ID0gbmV3IEJpZ051bWJlcihyZXMub3V0TGltaXQpLnNoaWZ0ZWRCeSgtMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuXG4gICAgICAgIGlmKCFpc1RpY2tldCh0b2tlbk91dEluZm8udG9rZW5PdXQsIHRvQ2hhaW5JZCkpIHtcbiAgICAgICAgICAgIGxldCB0cmVhc3VyZUJhbGFuY2UgPSBhd2FpdCBuZXdTd2l0Y2hUcmVhc3VyeSh0b0NoYWluSWQpLnF1ZXJ5V2l0aGRyYXcodGhpcy5hZGRyZXNzLCB0b2tlbk91dEluZm8udG9rZW5PdXQpO1xuICAgICAgICAgICAgaWYobmV3IEJpZ051bWJlcihyZXMub3V0TGltaXQpLmd0KG5ldyBCaWdOdW1iZXIodHJlYXN1cmVCYWxhbmNlKSkpIHtcbiAgICAgICAgICAgICAgICBkLm91dExpbWl0ID0gbmV3IEJpZ051bWJlcih0cmVhc3VyZUJhbGFuY2UpLnNoaWZ0ZWRCeSgtMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkO1xuICAgIH1cblxuICAgIGFzeW5jIHRyYW5zZmVySW4odG8sIHRva2VuSW4sIHRva2VuT3V0LCBhbW91bnRJbiwgYW1vdW50T3V0LCB0b0NoYWluSWQsIGZlZSwgbW9kZSkge1xuICAgICAgICBpZiAoIW1vZGUpIHtcbiAgICAgICAgICAgIG1vZGUgPSAyXG4gICAgICAgIH1cbiAgICAgICAgbGV0IHRva2VuSW5JbmZvID0gYXdhaXQgdGhpcy5nZXRUb2tlbkluZm8odG9rZW5JbilcbiAgICAgICAgbGV0IGFtb3VudEluSW50ID0gbmV3IEJpZ051bWJlcihhbW91bnRJbikuc2hpZnRlZEJ5KDEgKiB0b2tlbkluSW5mby5kZWNpbWFscylcblxuICAgICAgICBsZXQgdG9rZW5PdXRJbmZvID0gYXdhaXQgdGhpcy5jb250cmFjdC5tZXRob2RzLnRhcmdldFRva2Vucyh0b2tlbkluLCB0b0NoYWluSWQpLmNhbGwoKTtcbiAgICAgICAgbGV0IGFtb3VudE91dEludCA9IG5ldyBCaWdOdW1iZXIoYW1vdW50T3V0KS5zaGlmdGVkQnkoMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscylcbiAgICAgICAgbGV0IHZhbHVlID0gbmV3IEJpZ051bWJlcihmZWUpLnNoaWZ0ZWRCeSgxICogdGhpcy5nYXNEZWNpbWFscyk7XG4gICAgICAgIGlmICh0b2tlbkluLnRvTG9jYWxlTG93ZXJDYXNlKCkgPT0gdGhpcy5wcm92aWRlci5aRVJPX0FERFIpIHtcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucGx1cyhhbW91bnRJbkludClcbiAgICAgICAgfVxuICAgICAgICBsZXQgdG9rZW5zID0gW3Rva2VuSW4sIHRva2VuT3V0XVxuICAgICAgICBsZXQgdmFsdWVzID0gW2Ftb3VudEluSW50LnRvRml4ZWQoKSwgYW1vdW50T3V0SW50LnRvRml4ZWQoKSwgdG9DaGFpbklkLCBtb2RlXVxuICAgICAgICB1cGRhdGVDaGFpbkJsb2NrKHRvQ2hhaW5JZCk7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnByb3ZpZGVyLmV4ZWN1dGVDb250cmFjdCh0aGlzLmNvbnRyYWN0LCAndHJhbnNmZXJJbicsIHZhbHVlLnRvRml4ZWQoKSwgW3RvLCB0b2tlbnMsIHZhbHVlc10sIHRoaXMuaGFuZGxlVHJhbnNmZXJJbik7XG4gICAgfVxuXG4gICAgYXN5bmMgdHJhbnNmZXJPdXQoZnJvbSwgdG9rZW4wLCB0b2tlbjEsIGFtb3VudEluLCBhbW91bnRPdXQsIGZyb21DaGFpbklkLCBtb2RlLCBzbGlkZSwgaW5Tbiwgc2lnbmF0dXJlKSB7XG4gICAgICAgIGlmICghbW9kZSkge1xuICAgICAgICAgICAgbW9kZSA9IDBcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCB0b2tlbnMgPSBbdG9rZW4wLCB0b2tlbjFdXG4gICAgICAgIGxldCB2YWx1ZXMgPSBbYW1vdW50SW4sIGFtb3VudE91dCwgZnJvbUNoYWluSWQsIG1vZGUsIHNsaWRlLCBpblNuXVxuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5wcm92aWRlci5leGVjdXRlQ29udHJhY3QodGhpcy5jb250cmFjdCwgJ3RyYW5zZmVyT3V0JywgMCwgW2Zyb20sIHRva2VucywgdmFsdWVzLCBzaWduYXR1cmVdLCB0aGlzLmhhbmRsZVRyYW5zZmVyT3V0KTtcbiAgICB9XG5cbiAgICBhc3luYyBteVRyYW5zZmVyT3V0KGRhdGEpIHtcbiAgICAgICAgaWYoZGF0YS5wcm9jZXNzICE9X3Byb2Nlc3Muc3RlcDFfc3VjY2VzcykgdGhyb3coJ215VHJhbnNmZXJPdXQ6IHByb2Nlc3MgbXVzdCBiZSBzdGVwMV9zdWNjZXNzJyk7XG4gICAgICAgIGlmKE51bWJlcihkYXRhLmNoYWluSWRPdXQpICE9IHRoaXMucHJvdmlkZXIuY2hhaW5JZCkgdGhyb3coJ215VHJhbnNmZXJPdXQ6IGludmFsaWQgY2hhaW5JZCcpO1xuICAgICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy5oYW5kbGVUeFdyYXAoZGF0YS5jaGFpbklkSW4sIGRhdGEudHhJbik7XG4gICAgICAgIGNvbnNvbGUubG9nKCdteVRyYW5zZmVyT3V0IGhhbmRsZVR4V3JhcDogJywgcmVzKTtcbiAgICAgICAgaWYoIXJlcykgdGhyb3coJ215VHJhbnNmZXJPdXQ6IG5ldHdvcmsgZXJyb3InKTtcbiAgICAgICAgaWYocmVzICYmIHJlcy5kYXRhICYmIHJlcy5kYXRhLnN0YXR1cyA9PTEpIHRocm93KCdteVRyYW5zZmVyT3V0OiBhbHJlYWR5IGhhbmxkZWQnKTtcbiAgICAgICAgaWYocmVzICYmIHJlcy5kYXRhICYmIHJlcy5kYXRhLnN0YXR1cyA9PTAgJiYgIXJlcy5kYXRhLnNpZ25hdHVyZSkgdGhyb3coJ215VHJhbnNmZXJPdXQ6IGludmFsaWQgc2lnbmF0dXJlJyk7XG4gICAgICAgIGRhdGEgPSByZXMuZGF0YTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMudHJhbnNmZXJPdXQoZGF0YS51c2VyLCBkYXRhLnRva2VuSW4sIGRhdGEudG9rZW5PdXQsIGRhdGEuYW1vdW50SW4sIGRhdGEuYW1vdW50T3V0LCBkYXRhLmNoYWluSWRJbiwgZGF0YS5tb2RlLCBkYXRhLnNsaWRlLCBkYXRhLmluU24sIGRhdGEuc2lnbmF0dXJlKTtcbiAgICB9XG5cbiAgICBhc3luYyBoYW5kbGVUcmFuc2ZlckluKGRhdGEpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2hhbmRsZVRyYW5zZmVySW46JywgZGF0YSk7XG4gICAgICAgIF9zd2l0Y2hEYXRhLnByb2Nlc3MgPSBfcHJvY2Vzcy5zdGVwMV9wZW5kaW5nO1xuICAgICAgICBfc3dpdGNoRGF0YS51c2VyID0gZGF0YS5pbnB1dFZhbHVlc1swXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBfc3dpdGNoRGF0YS5jaGFpbklkSW4gPSBOdW1iZXIoZGF0YS5jaGFpbklkKTtcbiAgICAgICAgX3N3aXRjaERhdGEuY2hhaW5JZE91dCA9IE51bWJlcihkYXRhLmlucHV0VmFsdWVzWzJdWzJdKTtcbiAgICAgICAgX3N3aXRjaERhdGEudG9rZW5JbiA9IGRhdGEuaW5wdXRWYWx1ZXNbMV1bMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgX3N3aXRjaERhdGEudG9rZW5PdXQgPSBkYXRhLmlucHV0VmFsdWVzWzFdWzFdLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIF9zd2l0Y2hEYXRhLnR4SW4gPSBkYXRhLnRyYW5zYWN0aW9uSGFzaDtcbiAgICAgICAgX3N3aXRjaERhdGEubW9kZSA9IE51bWJlcihkYXRhLmlucHV0VmFsdWVzWzJdWzNdKTtcbiAgICAgICAgX3N3aXRjaERhdGEudGltZUluID0gbmV3IERhdGUoKTtcbiAgICAgICAgX3N3aXRjaERhdGEudXBkYXRlVGltZT0gbmV3IERhdGUoKTtcblxuICAgICAgICBsZXQgdG9rZW5JbkluZm8gPSBhd2FpdCBuZXdFUkMyMFRva2VuKF9zd2l0Y2hEYXRhLmNoYWluSWRJbiwgX3N3aXRjaERhdGEudG9rZW5JbikuaW5mbygpO1xuICAgICAgICBsZXQgdG9rZW5PdXRJbmZvID0gYXdhaXQgbmV3RVJDMjBUb2tlbihfc3dpdGNoRGF0YS5jaGFpbklkT3V0LCBfc3dpdGNoRGF0YS50b2tlbk91dCkuaW5mbygpO1xuICAgICAgICBfc3dpdGNoRGF0YS50b2tlbkluU3ltYm9sID0gdG9rZW5JbkluZm8uc3ltYm9sO1xuICAgICAgICBfc3dpdGNoRGF0YS50b2tlbk91dFN5bWJvbCA9IHRva2VuT3V0SW5mby5zeW1ib2w7XG4gICAgICAgIF9zd2l0Y2hEYXRhLmFtb3VudEluID0gbmV3IEJpZ051bWJlcihkYXRhLmlucHV0VmFsdWVzWzJdWzBdKS5zaGlmdGVkQnkoLTEgKiB0b2tlbkluSW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBfc3dpdGNoRGF0YS5hbW91bnRPdXQgPSBuZXcgQmlnTnVtYmVyKGRhdGEuaW5wdXRWYWx1ZXNbMl1bMV0pLnNoaWZ0ZWRCeSgtMSAqIHRva2VuT3V0SW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICBpZihkYXRhLmhhc093blByb3BlcnR5KCdzdGF0dXMnKSkge1xuICAgICAgICAgICAgaWYoZGF0YS5zdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBfc3dpdGNoRGF0YS5wcm9jZXNzID0gX3Byb2Nlc3Muc3RlcDFfc3VjY2VzcztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgX3N3aXRjaERhdGEucHJvY2VzcyA9IF9wcm9jZXNzLnN0ZXAxX2ZhaWw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyBoYW5kbGVUcmFuc2Zlck91dChkYXRhKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdoYW5kbGVUcmFuc2Zlck91dDonLCBkYXRhKTtcbiAgICAgICAgX3N3aXRjaERhdGEucHJvY2VzcyA9IF9wcm9jZXNzLnN0ZXAyX3BlbmRpbmc7XG4gICAgICAgIF9zd2l0Y2hEYXRhLnVzZXIgPSBkYXRhLmlucHV0VmFsdWVzWzBdLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIF9zd2l0Y2hEYXRhLmluU24gPSBOdW1iZXIoZGF0YS5pbnB1dFZhbHVlc1syXVs1XSk7XG4gICAgICAgIF9zd2l0Y2hEYXRhLmNoYWluSWRJbiA9IGRhdGEuaW5wdXRWYWx1ZXNbMl1bMl07XG4gICAgICAgIF9zd2l0Y2hEYXRhLmNoYWluSWRPdXQgPSBOdW1iZXIoZGF0YS5jaGFpbklkKTtcbiAgICAgICAgX3N3aXRjaERhdGEudG9rZW5JbiA9IGRhdGEuaW5wdXRWYWx1ZXNbMV1bMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgX3N3aXRjaERhdGEudG9rZW5PdXQgPSBkYXRhLmlucHV0VmFsdWVzWzFdWzFdLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIF9zd2l0Y2hEYXRhLnR4T3V0ID0gZGF0YS50cmFuc2FjdGlvbkhhc2g7XG4gICAgICAgIF9zd2l0Y2hEYXRhLnVwZGF0ZVRpbWU9IG5ldyBEYXRlKCk7XG5cbiAgICAgICAgbGV0IHRva2VuSW5JbmZvID0gYXdhaXQgbmV3RVJDMjBUb2tlbihfc3dpdGNoRGF0YS5jaGFpbklkSW4sIF9zd2l0Y2hEYXRhLnRva2VuSW4pLmluZm8oKTtcbiAgICAgICAgbGV0IHRva2VuT3V0SW5mbyA9IGF3YWl0IG5ld0VSQzIwVG9rZW4oX3N3aXRjaERhdGEuY2hhaW5JZE91dCwgX3N3aXRjaERhdGEudG9rZW5PdXQpLmluZm8oKTtcbiAgICAgICAgX3N3aXRjaERhdGEudG9rZW5JblN5bWJvbCA9IHRva2VuSW5JbmZvLnN5bWJvbDtcbiAgICAgICAgX3N3aXRjaERhdGEudG9rZW5PdXRTeW1ib2wgPSB0b2tlbk91dEluZm8uc3ltYm9sO1xuICAgICAgICBfc3dpdGNoRGF0YS5hbW91bnRJbiA9IG5ldyBCaWdOdW1iZXIoZGF0YS5pbnB1dFZhbHVlc1syXVswXSkuc2hpZnRlZEJ5KC0xICogdG9rZW5JbkluZm8uZGVjaW1hbHMpLnRvRml4ZWQoKTtcbiAgICAgICAgX3N3aXRjaERhdGEuYW1vdW50T3V0ID0gbmV3IEJpZ051bWJlcihkYXRhLmlucHV0VmFsdWVzWzJdWzFdKS5zaGlmdGVkQnkoLTEgKiB0b2tlbk91dEluZm8uZGVjaW1hbHMpLnRvRml4ZWQoKTtcblxuICAgICAgICBsZXQgX3N0YXR1cyA9IDA7XG4gICAgICAgIGlmKGRhdGEuaGFzT3duUHJvcGVydHkoJ3N0YXR1cycpKSB7XG4gICAgICAgICAgICBpZihkYXRhLnN0YXR1cykge1xuICAgICAgICAgICAgICAgIF9zd2l0Y2hEYXRhLnRpbWVPdXQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgIF9zd2l0Y2hEYXRhLnByb2Nlc3MgPSBfcHJvY2Vzcy5zdGVwMl9zdWNjZXNzO1xuICAgICAgICAgICAgICAgIF9zdGF0dXMgPSAxO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBfc3dpdGNoRGF0YS5wcm9jZXNzID0gX3Byb2Nlc3Muc3RlcDJfZmFpbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGxldCB0YWJsZU5hbWUgPSAnc3dpdGNoQXJjb3NzSGlzdG9yeScgKyBfc3dpdGNoRGF0YS51c2VyO1xuICAgICAgICBjb25zdCBsb2NhbCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRhYmxlTmFtZSk7XG4gICAgICAgIGlmIChsb2NhbCkge1xuICAgICAgICAgICAgbGV0IGZvdW5kSSA9IC0xO1xuICAgICAgICAgICAgbGV0IHVrZXkgPSBfc3dpdGNoRGF0YS5jaGFpbklkSW4gKyAnLScgKyBfc3dpdGNoRGF0YS5pblNuO1xuICAgICAgICAgICAgX3N3aXRjaEFjcm9zc0hpc3RvcnkuZm9yRWFjaCgoZCwgaSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkLnVrZXkgPT0gdWtleSkge1xuICAgICAgICAgICAgICAgICAgICBmb3VuZEkgPSBpXG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBpZiAoZm91bmRJID4gLTEpIHtcbiAgICAgICAgICAgICAgICBsZXQgaXRlbSA9IHsuLi5fc3dpdGNoQWNyb3NzSGlzdG9yeVtmb3VuZEldfTtcbiAgICAgICAgICAgICAgICBpdGVtLnN0YXR1cyA9IF9zdGF0dXM7XG4gICAgICAgICAgICAgICAgaXRlbS5wcm9jZXNzPSBfc3dpdGNoRGF0YS5wcm9jZXNzO1xuICAgICAgICAgICAgICAgIGl0ZW0ub3V0U24gPSBfc3dpdGNoRGF0YS5vdXRTbjtcbiAgICAgICAgICAgICAgICBpdGVtLnR4T3V0ID0gX3N3aXRjaERhdGEudHhPdXQ7XG4gICAgICAgICAgICAgICAgaXRlbS5ibG9ja091dCA9IF9zd2l0Y2hEYXRhLmJsb2NrT3V0O1xuICAgICAgICAgICAgICAgIGl0ZW0udGltZU91dCA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgICAgaXRlbS51cGRhdGVUaW1lPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgIF9zd2l0Y2hBY3Jvc3NIaXN0b3J5LnNwbGljZShmb3VuZEksIDEpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfc3dpdGNoQWNyb3NzSGlzdG9yeS51bnNoaWZ0KGl0ZW0pO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGFibGVOYW1lLCBKU09OLnN0cmluZ2lmeShfc3dpdGNoQWNyb3NzSGlzdG9yeSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVzZXRTd2l0Y2hEYXRhKCkge1xuICAgICAgICBfc3dpdGNoRGF0YSA9IHsuLi5fc3dpdGNoRGVmYXVsdERhdGF9XG4gICAgICAgIHJldHVybiBfc3dpdGNoRGF0YTtcbiAgICB9XG5cbiAgICBhc3luYyBoYW5kbGVUeFdyYXAoY2hhaW5JZCwgdHgpIHtcbiAgICAgICAgbGV0IHVybCA9ICcvYXBpL2hhbmRsZVR4JztcbiAgICAgICAgaWYoWzQyLDk3LDI1Nl0uaW5jbHVkZXMoY2hhaW5JZCkpIHtcbiAgICAgICAgICAgIHVybCA9ICcvYXBpLXRlc3QvaGFuZGxlVHgnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmhhbmRsZVR4KGNoYWluSWQsIHR4LCB1cmwpO1xuICAgIH1cblxuICAgIGFzeW5jIGhhbmRsZVR4KGNoYWluSWQsIHR4LCB1cmwpIHtcbiAgICAgICAgaWYoIXVybCkge1xuICAgICAgICAgICAgaWYoWzQyLDk3LDI1Nl0uaW5jbHVkZXMoY2hhaW5JZCkpIHtcbiAgICAgICAgICAgICAgICB1cmwgPSAnaHR0cHM6Ly9zd2l0Y2hmaW5hbmNlLnh5ei9hcGktdGVzdC9oYW5kbGVUeCc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHVybCA9ICdodHRwczovL3N3aXRjaGZpbmFuY2UueHl6L2FwaS9oYW5kbGVUeCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHBhcmFtID0ge1xuICAgICAgICAgICAgY2hhaW5JZDogY2hhaW5JZCxcbiAgICAgICAgICAgIHR4OiB0eCxcbiAgICAgICAgfTtcbiAgICAgICAgbGV0IHJlcyA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXJhbSksXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcblxuICAgICAgICBsZXQgdGV4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKHRleHQpO1xuICAgIH1cbn1cblxuY2xhc3MgU3dpdGNoQWNyb3NzSGlzdG9yeSBleHRlbmRzIEJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKHByb3ZpZGVyKSB7XG4gICAgICAgIHN1cGVyKHByb3ZpZGVyKTtcbiAgICAgICAgdGhpcy5lbnZOYW1lID0gJ21haW4nO1xuICAgICAgICB0aGlzLnByb2Nlc3MgPSBfcHJvY2VzcztcbiAgICB9XG5cbiAgICBnZXRFbnZOYW1lKCkge1xuICAgICAgICBpZihbNDIsOTcsMjU2XS5pbmNsdWRlcyh0aGlzLnByb3ZpZGVyLmNoYWluSWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gJ3Rlc3QnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnbWFpbic7XG4gICAgfVxuXG4gICAgaW5pdGlhbGl6ZShjaGFpbklkLCBhY2NvdW50PW51bGwpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1N3aXRjaEFjcm9zc0hpc3RvcnkgaW5pdGlhbGl6ZS4uLicsIHRoaXMucHJvdmlkZXIuY2hhaW5JZCk7XG4gICAgICAgIHN1cGVyLmluaXRpYWxpemUoY2hhaW5JZCwgYWNjb3VudCk7XG4gICAgICAgIHRoaXMuZ2V0QWNyb3NzVG9rZW5zKCk7XG4gICAgICAgIHRoaXMubG9hZEhpc3RvcnkoKTtcbiAgICAgICAgbGV0IGlkcyA9IGdldENoYWluSWRzKHRoaXMucHJvdmlkZXIuY2hhaW5JZCk7XG4gICAgICAgIGZvciAobGV0IGk9MDsgaTxpZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIG5ld1N3aXRjaEFjcm9zcyhpZHNbaV0pLnN1YnNjcmliZSh0aGlzLmhhbmRsZUhpc3RvcnkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc3RhdHVzLCAwOiBwZW5kaW5nIDE6c3VjY2Vzc1xuICAgIGFzeW5jIGhhbmRsZUhpc3RvcnkobG9nKSB7XG4gICAgICAgIGxldCBkID0gbG9nLnJldHVyblZhbHVlcztcbiAgICAgICAgaWYoIWlzTXlXYWxsZXQoZC51c2VyKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCB0YWJsZU5hbWUgPSAnc3dpdGNoQXJjb3NzSGlzdG9yeScgKyBkLnVzZXIudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgbGV0IGl0ZW0gPSB7Li4uX3N3aXRjaERhdGF9O1xuICAgICAgICBpZihsb2cuZXZlbnROYW1lID09IFwiVHJhbnNmZXJJbmVkXCIpIHtcbiAgICAgICAgICAgIHVwZGF0ZVN3aXRjaENvdW50KDEpO1xuICAgICAgICAgICAgaXRlbS51a2V5ID0gbG9nLmNoYWluSWQgKyAnLScgKyBkLnNuO1xuICAgICAgICAgICAgaXRlbS5zdGF0dXMgPSAwO1xuICAgICAgICAgICAgaXRlbS5wcm9jZXNzID0gX3Byb2Nlc3Muc3RlcDFfc3VjY2VzcztcbiAgICAgICAgICAgIGl0ZW0uaW5TbiA9IGQuc247XG4gICAgICAgICAgICBpdGVtLm1vZGUgPSBOdW1iZXIoZC5tb2RlKTtcbiAgICAgICAgICAgIGl0ZW0uY2hhaW5JZEluID0gTnVtYmVyKGxvZy5jaGFpbklkKTtcbiAgICAgICAgICAgIGl0ZW0uY2hhaW5JZE91dCA9IE51bWJlcihkLmNoYWluSWQpO1xuICAgICAgICAgICAgaXRlbS50b2tlbkluID0gZC50b2tlbkluLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICBpdGVtLnRva2VuT3V0ID0gZC50b2tlbk91dC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgaXRlbS5hbW91bnRJbiA9IGQuYW1vdW50SW47XG4gICAgICAgICAgICBpdGVtLmFtb3VudE91dCA9IGQuYW1vdW50T3V0O1xuICAgICAgICAgICAgaXRlbS5mZWUgPSBkLmZlZTtcbiAgICAgICAgICAgIGl0ZW0uc2xpZGUgPSBkLnNsaWRlO1xuICAgICAgICAgICAgaXRlbS51c2VyID0gZC51c2VyLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICBpdGVtLnR4SW4gPSBsb2cudHJhbnNhY3Rpb25IYXNoO1xuICAgICAgICAgICAgaXRlbS5ibG9ja0luID0gbG9nLmJsb2NrTnVtYmVyO1xuICAgICAgICAgICAgaXRlbS50aW1lSW4gPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgaXRlbS51cGRhdGVUaW1lPSBuZXcgRGF0ZSgpO1xuXG4gICAgICAgICAgICBsZXQgdG9rZW5JbkluZm8gPSBhd2FpdCBuZXdFUkMyMFRva2VuKGxvZy5jaGFpbklkLCBpdGVtLnRva2VuSW4pLmluZm8oKTtcbiAgICAgICAgICAgIGxldCB0b2tlbk91dEluZm8gPSBhd2FpdCBuZXdFUkMyMFRva2VuKGQuY2hhaW5JZCwgaXRlbS50b2tlbk91dCkuaW5mbygpO1xuICAgICAgICAgICAgaXRlbS50b2tlbkluU3ltYm9sID0gdG9rZW5JbkluZm8uc3ltYm9sO1xuICAgICAgICAgICAgaXRlbS50b2tlbk91dFN5bWJvbCA9IHRva2VuT3V0SW5mby5zeW1ib2w7XG4gICAgICAgICAgICBpdGVtLmFtb3VudEluID0gbmV3IEJpZ051bWJlcihpdGVtLmFtb3VudEluKS5zaGlmdGVkQnkoLTEgKiB0b2tlbkluSW5mby5kZWNpbWFscykudG9GaXhlZCgpO1xuICAgICAgICAgICAgaXRlbS5hbW91bnRPdXQgPSBuZXcgQmlnTnVtYmVyKGl0ZW0uYW1vdW50T3V0KS5zaGlmdGVkQnkoLTEgKiB0b2tlbk91dEluZm8uZGVjaW1hbHMpLnRvRml4ZWQoKTtcbiAgICAgICAgICAgIGl0ZW0uZmVlID0gbmV3IEJpZ051bWJlcihpdGVtLmZlZSkuc2hpZnRlZEJ5KC0xOCkudG9GaXhlZCgpO1xuICAgICAgICAgICAgaXRlbS5zbGlkZSA9IG5ldyBCaWdOdW1iZXIoaXRlbS5zbGlkZSkuc2hpZnRlZEJ5KC0xICogdG9rZW5PdXRJbmZvLmRlY2ltYWxzKS50b0ZpeGVkKCk7XG5cbiAgICAgICAgfSBlbHNlIGlmKGxvZy5ldmVudE5hbWUgPT0gXCJUcmFuc2Zlck91dGVkXCIpIHtcbiAgICAgICAgICAgIHVwZGF0ZVN3aXRjaENvdW50KC0xKTtcbiAgICAgICAgICAgIGl0ZW0udWtleSA9IGQuY2hhaW5JZCArICctJyArIGQuaW5TbjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2hhbmRsZUhpc3RvcnkgdW5rbm93biBsb2c6JywgbG9nKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGxvY2FsID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGFibGVOYW1lKTtcbiAgICAgICAgaWYgKGxvY2FsKSB7XG4gICAgICAgICAgICBsZXQgZm91bmRJID0gLTE7XG4gICAgICAgICAgICBfc3dpdGNoQWNyb3NzSGlzdG9yeS5mb3JFYWNoKChkLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGQudWtleSA9PSBpdGVtLnVrZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgZm91bmRJID0gaVxuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgaWYgKGZvdW5kSSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgaWYobG9nLmV2ZW50TmFtZSA9PSBcIlRyYW5zZmVyT3V0ZWRcIikge1xuICAgICAgICAgICAgICAgICAgICBpdGVtID0gey4uLl9zd2l0Y2hBY3Jvc3NIaXN0b3J5W2ZvdW5kSV19O1xuICAgICAgICAgICAgICAgICAgICBpdGVtLnN0YXR1cyA9IDE7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0ucHJvY2Vzcz0gX3Byb2Nlc3Muc3RlcDJfc3VjY2VzcztcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5vdXRTbiA9IGQuc247XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0udHhPdXQgPSBsb2cudHJhbnNhY3Rpb25IYXNoO1xuICAgICAgICAgICAgICAgICAgICBpdGVtLmJsb2NrT3V0ID0gbG9nLmJsb2NrTnVtYmVyO1xuICAgICAgICAgICAgICAgICAgICBpdGVtLnRpbWVPdXQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICBpdGVtLnVwZGF0ZVRpbWU9IG5ldyBEYXRlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYoX3N3aXRjaERhdGEuY2hhaW5JZEluID09IGl0ZW0uY2hhaW5JZEluICYmIF9zd2l0Y2hEYXRhLnR4SW4gPT0gaXRlbS50eEluKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfc3dpdGNoRGF0YS50eE91dCA9IGl0ZW0udHhPdXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBfc3dpdGNoRGF0YS50aW1lT3V0ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9zd2l0Y2hEYXRhLnVwZGF0ZVRpbWU9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfc3dpdGNoRGF0YS5wcm9jZXNzID0gX3Byb2Nlc3Muc3RlcDJfc3VjY2VzcztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfc3dpdGNoQWNyb3NzSGlzdG9yeS5zcGxpY2UoZm91bmRJLCAxKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX3N3aXRjaEFjcm9zc0hpc3RvcnkudW5zaGlmdChpdGVtKTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRhYmxlTmFtZSwgSlNPTi5zdHJpbmdpZnkoX3N3aXRjaEFjcm9zc0hpc3RvcnkpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF9zd2l0Y2hBY3Jvc3NIaXN0b3J5LnVuc2hpZnQoaXRlbSk7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0YWJsZU5hbWUsIEpTT04uc3RyaW5naWZ5KF9zd2l0Y2hBY3Jvc3NIaXN0b3J5KSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coJ2hhbmRsZUhpc3Rvcnkgc2V0OicsIGl0ZW0pO1xuICAgIH1cblxuICAgIGdldEhpc3RvcnkoKSB7XG4gICAgICAgIHJldHVybiBfc3dpdGNoQWNyb3NzSGlzdG9yeTtcbiAgICB9XG5cbiAgICBsb2FkSGlzdG9yeSgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2xvYWRIaXN0b3J5IHVzZXI6JywgdGhpcy5wcm92aWRlci5nZXRTZWxlY3RlZEFkZHJlc3MoKSk7XG4gICAgICAgIGlmKCF0aGlzLnByb3ZpZGVyLmdldFNlbGVjdGVkQWRkcmVzcygpKSB7XG4gICAgICAgICAgICByZXR1cm4gX3N3aXRjaEFjcm9zc0hpc3Rvcnk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHRhYmxlTmFtZSA9ICdzd2l0Y2hBcmNvc3NIaXN0b3J5JyArIHRoaXMucHJvdmlkZXIuZ2V0U2VsZWN0ZWRBZGRyZXNzKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgY29uc3QgbG9jYWwgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0YWJsZU5hbWUpO1xuICAgICAgICBpZiAobG9jYWwpIHtcbiAgICAgICAgICAgIGNsZWFuU3dpdGNoQ291bnQoKTtcbiAgICAgICAgICAgIF9zd2l0Y2hBY3Jvc3NIaXN0b3J5LnNwbGljZSgwLCBfc3dpdGNoQWNyb3NzSGlzdG9yeS5sZW5ndGgpO1xuICAgICAgICAgICAgbGV0IF9kYXRhID0gSlNPTi5wYXJzZShsb2NhbCk7XG4gICAgICAgICAgICBmb3IobGV0IGk9MDsgaTxfZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIF9zd2l0Y2hBY3Jvc3NIaXN0b3J5LnB1c2goX2RhdGFbaV0pO1xuICAgICAgICAgICAgICAgIGlmKF9kYXRhW2ldLnN0YXR1cyA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVN3aXRjaENvdW50KDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX3N3aXRjaEFjcm9zc0hpc3Rvcnk7XG4gICAgfVxuXG4gICAgY2xlYW5IaXN0b3J5KCkge1xuICAgICAgICBsZXQgdGFibGVOYW1lID0gJ3N3aXRjaEFyY29zc0hpc3RvcnknICsgdGhpcy5wcm92aWRlci5nZXRTZWxlY3RlZEFkZHJlc3MoKS50b0xvd2VyQ2FzZSgpOztcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGFibGVOYW1lKTtcbiAgICAgICAgX3N3aXRjaEFjcm9zc0hpc3Rvcnkuc3BsaWNlKDAsIF9zd2l0Y2hBY3Jvc3NIaXN0b3J5Lmxlbmd0aCk7XG4gICAgfVxuXG4gICAgZ2V0QWNyb3NzVG9rZW5zKCkge1xuICAgICAgICB0aGlzLmVudk5hbWUgPSB0aGlzLmdldEVudk5hbWUoKTtcbiAgICAgICAgX3N3aXRjaEFjcm9zc1Rva2VucyA9IFN3aXRjaFBvb2xzW3RoaXMuZW52TmFtZV07XG4gICAgICAgIGZvciAobGV0IGsgaW4gX3N3aXRjaEFjcm9zc1Rva2Vucykge1xuICAgICAgICAgICAgaWYgKF9zd2l0Y2hBY3Jvc3NUb2tlbnNba10ub3BlbmVkID09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBfc3dpdGNoQWNyb3NzVG9rZW5zW2tdLm5hbWUgPSBrXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaT0wOyBpPF9zd2l0Y2hBY3Jvc3NUb2tlbnNba10ubGlzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBfc3dpdGNoQWNyb3NzVG9rZW5zW2tdLmxpc3RbaV0uaXNUaWNrZXQgPSBfc3dpdGNoQWNyb3NzVG9rZW5zW2tdLmlzVGlja2V0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIF9zd2l0Y2hBY3Jvc3NUb2tlbnM7XG4gICAgfVxufVxuXG52YXIgX1N3aXRjaEFjcm9zc0luc3RhbmVzID0ge31cbmZ1bmN0aW9uIG5ld1N3aXRjaEFjcm9zcyhjaGFpbklkKSB7XG4gICAgaWYoIV9Td2l0Y2hBY3Jvc3NJbnN0YW5lcy5oYXNPd25Qcm9wZXJ0eShjaGFpbklkKSkge1xuICAgICAgICBsZXQgcHJvdmlkZXIgPSBXZWIzUHJvdmlkZXIoY2hhaW5JZCk7XG4gICAgICAgIF9Td2l0Y2hBY3Jvc3NJbnN0YW5lc1tjaGFpbklkXSA9IG5ldyBTd2l0Y2hBY3Jvc3MocHJvdmlkZXIpO1xuICAgICAgICBfU3dpdGNoQWNyb3NzSW5zdGFuZXNbY2hhaW5JZF0uaW5pdGlhbGl6ZShjaGFpbklkKTtcbiAgICAgICAgX1N3aXRjaEFjcm9zc0luc3RhbmVzW2NoYWluSWRdLnNjYW5FdmVudExvZygpO1xuICAgIH1cbiAgICByZXR1cm4gX1N3aXRjaEFjcm9zc0luc3RhbmVzW2NoYWluSWRdO1xufVxuXG5leHBvcnQgeyBTd2l0Y2hBY3Jvc3MsIFN3aXRjaEFjcm9zc0hpc3RvcnksIG5ld1N3aXRjaEFjcm9zcyB9XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "SwitchAcross.js"
      ],
      "names": [
        "asleep",
        "ms",
        "Promise",
        "resolve",
        "setTimeout",
        "getChainIds",
        "chainId",
        "includes",
        "SwitchChainIds",
        "test",
        "main",
        "_switchAcrossTokens",
        "_switchCount",
        "_switchAcrossHistory",
        "_process",
        "step1_pending",
        "step1_success",
        "step1_fail",
        "step2_pending",
        "step2_success",
        "step2_fail",
        "_switchDefaultData",
        "Date",
        "_switchData",
        "loadSwitchCount",
        "res",
        "localStorage",
        "getItem",
        "Number",
        "cleanSwitchCount",
        "setItem",
        "updateSwitchCount",
        "num",
        "isMyWallet",
        "_user",
        "local",
        "wallets",
        "JSON",
        "parse",
        "w",
        "console",
        "log",
        "toLowerCase",
        "isTicket",
        "_token",
        "k",
        "opened",
        "i",
        "list",
        "length",
        "tokenAddress",
        "updateChainBlock",
        "provider",
        "getBlockNumber",
        "then",
        "getChainBlock",
        "SwitchAcross",
        "BaseByName",
        "constructor",
        "SwitchAcrossABI",
        "gasDecimals",
        "targetTokens",
        "subscribes",
        "subscriptions",
        "currentBlock",
        "process",
        "initialize",
        "account",
        "initAfter",
        "initSubscribe",
        "subscription",
        "web3",
        "eth",
        "subscribe",
        "fromBlock",
        "address",
        "error",
        "result",
        "eventLog",
        "findEventOneLog",
        "forEach",
        "cb",
        "warn",
        "push",
        "scanEventLog",
        "latestBlockNumber",
        "e",
        "toBlock",
        "Math",
        "min",
        "records",
        "contract",
        "getPastEvents",
        "Object",
        "keys",
        "eventName",
        "blockNumber",
        "Array",
        "isArray",
        "logs",
        "web3Util",
        "parseEventOneLog",
        "unsubscribe",
        "success",
        "clean",
        "getTokenInfo",
        "token",
        "tokenIns",
        "ERC20Token",
        "info",
        "getTokenOutInfo",
        "tokenIn",
        "toChainId",
        "key",
        "hasOwnProperty",
        "methods",
        "call",
        "isZeroAddress",
        "tokenOut",
        "getSourceToken",
        "sourceTokens",
        "source",
        "symbol",
        "iterateTokens",
        "start",
        "end",
        "count",
        "countToken",
        "data",
        "tokens",
        "d",
        "targets",
        "getTargetTokensForSource",
        "getTargetToken",
        "target",
        "tokenInfo",
        "chainIds",
        "getInOrders",
        "sn",
        "getOutOrders",
        "queryWithdraw",
        "value",
        "totalSlideOfToken",
        "getOutInfo",
        "amountIn",
        "mode",
        "tokenInInfo",
        "amountInStr",
        "BigNumber",
        "shiftedBy",
        "decimals",
        "toFixed",
        "amountOut",
        "tokenOutInfo",
        "slide",
        "fee",
        "inLimit",
        "outLimit",
        "treasureBalance",
        "gt",
        "getInInfo",
        "amountOutStr",
        "transferIn",
        "to",
        "amountInInt",
        "amountOutInt",
        "toLocaleLowerCase",
        "ZERO_ADDR",
        "plus",
        "values",
        "executeContract",
        "handleTransferIn",
        "transferOut",
        "from",
        "token0",
        "token1",
        "fromChainId",
        "inSn",
        "signature",
        "handleTransferOut",
        "myTransferOut",
        "chainIdOut",
        "handleTxWrap",
        "chainIdIn",
        "txIn",
        "status",
        "user",
        "inputValues",
        "transactionHash",
        "timeIn",
        "updateTime",
        "tokenInSymbol",
        "tokenOutSymbol",
        "txOut",
        "_status",
        "timeOut",
        "tableName",
        "foundI",
        "ukey",
        "item",
        "outSn",
        "blockOut",
        "splice",
        "unshift",
        "stringify",
        "resetSwitchData",
        "tx",
        "url",
        "handleTx",
        "param",
        "fetch",
        "method",
        "body",
        "headers",
        "text",
        "SwitchAcrossHistory",
        "Base",
        "envName",
        "getEnvName",
        "getAcrossTokens",
        "loadHistory",
        "ids",
        "newSwitchAcross",
        "handleHistory",
        "returnValues",
        "blockIn",
        "getHistory",
        "getSelectedAddress",
        "_data",
        "cleanHistory",
        "removeItem",
        "SwitchPools",
        "name",
        "_SwitchAcrossInstanes"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "sourcesContent": [
        "import SwitchAcrossABI from '../abi/SwitchAcross.json';\nimport BigNumber from \"bignumber.js\"\nimport BaseByName from './BaseByName';\nimport Base from './Base';\nimport { ERC20Token, newERC20Token } from './ERC20Token.js';\nimport Web3Provider from '../Web3Provider.js';\nimport web3Util from '../Web3Util.js'\nimport { SwitchChainIds, SwitchPools } from '../config/SwitchConfig.js';\nimport { newSwitchTreasury } from './SwitchTreasury.js';\n\nfunction asleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nfunction getChainIds(chainId) {\n    if([42,97,256].includes(chainId)) {\n        return SwitchChainIds.test;\n    }\n    return SwitchChainIds.main;\n}\n\nvar _switchAcrossTokens = {};\nvar _switchCount = 0;\nvar _switchAcrossHistory = [];\nvar _process = {\n    step1_pending: 10,\n    step1_success: 11,\n    step1_fail: 12,\n    step2_pending: 20,\n    step2_success: 21,\n    step2_fail: 22,\n}\n\nconst _switchDefaultData = {\n    \"ukey\": \"chainIdIn-inSn\",\n    \"process\": _process.step1_pending,\n    \"status\": 0,\n    \"inSn\": 0,\n    \"outSn\": 0,\n    \"mode\": 0,\n    \"chainIdIn\": 0,\n    \"tokenIn\": \"\",\n    \"tokenInSymbol\": \"\",\n    \"chainIdOut\": 0,\n    \"tokenOut\": \"\",\n    \"tokenOutSymbol\": \"\",\n    \"amountIn\": \"0\",\n    \"amountOut\": \"0\",\n    \"fee\": \"0\",\n    \"slide\": \"0\",\n    \"user\": \"\",\n    \"signature\": \"\",\n    \"txIn\": \"\",\n    \"txOut\": \"\",\n    \"blockIn\": 0,\n    \"blockOut\": 0,\n    \"timeIn\": null,\n    \"timeOut\": null,\n    \"updateTime\": new Date(),\n};\nvar _switchData = {..._switchDefaultData};\n\nfunction loadSwitchCount() {\n    let res = localStorage.getItem('_switchCount');\n    if(res) {\n        _switchCount = Number(res);\n        if(_switchCount <0) {\n            _switchCount = 0;\n        }\n    }\n}\n\nfunction cleanSwitchCount() {\n    _switchCount = 0;\n    localStorage.setItem('_switchCount', _switchCount+'');\n}\n\nfunction updateSwitchCount(num) {\n    _switchCount += num;\n    if(_switchCount <0) {\n        _switchCount = 0;\n    }\n    localStorage.setItem('_switchCount', _switchCount+'');\n}\n\nloadSwitchCount();\n\nfunction isMyWallet(_user) {\n    const local = localStorage.getItem('myWallets');\n    if (local) {\n        const wallets = JSON.parse(local);\n        for(let w in wallets) {\n            console.log('isMywallet:', w, _user);\n            if(w.toLowerCase() == _user.toLowerCase()) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction isTicket(_token, chainId) {\n    for (let k in _switchAcrossTokens) {\n        if (_switchAcrossTokens[k].opened == true) {\n            for (let i=0; i<_switchAcrossTokens[k].list.length; i++) {\n                if(_switchAcrossTokens[k].list[i].tokenAddress.toLowerCase() == _token.toLowerCase() && _switchAcrossTokens[k].list[i].chainId == chainId) {\n                    return _switchAcrossTokens[k].list[i].isTicket;\n                }\n            }\n        }\n    }\n    return false;\n}\n\nfunction updateChainBlock(chainId) {\n    let provider = Web3Provider(chainId);\n    provider.getBlockNumber().then(res=> {\n        localStorage.setItem('_switchBlockNumber'+chainId, res+'');\n    })\n}\n\nfunction getChainBlock(chainId) {\n    if(_switchCount > 0) {\n        let res = localStorage.getItem('_switchBlockNumber'+chainId);\n        return Number(res);\n    }\n    return 0;\n}\n\nclass SwitchAcross extends BaseByName {\n    constructor(provider) {\n        super(provider, SwitchAcrossABI, 'SwitchAcross');\n\n        this.gasDecimals = 18;\n        this.targetTokens = {};\n        this.subscribes = [];\n        this.subscriptions = [];\n        this.currentBlock = 0;\n        this.process = _process;\n    }\n\n    initialize(chainId, account=null) {\n        console.log('SwitchAcross initialize...', this.provider.chainId);\n        super.initialize(chainId, account);\n    }\n\n    initAfter() {\n        console.log('SwitchAcross initAfter...', this.provider.chainId, this.subscribes.length);\n        this.initSubscribe();\n    }\n\n    initSubscribe() {\n        let subscription = this.provider.web3.eth.subscribe('logs', {\n            fromBlock: 'latest',\n            address: this.address\n        }, (error, result) => {\n            if (!error) {\n                let eventLog = this.findEventOneLog(result);\n                eventLog.chainId = this.provider.chainId;\n                console.log('subscribes length:', this.provider.chainId, this.subscribes.length);\n                this.subscribes.forEach((cb)=>{\n                    console.log('SwitchAcross subscribe subscribe', this.provider.chainId, eventLog);\n                    if(this.address.toLowerCase() == eventLog.address.toLowerCase()) {\n                        cb(eventLog);\n                    } else {\n                        console.warn('SwitchAcross subscribe unknown address', this.provider.chainId, eventLog.address);\n                    }\n                });\n            } else {\n                console.error('SwitchAcross subscribe error:', this.provider.chainId, error);\n            }\n        });\n        this.subscriptions.push(subscription);\n    }\n\n    async scanEventLog() {\n        if(this.currentBlock == 0) {\n            this.currentBlock = getChainBlock(this.provider.chainId);\n            if(this.currentBlock == 0) this.currentBlock = await this.provider.getBlockNumber();\n        }\n        if(_switchCount <=0) {\n            // console.log('SwitchAcross scanEventLog sikp');\n            await asleep(3000);\n            this.scanEventLog();\n            return;\n        }\n        let latestBlockNumber = this.currentBlock;\n        try {\n            latestBlockNumber = await this.provider.getBlockNumber();\n        } catch(e) {\n            console.error('SwitchAcross scan except:', e);\n            await asleep(3000);\n            this.scanEventLog();\n            return;\n        }\n        let toBlock = Math.min(this.currentBlock+1000, latestBlockNumber);\n        // console.log('SwitchAcross scanEventLog...', this.provider.chainId, this.currentBlock, toBlock);\n        if(toBlock > this.currentBlock) {\n            let records = null;\n            try {\n                console.log('SwitchAcross getPastEvents...', this.provider.chainId, this.currentBlock, toBlock);\n                records = await this.contract.getPastEvents(\"TransferOuted\", {fromBlock: this.currentBlock, toBlock: toBlock});\n                // console.log('SwitchAcross getPastEvents records:', this.provider.chainId, records);\n                Object.keys(records).forEach(async (i)=>{\n                    let eventLog = {...records[i]};\n                    eventLog.chainId = this.provider.chainId;\n                    eventLog.eventName = \"TransferOuted\";\n                    console.log('getPastEvents eventLog:', this.subscribes.length, eventLog);\n                    this.subscribes.forEach((cb)=>{\n                        cb(eventLog);\n                    });\n                    this.currentBlock = Number(eventLog.blockNumber);\n                })\n                this.currentBlock = toBlock;\n            } catch(e) {\n                console.error('SwitchAcross scan getTransferOutedEvents:', this.provider.chainId, typeof(records), Array.isArray(records), records, e);\n            }\n        }\n        await asleep(3000);\n        this.scanEventLog();\n    }\n\n    findEventOneLog(logs) {\n        return web3Util.parseEventOneLog(this.provider.web3, SwitchAcrossABI, logs, 'TransferIned');\n    }\n\n    subscribe(cb) {\n        if(!this.subscribes.includes(cb)) {\n            console.log('SwitchAcrossInstance initSubscribe subscribe chainId:', this.provider.chainId);\n            this.subscribes.push(cb);\n        }\n    }\n\n    unsubscribe() {\n        this.subscriptions.forEach((subscription)=>{\n            subscription.unsubscribe(function(error, success){\n                if(success)\n                    console.log('Successfully unsubscribed!');\n            });\n        })\n    }\n\n    clean() {\n        console.log('clean...');\n        this.unsubscribe();\n    }\n\n    async getTokenInfo(token) {\n        this.tokenIns = new ERC20Token(this.provider, token);\n        return await this.tokenIns.info();\n    }\n\n    async getTokenOutInfo(tokenIn, toChainId) {\n        let key = tokenIn.toLowerCase()+'_'+toChainId;\n        let res = null;\n        if(!this.targetTokens.hasOwnProperty(key)) {\n            res = await this.contract.methods.targetTokens(tokenIn, toChainId).call();\n            if(!this.provider.isZeroAddress(res.tokenOut)) {\n                this.targetTokens[key] = res;\n            }\n        } else {\n            res = this.targetTokens[key];\n        }\n        return res;\n    }\n\n    async getSourceToken(tokenIn) {\n        let res = await this.contract.methods.sourceTokens(tokenIn).call();\n        let source = {...res};\n        source.tokenIn = tokenIn;\n        source.symbol = (await this.getTokenInfo(tokenIn)).symbol;\n        return source;\n    }\n\n    async iterateTokens(start, end) {\n        let count = await this.contract.methods.countToken().call();\n        count = Number(count);\n        if(end > count) {\n            end = count;\n        }\n        let data = [];\n        for(let i = start; i < end; i++) {\n            let token = await this.contract.methods.tokens(i).call();\n            let d = await this.getSourceToken(token);\n            d.targets = await this.getTargetTokensForSource(token);\n            data.push(d);\n        }\n        return data;\n    }\n\n    async getTargetToken(tokenIn, chainId) {\n        let key = tokenIn.toLowerCase()+'_'+chainId;\n        let res = await this.contract.methods.targetTokens(tokenIn, chainId).call();\n        let target = {...res};\n        target.symbol = '';\n        if(!this.provider.isZeroAddress(target.tokenOut)) {\n            let tokenIns = newERC20Token(chainId, target.tokenOut);\n            let tokenInfo = await tokenIns.info();\n            target.chainId = chainId;\n            target.symbol = tokenInfo.symbol;\n        }\n        this.targetTokens[key] = target;\n        return target;\n    }\n\n    async getTargetTokensForSource(tokenIn) {\n        let chainIds = getChainIds(this.provider.chainId);\n        let data = [];\n        for(let chainId of chainIds) {\n            if(chainId == this.provider.chainId) continue;\n            let d = await this.getTargetToken(tokenIn, chainId);\n            data.push(d);\n        }\n        return data;\n    }\n\n    async getInOrders(sn) {\n        return await this.contract.methods.getInOrders(sn).call();\n    }\n\n    async getOutOrders(sn) {\n        return await this.contract.methods.getOutOrders(sn).call();\n    }\n\n    async queryWithdraw(token, value) {\n        return await this.contract.methods.queryWithdraw(token, value).call();\n    }\n\n    async totalSlideOfToken(token) {\n        return await this.contract.methods.totalSlideOfToken(token).call();\n    }\n\n    async getOutInfo(tokenIn, toChainId, amountIn, mode) {\n        if (!mode) {\n            mode = 2\n        }\n        console.log('getOutInfo:', tokenIn, toChainId, amountIn, mode);\n        let tokenInInfo = await this.getTokenInfo(tokenIn)\n        let amountInStr = new BigNumber(amountIn).shiftedBy(1 * tokenInInfo.decimals).toFixed();\n        let res = await this.contract.methods.getOutInfo(tokenIn, toChainId, amountInStr, mode).call();\n        if(this.provider.isZeroAddress(res.tokenOut)) {\n            res.amountOut = '0';\n        }\n        let tokenOutInfo = await this.getTokenOutInfo(tokenIn, toChainId);\n        let d = {...res};\n        d.amountIn = amountIn;\n        d.amountOut = new BigNumber(res.amountOut).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n        d.slide = new BigNumber(res.slide).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n        d.fee = new BigNumber(res.fee).shiftedBy(-1 * this.gasDecimals).toFixed();\n        d.inLimit = new BigNumber(res.inLimit).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n        d.outLimit = new BigNumber(res.outLimit).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n\n\n        if(!isTicket(tokenOutInfo.tokenOut, toChainId)) {\n            let treasureBalance = await newSwitchTreasury(toChainId).queryWithdraw(this.address, tokenOutInfo.tokenOut);\n            if(new BigNumber(res.outLimit).gt(new BigNumber(treasureBalance))) {\n                d.outLimit = new BigNumber(treasureBalance).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n            }\n        }\n\n        return d;\n    }\n\n    async getInInfo(tokenIn, toChainId, amountOut, mode) {\n        if (!mode) {\n            mode = 2\n        }\n        let tokenOutInfo = await this.getTokenOutInfo(tokenIn, toChainId);\n        if(this.provider.isZeroAddress(tokenOutInfo.tokenOut)) {\n            d.amountOut = '0';\n        }\n        let amountOutStr = new BigNumber(amountOut).shiftedBy(1 * tokenOutInfo.decimals).toFixed();\n        console.log('inInfo:', tokenOutInfo, amountOutStr)\n        let tokenInInfo = await this.getTokenInfo(tokenIn)\n        let res = await this.contract.methods.getInInfo(tokenIn, toChainId, amountOutStr, mode).call();\n        let d = {...res};\n        d.amountOut = amountOut;\n        d.amountIn = new BigNumber(res.amountIn).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n        d.slide = new BigNumber(res.slide).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n        d.fee = new BigNumber(res.fee).shiftedBy(-1 * this.gasDecimals).toFixed();\n        d.inLimit = new BigNumber(res.inLimit).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n        d.outLimit = new BigNumber(res.outLimit).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n\n        if(!isTicket(tokenOutInfo.tokenOut, toChainId)) {\n            let treasureBalance = await newSwitchTreasury(toChainId).queryWithdraw(this.address, tokenOutInfo.tokenOut);\n            if(new BigNumber(res.outLimit).gt(new BigNumber(treasureBalance))) {\n                d.outLimit = new BigNumber(treasureBalance).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n            }\n        }\n        return d;\n    }\n\n    async transferIn(to, tokenIn, tokenOut, amountIn, amountOut, toChainId, fee, mode) {\n        if (!mode) {\n            mode = 2\n        }\n        let tokenInInfo = await this.getTokenInfo(tokenIn)\n        let amountInInt = new BigNumber(amountIn).shiftedBy(1 * tokenInInfo.decimals)\n\n        let tokenOutInfo = await this.contract.methods.targetTokens(tokenIn, toChainId).call();\n        let amountOutInt = new BigNumber(amountOut).shiftedBy(1 * tokenOutInfo.decimals)\n        let value = new BigNumber(fee).shiftedBy(1 * this.gasDecimals);\n        if (tokenIn.toLocaleLowerCase() == this.provider.ZERO_ADDR) {\n            value = value.plus(amountInInt)\n        }\n        let tokens = [tokenIn, tokenOut]\n        let values = [amountInInt.toFixed(), amountOutInt.toFixed(), toChainId, mode]\n        updateChainBlock(toChainId);\n        return await this.provider.executeContract(this.contract, 'transferIn', value.toFixed(), [to, tokens, values], this.handleTransferIn);\n    }\n\n    async transferOut(from, token0, token1, amountIn, amountOut, fromChainId, mode, slide, inSn, signature) {\n        if (!mode) {\n            mode = 0\n        }\n\n        let tokens = [token0, token1]\n        let values = [amountIn, amountOut, fromChainId, mode, slide, inSn]\n        return await this.provider.executeContract(this.contract, 'transferOut', 0, [from, tokens, values, signature], this.handleTransferOut);\n    }\n\n    async myTransferOut(data) {\n        if(data.process !=_process.step1_success) throw('myTransferOut: process must be step1_success');\n        if(Number(data.chainIdOut) != this.provider.chainId) throw('myTransferOut: invalid chainId');\n        let res = await this.handleTxWrap(data.chainIdIn, data.txIn);\n        console.log('myTransferOut handleTxWrap: ', res);\n        if(!res) throw('myTransferOut: network error');\n        if(res && res.data && res.data.status ==1) throw('myTransferOut: already hanlded');\n        if(res && res.data && res.data.status ==0 && !res.data.signature) throw('myTransferOut: invalid signature');\n        data = res.data;\n        return await this.transferOut(data.user, data.tokenIn, data.tokenOut, data.amountIn, data.amountOut, data.chainIdIn, data.mode, data.slide, data.inSn, data.signature);\n    }\n\n    async handleTransferIn(data) {\n        console.log('handleTransferIn:', data);\n        _switchData.process = _process.step1_pending;\n        _switchData.user = data.inputValues[0].toLowerCase();\n        _switchData.chainIdIn = Number(data.chainId);\n        _switchData.chainIdOut = Number(data.inputValues[2][2]);\n        _switchData.tokenIn = data.inputValues[1][0].toLowerCase();\n        _switchData.tokenOut = data.inputValues[1][1].toLowerCase();\n        _switchData.txIn = data.transactionHash;\n        _switchData.mode = Number(data.inputValues[2][3]);\n        _switchData.timeIn = new Date();\n        _switchData.updateTime= new Date();\n\n        let tokenInInfo = await newERC20Token(_switchData.chainIdIn, _switchData.tokenIn).info();\n        let tokenOutInfo = await newERC20Token(_switchData.chainIdOut, _switchData.tokenOut).info();\n        _switchData.tokenInSymbol = tokenInInfo.symbol;\n        _switchData.tokenOutSymbol = tokenOutInfo.symbol;\n        _switchData.amountIn = new BigNumber(data.inputValues[2][0]).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n        _switchData.amountOut = new BigNumber(data.inputValues[2][1]).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n        if(data.hasOwnProperty('status')) {\n            if(data.status) {\n                _switchData.process = _process.step1_success;\n            } else {\n                _switchData.process = _process.step1_fail;\n            }\n        }\n    }\n\n    async handleTransferOut(data) {\n        console.log('handleTransferOut:', data);\n        _switchData.process = _process.step2_pending;\n        _switchData.user = data.inputValues[0].toLowerCase();\n        _switchData.inSn = Number(data.inputValues[2][5]);\n        _switchData.chainIdIn = data.inputValues[2][2];\n        _switchData.chainIdOut = Number(data.chainId);\n        _switchData.tokenIn = data.inputValues[1][0].toLowerCase();\n        _switchData.tokenOut = data.inputValues[1][1].toLowerCase();\n        _switchData.txOut = data.transactionHash;\n        _switchData.updateTime= new Date();\n\n        let tokenInInfo = await newERC20Token(_switchData.chainIdIn, _switchData.tokenIn).info();\n        let tokenOutInfo = await newERC20Token(_switchData.chainIdOut, _switchData.tokenOut).info();\n        _switchData.tokenInSymbol = tokenInInfo.symbol;\n        _switchData.tokenOutSymbol = tokenOutInfo.symbol;\n        _switchData.amountIn = new BigNumber(data.inputValues[2][0]).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n        _switchData.amountOut = new BigNumber(data.inputValues[2][1]).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n\n        let _status = 0;\n        if(data.hasOwnProperty('status')) {\n            if(data.status) {\n                _switchData.timeOut = new Date();\n                _switchData.process = _process.step2_success;\n                _status = 1;\n            } else {\n                _switchData.process = _process.step2_fail;\n            }\n        }\n\n        let tableName = 'switchArcossHistory' + _switchData.user;\n        const local = localStorage.getItem(tableName);\n        if (local) {\n            let foundI = -1;\n            let ukey = _switchData.chainIdIn + '-' + _switchData.inSn;\n            _switchAcrossHistory.forEach((d, i) => {\n                if (d.ukey == ukey) {\n                    foundI = i\n                    return\n                }\n            })\n            if (foundI > -1) {\n                let item = {..._switchAcrossHistory[foundI]};\n                item.status = _status;\n                item.process= _switchData.process;\n                item.outSn = _switchData.outSn;\n                item.txOut = _switchData.txOut;\n                item.blockOut = _switchData.blockOut;\n                item.timeOut = new Date();\n                item.updateTime= new Date();\n                _switchAcrossHistory.splice(foundI, 1)\n            }\n            _switchAcrossHistory.unshift(item);\n            localStorage.setItem(tableName, JSON.stringify(_switchAcrossHistory));\n        }\n    }\n\n    resetSwitchData() {\n        _switchData = {..._switchDefaultData}\n        return _switchData;\n    }\n\n    async handleTxWrap(chainId, tx) {\n        let url = '/api/handleTx';\n        if([42,97,256].includes(chainId)) {\n            url = '/api-test/handleTx';\n        }\n        return await this.handleTx(chainId, tx, url);\n    }\n\n    async handleTx(chainId, tx, url) {\n        if(!url) {\n            if([42,97,256].includes(chainId)) {\n                url = 'https://switchfinance.xyz/api-test/handleTx';\n            } else {\n                url = 'https://switchfinance.xyz/api/handleTx';\n            }\n        }\n        let param = {\n            chainId: chainId,\n            tx: tx,\n        };\n        let res = await fetch(url, {\n            method: 'post',\n            body: JSON.stringify(param),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n        })\n\n        let text = await res.text();\n        return JSON.parse(text);\n    }\n}\n\nclass SwitchAcrossHistory extends Base {\n    constructor(provider) {\n        super(provider);\n        this.envName = 'main';\n        this.process = _process;\n    }\n\n    getEnvName() {\n        if([42,97,256].includes(this.provider.chainId)) {\n            return 'test';\n        }\n        return 'main';\n    }\n\n    initialize(chainId, account=null) {\n        console.log('SwitchAcrossHistory initialize...', this.provider.chainId);\n        super.initialize(chainId, account);\n        this.getAcrossTokens();\n        this.loadHistory();\n        let ids = getChainIds(this.provider.chainId);\n        for (let i=0; i<ids.length; i++) {\n            newSwitchAcross(ids[i]).subscribe(this.handleHistory);\n        }\n    }\n\n    // status, 0: pending 1:success\n    async handleHistory(log) {\n        let d = log.returnValues;\n        if(!isMyWallet(d.user)) {\n            return;\n        }\n        let tableName = 'switchArcossHistory' + d.user.toLowerCase();\n        let item = {..._switchData};\n        if(log.eventName == \"TransferIned\") {\n            updateSwitchCount(1);\n            item.ukey = log.chainId + '-' + d.sn;\n            item.status = 0;\n            item.process = _process.step1_success;\n            item.inSn = d.sn;\n            item.mode = Number(d.mode);\n            item.chainIdIn = Number(log.chainId);\n            item.chainIdOut = Number(d.chainId);\n            item.tokenIn = d.tokenIn.toLowerCase();\n            item.tokenOut = d.tokenOut.toLowerCase();\n            item.amountIn = d.amountIn;\n            item.amountOut = d.amountOut;\n            item.fee = d.fee;\n            item.slide = d.slide;\n            item.user = d.user.toLowerCase();\n            item.txIn = log.transactionHash;\n            item.blockIn = log.blockNumber;\n            item.timeIn = new Date();\n            item.updateTime= new Date();\n\n            let tokenInInfo = await newERC20Token(log.chainId, item.tokenIn).info();\n            let tokenOutInfo = await newERC20Token(d.chainId, item.tokenOut).info();\n            item.tokenInSymbol = tokenInInfo.symbol;\n            item.tokenOutSymbol = tokenOutInfo.symbol;\n            item.amountIn = new BigNumber(item.amountIn).shiftedBy(-1 * tokenInInfo.decimals).toFixed();\n            item.amountOut = new BigNumber(item.amountOut).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n            item.fee = new BigNumber(item.fee).shiftedBy(-18).toFixed();\n            item.slide = new BigNumber(item.slide).shiftedBy(-1 * tokenOutInfo.decimals).toFixed();\n\n        } else if(log.eventName == \"TransferOuted\") {\n            updateSwitchCount(-1);\n            item.ukey = d.chainId + '-' + d.inSn;\n        } else {\n            console.error('handleHistory unknown log:', log);\n            return;\n        }\n\n        const local = localStorage.getItem(tableName);\n        if (local) {\n            let foundI = -1;\n            _switchAcrossHistory.forEach((d, i) => {\n                if (d.ukey == item.ukey) {\n                    foundI = i\n                    return\n                }\n            })\n            if (foundI > -1) {\n                if(log.eventName == \"TransferOuted\") {\n                    item = {..._switchAcrossHistory[foundI]};\n                    item.status = 1;\n                    item.process= _process.step2_success;\n                    item.outSn = d.sn;\n                    item.txOut = log.transactionHash;\n                    item.blockOut = log.blockNumber;\n                    item.timeOut = new Date();\n                    item.updateTime= new Date();\n\n                    if(_switchData.chainIdIn == item.chainIdIn && _switchData.txIn == item.txIn) {\n                        _switchData.txOut = item.txOut;\n                        _switchData.timeOut = new Date();\n                        _switchData.updateTime= new Date();\n                        _switchData.process = _process.step2_success;\n                    }\n                }\n                _switchAcrossHistory.splice(foundI, 1)\n            }\n            _switchAcrossHistory.unshift(item);\n            localStorage.setItem(tableName, JSON.stringify(_switchAcrossHistory));\n        } else {\n            _switchAcrossHistory.unshift(item);\n            localStorage.setItem(tableName, JSON.stringify(_switchAcrossHistory));\n        }\n        console.log('handleHistory set:', item);\n    }\n\n    getHistory() {\n        return _switchAcrossHistory;\n    }\n\n    loadHistory() {\n        console.log('loadHistory user:', this.provider.getSelectedAddress());\n        if(!this.provider.getSelectedAddress()) {\n            return _switchAcrossHistory;\n        }\n        let tableName = 'switchArcossHistory' + this.provider.getSelectedAddress().toLowerCase();\n        const local = localStorage.getItem(tableName);\n        if (local) {\n            cleanSwitchCount();\n            _switchAcrossHistory.splice(0, _switchAcrossHistory.length);\n            let _data = JSON.parse(local);\n            for(let i=0; i<_data.length; i++) {\n                _switchAcrossHistory.push(_data[i]);\n                if(_data[i].status == 0) {\n                    updateSwitchCount(1);\n                }\n            }\n        }\n        return _switchAcrossHistory;\n    }\n\n    cleanHistory() {\n        let tableName = 'switchArcossHistory' + this.provider.getSelectedAddress().toLowerCase();;\n        localStorage.removeItem(tableName);\n        _switchAcrossHistory.splice(0, _switchAcrossHistory.length);\n    }\n\n    getAcrossTokens() {\n        this.envName = this.getEnvName();\n        _switchAcrossTokens = SwitchPools[this.envName];\n        for (let k in _switchAcrossTokens) {\n            if (_switchAcrossTokens[k].opened == true) {\n                _switchAcrossTokens[k].name = k\n                for (let i=0; i<_switchAcrossTokens[k].list.length; i++) {\n                    _switchAcrossTokens[k].list[i].isTicket = _switchAcrossTokens[k].isTicket;\n                }\n            }\n        };\n        return _switchAcrossTokens;\n    }\n}\n\nvar _SwitchAcrossInstanes = {}\nfunction newSwitchAcross(chainId) {\n    if(!_SwitchAcrossInstanes.hasOwnProperty(chainId)) {\n        let provider = Web3Provider(chainId);\n        _SwitchAcrossInstanes[chainId] = new SwitchAcross(provider);\n        _SwitchAcrossInstanes[chainId].initialize(chainId);\n        _SwitchAcrossInstanes[chainId].scanEventLog();\n    }\n    return _SwitchAcrossInstanes[chainId];\n}\n\nexport { SwitchAcross, SwitchAcrossHistory, newSwitchAcross }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1625222774796
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"filename\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/Base.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/Base.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/Base.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/Base.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
        "sourceFileName": "Base.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Base {\n  constructor(provider, abi, address) {\n    this.provider = provider;\n    this.abi = abi;\n    this.address = address;\n    provider.registerModule(this);\n  }\n\n  initialize(chainId, account = null) {\n    this.provider.chainId = chainId;\n\n    if (account) {\n      this.provider.account = account;\n    }\n\n    if (this.abi && this.address) {\n      this.contract = this.provider.getContract(this.abi, this.address);\n    }\n  }\n\n  initAfter() {}\n\n  clean() {}\n\n}\n\nexports.default = Base;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2UuanMiXSwibmFtZXMiOlsiQmFzZSIsImNvbnN0cnVjdG9yIiwicHJvdmlkZXIiLCJhYmkiLCJhZGRyZXNzIiwicmVnaXN0ZXJNb2R1bGUiLCJpbml0aWFsaXplIiwiY2hhaW5JZCIsImFjY291bnQiLCJjb250cmFjdCIsImdldENvbnRyYWN0IiwiaW5pdEFmdGVyIiwiY2xlYW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZSxNQUFNQSxJQUFOLENBQVc7QUFDdEJDLEVBQUFBLFdBQVcsQ0FBQ0MsUUFBRCxFQUFXQyxHQUFYLEVBQWdCQyxPQUFoQixFQUF5QjtBQUNoQyxTQUFLRixRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLFNBQUtDLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLE9BQUwsR0FBZUEsT0FBZjtBQUNBRixJQUFBQSxRQUFRLENBQUNHLGNBQVQsQ0FBd0IsSUFBeEI7QUFDSDs7QUFFREMsRUFBQUEsVUFBVSxDQUFDQyxPQUFELEVBQVVDLE9BQU8sR0FBQyxJQUFsQixFQUF3QjtBQUM5QixTQUFLTixRQUFMLENBQWNLLE9BQWQsR0FBd0JBLE9BQXhCOztBQUNBLFFBQUdDLE9BQUgsRUFBWTtBQUNSLFdBQUtOLFFBQUwsQ0FBY00sT0FBZCxHQUF3QkEsT0FBeEI7QUFDSDs7QUFDRCxRQUFHLEtBQUtMLEdBQUwsSUFBWSxLQUFLQyxPQUFwQixFQUE2QjtBQUN6QixXQUFLSyxRQUFMLEdBQWdCLEtBQUtQLFFBQUwsQ0FBY1EsV0FBZCxDQUEwQixLQUFLUCxHQUEvQixFQUFvQyxLQUFLQyxPQUF6QyxDQUFoQjtBQUNIO0FBQ0o7O0FBRURPLEVBQUFBLFNBQVMsR0FBRyxDQUVYOztBQUVEQyxFQUFBQSxLQUFLLEdBQUcsQ0FFUDs7QUF4QnFCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9seWRpYS9EZXNrdG9wL3dvcmtTcGFjZS9kZXgvZGVtYXgtYnJpZGdlLXNkay9zcmMvc2RrL21vZGVsLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKHByb3ZpZGVyLCBhYmksIGFkZHJlc3MpIHtcbiAgICAgICAgdGhpcy5wcm92aWRlciA9IHByb3ZpZGVyO1xuICAgICAgICB0aGlzLmFiaSA9IGFiaTtcbiAgICAgICAgdGhpcy5hZGRyZXNzID0gYWRkcmVzcztcbiAgICAgICAgcHJvdmlkZXIucmVnaXN0ZXJNb2R1bGUodGhpcyk7XG4gICAgfVxuXG4gICAgaW5pdGlhbGl6ZShjaGFpbklkLCBhY2NvdW50PW51bGwpIHtcbiAgICAgICAgdGhpcy5wcm92aWRlci5jaGFpbklkID0gY2hhaW5JZDtcbiAgICAgICAgaWYoYWNjb3VudCkge1xuICAgICAgICAgICAgdGhpcy5wcm92aWRlci5hY2NvdW50ID0gYWNjb3VudDtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLmFiaSAmJiB0aGlzLmFkZHJlc3MpIHtcbiAgICAgICAgICAgIHRoaXMuY29udHJhY3QgPSB0aGlzLnByb3ZpZGVyLmdldENvbnRyYWN0KHRoaXMuYWJpLCB0aGlzLmFkZHJlc3MpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGluaXRBZnRlcigpIHtcblxuICAgIH1cblxuICAgIGNsZWFuKCkge1xuICAgICAgICBcbiAgICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Base.js"
      ],
      "names": [
        "Base",
        "constructor",
        "provider",
        "abi",
        "address",
        "registerModule",
        "initialize",
        "chainId",
        "account",
        "contract",
        "getContract",
        "initAfter",
        "clean"
      ],
      "mappings": ";;;;;;;AAAe,MAAMA,IAAN,CAAW;AACtBC,EAAAA,WAAW,CAACC,QAAD,EAAWC,GAAX,EAAgBC,OAAhB,EAAyB;AAChC,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAeA,OAAf;AACAF,IAAAA,QAAQ,CAACG,cAAT,CAAwB,IAAxB;AACH;;AAEDC,EAAAA,UAAU,CAACC,OAAD,EAAUC,OAAO,GAAC,IAAlB,EAAwB;AAC9B,SAAKN,QAAL,CAAcK,OAAd,GAAwBA,OAAxB;;AACA,QAAGC,OAAH,EAAY;AACR,WAAKN,QAAL,CAAcM,OAAd,GAAwBA,OAAxB;AACH;;AACD,QAAG,KAAKL,GAAL,IAAY,KAAKC,OAApB,EAA6B;AACzB,WAAKK,QAAL,GAAgB,KAAKP,QAAL,CAAcQ,WAAd,CAA0B,KAAKP,GAA/B,EAAoC,KAAKC,OAAzC,CAAhB;AACH;AACJ;;AAEDO,EAAAA,SAAS,GAAG,CAEX;;AAEDC,EAAAA,KAAK,GAAG,CAEP;;AAxBqB",
      "sourceRoot": "/Users/lydia/Desktop/workSpace/dex/demax-bridge-sdk/src/sdk/model/",
      "sourcesContent": [
        "export default class Base {\n    constructor(provider, abi, address) {\n        this.provider = provider;\n        this.abi = abi;\n        this.address = address;\n        provider.registerModule(this);\n    }\n\n    initialize(chainId, account=null) {\n        this.provider.chainId = chainId;\n        if(account) {\n            this.provider.account = account;\n        }\n        if(this.abi && this.address) {\n            this.contract = this.provider.getContract(this.abi, this.address);\n        }\n    }\n    \n    initAfter() {\n\n    }\n\n    clean() {\n        \n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1623929811233
  }
}